{"ast":null,"code":"import _asyncToGenerator from \"/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Swal from 'sweetalert2';\nimport { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/report-designer/report-designer.service\";\nimport * as i2 from \"../../service/preguntas/preguntas.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-print\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/core\";\nconst _c0 = [\"contenido\"];\n\nfunction GenratePdfComponent_div_4_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r5.texto, \" \");\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_2_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"IMG\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_2_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 9);\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"width\", element_r5.ancho - 3, \"px\")(\"height\", element_r5.largo - 3, \"px\");\n    i0.ɵɵproperty(\"src\", ctx_r12.url + \"/img-uploads/\" + element_r5.imagen_url, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, GenratePdfComponent_div_4_div_1_div_2_p_1_Template, 2, 0, \"p\", 7);\n    i0.ɵɵtemplate(2, GenratePdfComponent_div_4_div_1_div_2_img_2_Template, 1, 5, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.imagen_url === \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.imagen_url !== \"\");\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_3_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r16 = ctx.$implicit;\n    const element_r5 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵstyleProp(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", field_r16.label, \"\");\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"table\", 10);\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵtemplate(4, GenratePdfComponent_div_4_div_1_div_3_th_4_Template, 2, 9, \"th\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵelementStart(6, \"tr\");\n    i0.ɵɵelementStart(7, \"td\", 12);\n    i0.ɵɵtext(8, \" Aqu\\u00ED se incluir\\u00E1 la informaci\\u00F3n de la tabla.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_head)(\"color\", element_r5.color_head);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", element_r5.head);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_body)(\"color\", element_r5.color_body)(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵproperty(\"colSpan\", element_r5.head.length);\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-grid-list\", 14);\n    i0.ɵɵelementStart(2, \"mat-grid-tile\", 15);\n    i0.ɵɵelementStart(3, \"div\", 16);\n    i0.ɵɵelement(4, \"img\", 17);\n    i0.ɵɵelementStart(5, \"div\", 16);\n    i0.ɵɵelementStart(6, \"h6\", 18);\n    i0.ɵɵtext(7, \"Registro Fotogr\\u00E1fico N\\u00B0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"span\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-grid-tile\");\n    i0.ɵɵelementStart(10, \"div\", 16);\n    i0.ɵɵelement(11, \"img\", 17);\n    i0.ɵɵelementStart(12, \"div\", 16);\n    i0.ɵɵelementStart(13, \"h6\", 18);\n    i0.ɵɵtext(14, \"Registro Fotogr\\u00E1fico N\\u00B0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"span\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mat-grid-tile\");\n    i0.ɵɵelementStart(17, \"div\", 16);\n    i0.ɵɵelement(18, \"img\", 17);\n    i0.ɵɵelementStart(19, \"div\", 16);\n    i0.ɵɵelementStart(20, \"h6\", 18);\n    i0.ɵɵtext(21, \"Registro Fotogr\\u00E1fico N\\u00B0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"span\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"mat-grid-tile\");\n    i0.ɵɵelement(24, \"img\", 19);\n    i0.ɵɵelementStart(25, \"div\", 16);\n    i0.ɵɵelement(26, \"img\", 17);\n    i0.ɵɵelementStart(27, \"div\", 16);\n    i0.ɵɵelementStart(28, \"h6\", 18);\n    i0.ɵɵtext(29, \"Registro Fotogr\\u00E1fico N\\u00B0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"span\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cols\", element_r5.cantidad_columna)(\"rowHeight\", element_r5.altura_fila);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_foto)(\"color\", element_r5.color_foto)(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"assets/img/cropped-logo-1.jpg\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_foto)(\"color\", element_r5.color_foto)(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"assets/img/cropped-logo-1.jpg\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_foto)(\"color\", element_r5.color_foto)(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"assets/img/cropped-logo-1.jpg\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_foto)(\"color\", element_r5.color_foto)(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", \"assets/img/cropped-logo-1.jpg\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, GenratePdfComponent_div_4_div_1_div_1_Template, 2, 1, \"div\", 7);\n    i0.ɵɵtemplate(2, GenratePdfComponent_div_4_div_1_div_2_Template, 3, 2, \"div\", 7);\n    i0.ɵɵtemplate(3, GenratePdfComponent_div_4_div_1_div_3_Template, 9, 18, \"div\", 7);\n    i0.ɵɵtemplate(4, GenratePdfComponent_div_4_div_1_div_4_Template, 31, 54, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"top\", element_r5.y, \"px\")(\"left\", element_r5.x, \"px\")(\"width\", element_r5.ancho, \"px\")(\"height\", element_r5.largo, \"px\")(\"font-size\", element_r5.tamano_texto, \"px\")(\"font-weight\", element_r5.negrita ? \"bold\" : \"normal\")(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\")(\"text-align\", element_r5.alineacion)(\"background-color\", element_r5.relleno)(\"color\", element_r5.color_letra)(\"font-family\", element_r5.fuente);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.tipo === \"texto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.tipo === \"imagen\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.tipo === \"tabla\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.tipo === \"registroFotografico\");\n  }\n}\n\nfunction GenratePdfComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, GenratePdfComponent_div_4_div_1_Template, 5, 32, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"width\", item_r2.tamano.width, \"px\")(\"height\", item_r2.tamano.height, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r2.elements);\n  }\n}\n\nexport class GenratePdfComponent {\n  constructor(_reportDesignerService, _preguntasService, _activatedRoute) {\n    this._reportDesignerService = _reportDesignerService;\n    this._preguntasService = _preguntasService;\n    this._activatedRoute = _activatedRoute;\n    this.pages = [];\n    this.url = environment.url;\n\n    this._activatedRoute.params.subscribe(params => {\n      this.informe = params['informe_id'];\n    });\n  }\n\n  ngOnInit() {\n    this.onGetInforme();\n  }\n\n  onGetInforme() {\n    this._preguntasService.getPreguntas(this.informe).subscribe(res => {\n      this.encabezado = res.body.encabezado;\n      console.log(this.encabezado);\n      this.onGetPages();\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  onGetPages() {\n    this._reportDesignerService.getPages(this.informe).subscribe(res => {\n      this.pages = res.body;\n      this.generarPDF();\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  generarPDF() {\n    return _asyncToGenerator(function* () {})();\n  }\n\n}\n\nGenratePdfComponent.ɵfac = function GenratePdfComponent_Factory(t) {\n  return new (t || GenratePdfComponent)(i0.ɵɵdirectiveInject(i1.ReportDesignerService), i0.ɵɵdirectiveInject(i2.PreguntasService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\n\nGenratePdfComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GenratePdfComponent,\n  selectors: [[\"app-genrate-pdf\"]],\n  viewQuery: function GenratePdfComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contenidoPdf = _t.first);\n    }\n  },\n  decls: 5,\n  vars: 2,\n  consts: [[\"printSectionId\", \"contenido\", \"ngxPrint\", \"\", 1, \"btn\", \"btn-print\", 3, \"useExistingCss\"], [\"id\", \"contenido\", 1, \"report\", 2, \"width\", \"864px\"], [\"contenido\", \"\"], [\"class\", \"page\", 3, \"width\", \"height\", 4, \"ngFor\", \"ngForOf\"], [1, \"page\"], [\"class\", \"report-element\", 3, \"top\", \"left\", \"width\", \"height\", \"font-size\", \"font-weight\", \"border-top\", \"border-bottom\", \"border-right\", \"border-left\", \"text-align\", \"background-color\", \"color\", \"font-family\", 4, \"ngFor\", \"ngForOf\"], [1, \"report-element\"], [4, \"ngIf\"], [3, \"src\", \"width\", \"height\", 4, \"ngIf\"], [3, \"src\"], [1, \"table\"], [\"scope\", \"col\", 3, \"border-top\", \"border-bottom\", \"border-right\", \"border-left\", 4, \"ngFor\", \"ngForOf\"], [2, \"text-align\", \"center\", 3, \"colSpan\"], [\"scope\", \"col\"], [3, \"cols\", \"rowHeight\"], [2, \"display\", \"grid !important\"], [2, \"width\", \"100%\"], [\"mat-card-image\", \"\", \"top\", \"\", 1, \"img\", 3, \"src\"], [\"mat-line\", \"\"], [\"mat-card-image\", \"\", 1, \"img\"]],\n  template: function GenratePdfComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Guarda documento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1, 2);\n      i0.ɵɵtemplate(4, GenratePdfComponent_div_4_Template, 2, 5, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"useExistingCss\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n    }\n  },\n  directives: [i4.NgxPrintDirective, i5.NgForOf, i5.NgIf, i6.MatGridList, i6.MatGridTile, i7.MatCardImage, i8.MatLine],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJnZW5yYXRlLXBkZi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/src/app/components/genrate-pdf/genrate-pdf.component.ts","/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/src/app/components/genrate-pdf/genrate-pdf.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { environment } from \"../../../environments/environment\";\n\n/* SERVICE */\n\nimport { ReportDesignerService } from \"../../service/report-designer/report-designer.service\"\nimport { PreguntasService } from \"../../service/preguntas/preguntas.service\";\n\n@Component({\n  selector: 'app-genrate-pdf',\n  templateUrl: './genrate-pdf.component.html',\n  styleUrls: ['./genrate-pdf.component.css']\n})\nexport class GenratePdfComponent implements OnInit {\n\n  encabezado: any\n  contenido: any\n\n  @ViewChild('contenido', { static: false }) contenidoPdf!: ElementRef;\n  url: string;\n\n  pages: any[] = []\n  informe: any\n\n  constructor(private _reportDesignerService: ReportDesignerService, private _preguntasService: PreguntasService, private _activatedRoute: ActivatedRoute) {\n    this.url = environment.url;\n    this._activatedRoute.params.subscribe(params => {\n      this.informe = params['informe_id'];\n\n    })\n  }\n\n  ngOnInit(): void {\n    this.onGetInforme()\n  }\n  onGetInforme() {\n\n    this._preguntasService.getPreguntas(this.informe).subscribe((res: any) => {\n      this.encabezado = res.body.encabezado\n      console.log(this.encabezado)\n      this.onGetPages()\n\n    }, error => {\n      var errorMessage = <any>error;\n      if (errorMessage != null) {\n        var body = error.error\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n\n          })\n        }\n      }\n    })\n\n  }\n\n  onGetPages() {\n\n    this._reportDesignerService.getPages(this.informe).subscribe((res: any) => {\n      this.pages = res.body;\n     this.generarPDF()\n\n    }, error => {\n      var errorMessage = <any>error;\n      if (errorMessage != null) {\n        var body = error.error\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n\n          })\n        }\n      }\n    })\n\n  }\n\n  async generarPDF() {\n\n  }\n}\n","<button class=\"btn btn-print\" printSectionId=\"contenido\" [useExistingCss]=\"true\" ngxPrint >Guarda documento</button>\n\n<div class=\"report\" #contenido id=\"contenido\"  style=\"width: 864px;\">\n  <div  *ngFor=\"let item of pages;  let i = index\" class=\"page\" [style.width.px]=\"item.tamano.width\"\n    [style.height.px]=\"item.tamano.height\">\n\n    <div class=\"report-element\" *ngFor=\"let element of item.elements\" [style.top.px]=\"element.y\"\n      [style.left.px]=\"element.x\"  [style.width.px]=\"element.ancho\"\n      [style.height.px]=\"element.largo\" [style.font-size.px]=\"element.tamano_texto\"\n      [style.font-weight]=\"element.negrita ? 'bold' : 'normal'\"\n      [style.border-top]=\"element.border_top ? '1px solid #000' : ''\"\n      [style.border-bottom]=\"element.border_bottom ? '1px solid #000' : ''\"\n      [style.border-right]=\"element.border_right ? '1px solid #000' : ''\"\n      [style.border-left]=\"element.border_left ? '1px solid #000' : ''\" [style.text-align]=\"element.alineacion\"\n      [style.background-color]=\"element.relleno\" [style.color]=\"element.color_letra\"\n      [style.font-family]=\"element.fuente\">\n      <div *ngIf=\"element.tipo === 'texto'\" >\n        {{element.texto}}\n      </div>\n\n      <div *ngIf=\"element.tipo === 'imagen'\">\n        <p *ngIf=\"element.imagen_url === '' \">IMG</p>\n        <img *ngIf=\"element.imagen_url !== '' \" [src]=\"url+'/img-uploads/'+ element.imagen_url\"\n          [style.width.px]=\"element.ancho - 3\" [style.height.px]=\"element.largo - 3\" />\n      </div>\n\n      <div *ngIf=\"element.tipo === 'tabla'\">\n        <table class=\"table\">\n          <thead [style.background-color]=\"element.relleno_head\" [style.color]=\"element.color_head\">\n            <tr>\n              <th scope=\"col\" [style.border-top]=\"element.border_top ? '1px solid #000' : ''\"\n                [style.border-bottom]=\"element.border_bottom ? '1px solid #000' : ''\"\n                [style.border-right]=\"element.border_right ? '1px solid #000' : ''\"\n                [style.border-left]=\"element.border_left ? '1px solid #000' : ''\" *ngFor=\"let field of element.head\">\n                {{ field.label }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td [style.background-color]=\"element.relleno_body\" [style.color]=\"element.color_body\"\n                [style.border-top]=\"element.border_top ? '1px solid #000' : ''\"\n                [style.border-bottom]=\"element.border_bottom ? '1px solid #000' : ''\"\n                [style.border-right]=\"element.border_right ? '1px solid #000' : ''\"\n                [style.border-left]=\"element.border_left ? '1px solid #000' : ''\" [colSpan]=\"element.head.length\"\n                style=\"text-align: center;\">\n                Aquí se incluirá la información de la tabla.</td>\n\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div *ngIf=\"element.tipo === 'registroFotografico'\">\n        <mat-grid-list [cols]=\"element.cantidad_columna\" [rowHeight]=\"element.altura_fila\">\n          <mat-grid-tile style=\"display: grid !important;\" [style.background-color]=\"element.relleno_foto\"\n            [style.color]=\"element.color_foto\" [style.border-top]=\"element.border_top ? '1px solid #000' : ''\"\n            [style.border-bottom]=\"element.border_bottom ? '1px solid #000' : ''\"\n            [style.border-right]=\"element.border_right ? '1px solid #000' : ''\"\n            [style.border-left]=\"element.border_left ? '1px solid #000' : ''\">\n\n            <div style=\"width: 100%;\">\n              <img mat-card-image [src]=\"'assets/img/cropped-logo-1.jpg'\" top class=\"img\">\n              <div style=\"width: 100%;\">\n                <h6 mat-line>Registro Fotográfico N°</h6>\n                <span mat-line> </span>\n              </div>\n            </div>\n\n\n          </mat-grid-tile>\n          <mat-grid-tile [style.background-color]=\"element.relleno_foto\" [style.color]=\"element.color_foto\"\n            [style.border-top]=\"element.border_top ? '1px solid #000' : ''\"\n            [style.border-bottom]=\"element.border_bottom ? '1px solid #000' : ''\"\n            [style.border-right]=\"element.border_right ? '1px solid #000' : ''\"\n            [style.border-left]=\"element.border_left ? '1px solid #000' : ''\">\n\n            <div style=\"width: 100%;\">\n              <img mat-card-image [src]=\"'assets/img/cropped-logo-1.jpg'\" top class=\"img\">\n              <div style=\"width: 100%;\">\n                <h6 mat-line>Registro Fotográfico N°</h6>\n                <span mat-line> </span>\n              </div>\n            </div>\n          </mat-grid-tile>\n          <mat-grid-tile [style.background-color]=\"element.relleno_foto\" [style.color]=\"element.color_foto\"\n            [style.border-top]=\"element.border_top ? '1px solid #000' : ''\"\n            [style.border-bottom]=\"element.border_bottom ? '1px solid #000' : ''\"\n            [style.border-right]=\"element.border_right ? '1px solid #000' : ''\"\n            [style.border-left]=\"element.border_left ? '1px solid #000' : ''\">\n\n            <div style=\"width: 100%;\">\n              <img mat-card-image [src]=\"'assets/img/cropped-logo-1.jpg'\" top class=\"img\">\n              <div style=\"width: 100%;\">\n                <h6 mat-line>Registro Fotográfico N°</h6>\n                <span mat-line> </span>\n              </div>\n            </div>\n\n\n          </mat-grid-tile>\n          <mat-grid-tile [style.background-color]=\"element.relleno_foto\" [style.color]=\"element.color_foto\"\n            [style.border-top]=\"element.border_top ? '1px solid #000' : ''\"\n            [style.border-bottom]=\"element.border_bottom ? '1px solid #000' : ''\"\n            [style.border-right]=\"element.border_right ? '1px solid #000' : ''\"\n            [style.border-left]=\"element.border_left ? '1px solid #000' : ''\">\n            <img mat-card-image class=\"img\">\n\n\n            <div style=\"width: 100%;\">\n              <img mat-card-image [src]=\"'assets/img/cropped-logo-1.jpg'\" top class=\"img\">\n              <div style=\"width: 100%;\">\n                <h6 mat-line>Registro Fotográfico N°</h6>\n                <span mat-line> </span>\n              </div>\n            </div>\n\n\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n\n    </div>\n\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}