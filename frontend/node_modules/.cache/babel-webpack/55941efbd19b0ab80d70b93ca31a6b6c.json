{"ast":null,"code":"import _asyncToGenerator from \"/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { environment } from '../../../environments/environment';\nimport { NuevaOrden, EditarOrden } from '../../models/ordenes';\nimport Swal from 'sweetalert2';\nimport * as moment from 'moment';\nlet OrdenesComponent = class OrdenesComponent {\n  constructor(_http, _socketService, _serviceOrdenes, _serviceUsuarios, _proyectosService, _subproyectosService, _serviceImplemento) {\n    this._http = _http;\n    this._socketService = _socketService;\n    this._serviceOrdenes = _serviceOrdenes;\n    this._serviceUsuarios = _serviceUsuarios;\n    this._proyectosService = _proyectosService;\n    this._subproyectosService = _subproyectosService;\n    this._serviceImplemento = _serviceImplemento;\n    this.ordenes = [];\n    this.proyectos = [];\n    this.subProyectos = [];\n    this.usuariosOrdenes = [];\n    this.implementosOrdenes = [];\n    this.usuarios = [];\n    this.newImplemento = {\n      implemento_id: ''\n    };\n    this.newUsuario = {\n      fecha_visita: '',\n      Usuario_id: ''\n    };\n    this.implementosTable = [];\n    this.usuariosTable = [];\n    this.url = environment.url;\n    this.NuevaOrden = new NuevaOrden('', '', new Date(), '', '', '');\n    this.EditarOrden = new EditarOrden('', '', '', new Date(), '', '', '');\n    this.identity = _serviceUsuarios.getIdentity();\n  }\n\n  ngOnInit() {\n    this.getOrdenes();\n  }\n\n  getOrdenes() {\n    if (this.identity.perfil == \"Operador\") {\n      var id = this.identity.id;\n    } else {\n      var id = null;\n    }\n\n    this._serviceOrdenes.getOrdenes(id).subscribe(res => {\n      if (res.status === 200) {\n        this.ordenes = res.body;\n      }\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 401) {\n          this.message = body.body.message;\n        }\n\n        if (error.status === 404) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'info',\n            title: body.body.message\n          });\n        } else if (error.status === 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status === 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  getProyectos() {\n    this._proyectosService.getProyectos().subscribe(res => {\n      this.proyectos = res.body;\n    });\n  }\n\n  getSubProyectos(idProyecto) {\n    console.log(idProyecto);\n\n    this._subproyectosService.getSubproyectos(idProyecto).subscribe(res => {\n      this.subProyectos = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 404) {\n          this.subProyectos = [];\n          Swal.fire({\n            title: `¡No hay subproyectos vinculados a este proyecto! <a href=\"/sub-proyectos/${idProyecto}\">Agregar uno</a>`,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        } else if (error.status === 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status === 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  getUsuariosSelect() {\n    this._serviceUsuarios.getUsuariosSelect().subscribe(res => {\n      this.usuarios = res.body;\n    });\n  }\n\n  getUsuarioOrdenes(id) {\n    console.log(id);\n\n    this._serviceOrdenes.getUsuariosOrdenes(id).subscribe(res => {\n      this.usuariosOrdenes = res.body;\n    });\n  }\n\n  getImplementoSelect() {\n    this._serviceImplemento.getImplementoSelect().subscribe(res => {\n      this.implementosOrdenes = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  agregar_implemento() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const name_implemento = $('#implementoSelect option:selected').text();\n\n      if (_this.newImplemento.implemento_id == '') {\n        _this.errorImplementoAdd = 'Ingrese un Implemento valido';\n      } else {\n        if (_this.implementosTable.filter(element => element.id === _this.newImplemento.implemento_id) != 0) {\n          _this.errorImplementoAdd = 'Ya hay un implemento registrado';\n        } else {\n          let data = {\n            implemento_name: name_implemento,\n            id: _this.newImplemento.implemento_id\n          };\n          yield _this.implementosTable.push(data);\n          _this.errorImplementoAdd = null;\n          _this.newImplemento = {\n            implemento_id: ''\n          };\n        }\n      }\n    })();\n  }\n\n  remover_implemento(idImplemento) {\n    this.implementosTable.splice(idImplemento, 1);\n  }\n\n  agregar_usuario() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const name_usuario = $('#usuarioSelect option:selected').text();\n\n      if (_this2.newUsuario.Usuario_id == '') {\n        _this2.errorUsuarioAdd = 'Ingrese un usuario valido';\n      } else {\n        if (_this2.usuariosTable.filter(element => element.id === _this2.newUsuario.Usuario_id) != 0) {\n          _this2.errorUsuarioAdd = 'Ya hay un implemento registrado';\n        } else {\n          let data = {\n            usuario_name: name_usuario,\n            id: _this2.newUsuario.Usuario_id\n          };\n          yield _this2.usuariosTable;\n          _this2.errorUsuarioAdd = null;\n          _this2.newUsuario.fecha_visita = '';\n          _this2.newUsuario.Usuario_id = '';\n        }\n      }\n    })();\n  }\n\n  remover_usuario(idUsuario) {\n    this.usuariosTable.splice(idUsuario, 1);\n  }\n\n  calculateDiff(data) {\n    let date = moment(new Date(data.fecha_visita).toISOString().slice(0, 10));\n    let currentDate = moment(new Date().toISOString().slice(0, 10));\n    let dias = date.diff(currentDate, 'days');\n\n    if (dias <= 1) {\n      var dia = `Falta ${dias} Dia`;\n\n      if (dias < 1) {\n        var dia = `Faltan 0 Dias`;\n      }\n    } else {\n      var dia = `Faltan ${dias} Dias`;\n    }\n\n    return dia;\n  }\n\n};\nOrdenesComponent = __decorate([Component({\n  selector: 'app-ordenes',\n  templateUrl: './ordenes.component.html',\n  styleUrls: ['./ordenes.component.css']\n})], OrdenesComponent);\nexport { OrdenesComponent };","map":{"version":3,"sources":["/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/src/app/components/ordenes/ordenes.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\n\nimport { SocketService } from '../../service/sockets/socket.service';\n\nimport { OrdenesService } from '../../service/ordenes/ordenes.service';\nimport { ProyectosService } from '../../service/proyectos/proyectos.service';\nimport { SubproyectosService } from \"../../service/subproyectos/subproyectos.service\";\nimport { UsuariosService } from 'src/app/service/usuarios/usuarios.service';\nimport { ImplementosService } from 'src/app/service/implementos/implementos.service';\n\nimport { HttpClient } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport { environment } from '../../../environments/environment';\n\nimport {\n  NuevaOrden,\n  EditarOrden,\n} from '../../models/ordenes';\n\nimport Swal from 'sweetalert2';\n\nimport * as moment from 'moment'\n\ndeclare let $: any;\n\n@Component({\n  selector: 'app-ordenes',\n  templateUrl: './ordenes.component.html',\n  styleUrls: ['./ordenes.component.css']\n})\nexport class OrdenesComponent implements OnInit {\n  public ordenes: any = [];\n  public url: string;\n  public proyectos: any = []\n  public subProyectos: any = []\n  public usuariosOrdenes: any = []\n  public implementosOrdenes: any = []\n  public usuarios: any = []\n  public NuevaOrden: any;\n  public EditarOrden: any;\n  public message: any;\n  public errorSerialMessage: any;\n  public newImplemento = {\n    implemento_id: ''\n  }\n  public newUsuario = {\n    fecha_visita: '',\n    Usuario_id: ''\n  }\n  public identity: any\n  public implementosTable: any = []\n  public usuariosTable: any = []\n  public errorUsuarioAdd: any\n  public errorImplementoAdd: any\n\n  constructor(\n    private _http: HttpClient,\n    private _socketService: SocketService,\n    private _serviceOrdenes: OrdenesService,\n    private _serviceUsuarios: UsuariosService,\n    private _proyectosService: ProyectosService,\n    private _subproyectosService: SubproyectosService,\n    private _serviceImplemento: ImplementosService\n  ) {\n    this.url = environment.url;\n    this.NuevaOrden = new NuevaOrden('', '', new Date(), '', '', '');\n    this.EditarOrden = new EditarOrden('', '', '', new Date(), '', '', '');\n    this.identity = _serviceUsuarios.getIdentity();\n  }\n\n\n  ngOnInit(): void {\n    this.getOrdenes()\n  }\n\n  getOrdenes() {\n\n    if (this.identity.perfil == \"Operador\") {\n      var id = this.identity.id\n    }\n    else {\n      var id = null;\n    }\n\n    this._serviceOrdenes.getOrdenes(id).subscribe(\n      (res: any) => {\n        if (res.status === 200) {\n          this.ordenes = res.body;\n        }\n      },\n      (error) => {\n        var errorMessage = <any>error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status === 401) {\n            this.message = body.body.message\n          }\n\n          if (error.status === 404) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'info',\n              title: body.body.message,\n            });\n          } else if (error.status === 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message,\n            });\n          } else if (error.status === 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet',\n            });\n          }\n        }\n      }\n    );\n  }\n\n  getProyectos() {\n\n    this._proyectosService.getProyectos().subscribe((res: any) => {\n\n      this.proyectos = res.body\n\n\n    })\n\n\n\n  }\n\n  getSubProyectos(idProyecto: string) {\n    console.log(idProyecto)\n    this._subproyectosService.getSubproyectos(idProyecto).subscribe((res: any) => {\n\n      this.subProyectos = res.body\n\n    },\n      (error) => {\n        var errorMessage = <any>error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status === 404) {\n            this.subProyectos = []\n\n            Swal.fire({\n              title: `¡No hay subproyectos vinculados a este proyecto! <a href=\"/sub-proyectos/${idProyecto}\">Agregar uno</a>`,\n              icon: 'warning',\n              confirmButtonText: 'Cerrar',\n            });\n\n          } else if (error.status === 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message,\n            });\n          } else if (error.status === 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet',\n            });\n          }\n        }\n      })\n  }\n\n  getUsuariosSelect() {\n    this._serviceUsuarios.getUsuariosSelect().subscribe((res: any) => {\n      this.usuarios = res.body\n    })\n  }\n\n  getUsuarioOrdenes(id: any) {\n\n    console.log(id)\n\n    this._serviceOrdenes.getUsuariosOrdenes(id).subscribe((res: any) => {\n\n      this.usuariosOrdenes = res.body\n    })\n\n  }\n\n  getImplementoSelect() {\n\n    this._serviceImplemento.getImplementoSelect().subscribe((res: any) => {\n\n      this.implementosOrdenes = res.body\n\n    }, error => {\n      var errorMessage = <any>error;\n\n      if (errorMessage != null) {\n        var body = error.error\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar',\n          });\n        }\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          })\n        }\n      }\n    })\n  }\n\n  async agregar_implemento() {\n\n    const name_implemento = $('#implementoSelect option:selected').text()\n\n    if (this.newImplemento.implemento_id == '') {\n      this.errorImplementoAdd = 'Ingrese un Implemento valido'\n    } else {\n\n      if (this.implementosTable.filter((element: any) => element.id === this.newImplemento.implemento_id) != 0) {\n        this.errorImplementoAdd = 'Ya hay un implemento registrado'\n      } else {\n\n        let data = { implemento_name: name_implemento, id: this.newImplemento.implemento_id }\n\n        await this.implementosTable.push(data);\n        this.errorImplementoAdd = null;\n        this.newImplemento = { implemento_id: '' }\n      }\n    }\n  }\n\n  remover_implemento(idImplemento: any) {\n    this.implementosTable.splice(idImplemento, 1);\n  }\n\n  async agregar_usuario() {\n\n    const name_usuario = $('#usuarioSelect option:selected').text()\n\n    if (this.newUsuario.Usuario_id == '') {\n      this.errorUsuarioAdd = 'Ingrese un usuario valido'\n    } else {\n\n      if (this.usuariosTable.filter((element: any) => element.id === this.newUsuario.Usuario_id) != 0) {\n        this.errorUsuarioAdd = 'Ya hay un implemento registrado'\n      } else {\n\n        let data = { usuario_name: name_usuario, id: this.newUsuario.Usuario_id }\n\n        await this.usuariosTable\n        this.errorUsuarioAdd = null;\n        this.newUsuario.fecha_visita = ''\n        this.newUsuario.Usuario_id = ''\n      }\n    }\n  }\n\n  remover_usuario(idUsuario: any) {\n    this.usuariosTable.splice(idUsuario, 1);\n  }\n\n  calculateDiff(data: any) {\n    let date = moment(new Date(data.fecha_visita).toISOString().slice(0, 10));\n    let currentDate = moment(new Date().toISOString().slice(0, 10));\n\n    let dias = date.diff(currentDate, 'days');\n\n    if (dias <= 1) {\n\n      var dia = `Falta ${dias} Dia`\n\n      if (dias < 1) {\n        var dia = `Faltan 0 Dias`\n      }\n\n\n    } else {\n      var dia = `Faltan ${dias} Dias`\n    }\n    return dia;\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}