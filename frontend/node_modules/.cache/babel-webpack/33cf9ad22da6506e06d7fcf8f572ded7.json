{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i3 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i2 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\n\nfunction FormlyFieldInput_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r0.id)(\"type\", ctx_r0.type || \"text\")(\"readonly\", ctx_r0.props.readonly)(\"required\", ctx_r0.required)(\"errorStateMatcher\", ctx_r0.errorStateMatcher)(\"formControl\", ctx_r0.formControl)(\"formlyAttributes\", ctx_r0.field)(\"tabIndex\", ctx_r0.props.tabindex)(\"placeholder\", ctx_r0.props.placeholder);\n  }\n}\n\nfunction FormlyFieldInput_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", ctx_r2.id)(\"readonly\", ctx_r2.props.readonly)(\"required\", ctx_r2.required)(\"errorStateMatcher\", ctx_r2.errorStateMatcher)(\"formControl\", ctx_r2.formControl)(\"formlyAttributes\", ctx_r2.field)(\"tabIndex\", ctx_r2.props.tabindex)(\"placeholder\", ctx_r2.props.placeholder);\n  }\n}\n\nclass FormlyFieldInput extends FieldType {\n  get type() {\n    return this.props.type || 'text';\n  }\n\n}\n\nFormlyFieldInput.ɵfac = /* @__PURE__ */function () {\n  let ɵFormlyFieldInput_BaseFactory;\n  return function FormlyFieldInput_Factory(t) {\n    return (ɵFormlyFieldInput_BaseFactory || (ɵFormlyFieldInput_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldInput)))(t || FormlyFieldInput);\n  };\n}();\n\nFormlyFieldInput.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldInput,\n  selectors: [[\"formly-field-mat-input\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[\"matInput\", \"\", 3, \"id\", \"type\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabIndex\", \"placeholder\", 4, \"ngIf\", \"ngIfElse\"], [\"numberTmp\", \"\"], [\"matInput\", \"\", 3, \"id\", \"type\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabIndex\", \"placeholder\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"id\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabIndex\", \"placeholder\"]],\n  template: function FormlyFieldInput_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormlyFieldInput_input_0_Template, 1, 9, \"input\", 0);\n      i0.ɵɵtemplate(1, FormlyFieldInput_ng_template_1_Template, 1, 8, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.type !== \"number\")(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i1.NgIf, i2.MatInput, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.FormControlDirective, i4.ɵFormlyAttributes, i3.NumberValueAccessor],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldInput, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-mat-input',\n      template: `\n    <input\n      *ngIf=\"type !== 'number'; else numberTmp\"\n      matInput\n      [id]=\"id\"\n      [type]=\"type || 'text'\"\n      [readonly]=\"props.readonly\"\n      [required]=\"required\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [tabIndex]=\"props.tabindex\"\n      [placeholder]=\"props.placeholder\"\n    />\n    <ng-template #numberTmp>\n      <input\n        matInput\n        [id]=\"id\"\n        type=\"number\"\n        [readonly]=\"props.readonly\"\n        [required]=\"required\"\n        [errorStateMatcher]=\"errorStateMatcher\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n        [tabIndex]=\"props.tabindex\"\n        [placeholder]=\"props.placeholder\"\n      />\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\n\nclass FormlyMatInputModule {}\n\nFormlyMatInputModule.ɵfac = function FormlyMatInputModule_Factory(t) {\n  return new (t || FormlyMatInputModule)();\n};\n\nFormlyMatInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyMatInputModule\n});\nFormlyMatInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n    types: [{\n      name: 'input',\n      component: FormlyFieldInput,\n      wrappers: ['form-field']\n    }, {\n      name: 'string',\n      extends: 'input'\n    }, {\n      name: 'number',\n      extends: 'input',\n      defaultOptions: {\n        props: {\n          type: 'number'\n        }\n      }\n    }, {\n      name: 'integer',\n      extends: 'input',\n      defaultOptions: {\n        props: {\n          type: 'number'\n        }\n      }\n    }]\n  })]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyMatInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldInput],\n      imports: [CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n        types: [{\n          name: 'input',\n          component: FormlyFieldInput,\n          wrappers: ['form-field']\n        }, {\n          name: 'string',\n          extends: 'input'\n        }, {\n          name: 'number',\n          extends: 'input',\n          defaultOptions: {\n            props: {\n              type: 'number'\n            }\n          }\n        }, {\n          name: 'integer',\n          extends: 'input',\n          defaultOptions: {\n            props: {\n              type: 'number'\n            }\n          }\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FormlyFieldInput, FormlyMatInputModule }; //# sourceMappingURL=ngx-formly-material-input.mjs.map","map":{"version":3,"sources":["/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/node_modules/@ngx-formly/material/fesm2020/ngx-formly-material-input.mjs"],"names":["i0","Component","ChangeDetectionStrategy","NgModule","i1","CommonModule","i4","FormlyModule","i3","ReactiveFormsModule","FieldType","FormlyMatFormFieldModule","i2","MatInputModule","FormlyFieldInput","type","props","ɵfac","ɵcmp","NgIf","MatInput","DefaultValueAccessor","RequiredValidator","NgControlStatus","FormControlDirective","ɵFormlyAttributes","NumberValueAccessor","args","selector","template","changeDetection","OnPush","FormlyMatInputModule","ɵmod","ɵinj","forChild","types","name","component","wrappers","extends","defaultOptions","declarations","imports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i3 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i2 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\n\nclass FormlyFieldInput extends FieldType {\n    get type() {\n        return this.props.type || 'text';\n    }\n}\nFormlyFieldInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyFieldInput, deps: null, target: i0.ɵɵFactoryTarget.Component });\nFormlyFieldInput.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FormlyFieldInput, selector: \"formly-field-mat-input\", usesInheritance: true, ngImport: i0, template: `\n    <input\n      *ngIf=\"type !== 'number'; else numberTmp\"\n      matInput\n      [id]=\"id\"\n      [type]=\"type || 'text'\"\n      [readonly]=\"props.readonly\"\n      [required]=\"required\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [tabIndex]=\"props.tabindex\"\n      [placeholder]=\"props.placeholder\"\n    />\n    <ng-template #numberTmp>\n      <input\n        matInput\n        [id]=\"id\"\n        type=\"number\"\n        [readonly]=\"props.readonly\"\n        [required]=\"required\"\n        [errorStateMatcher]=\"errorStateMatcher\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n        [tabIndex]=\"props.tabindex\"\n        [placeholder]=\"props.placeholder\"\n      />\n    </ng-template>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\"], exportAs: [\"matInput\"] }, { type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i3.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i3.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i4.ɵFormlyAttributes, selector: \"[formlyAttributes]\", inputs: [\"formlyAttributes\", \"id\"] }, { type: i3.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyFieldInput, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'formly-field-mat-input',\n                    template: `\n    <input\n      *ngIf=\"type !== 'number'; else numberTmp\"\n      matInput\n      [id]=\"id\"\n      [type]=\"type || 'text'\"\n      [readonly]=\"props.readonly\"\n      [required]=\"required\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [tabIndex]=\"props.tabindex\"\n      [placeholder]=\"props.placeholder\"\n    />\n    <ng-template #numberTmp>\n      <input\n        matInput\n        [id]=\"id\"\n        type=\"number\"\n        [readonly]=\"props.readonly\"\n        [required]=\"required\"\n        [errorStateMatcher]=\"errorStateMatcher\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n        [tabIndex]=\"props.tabindex\"\n        [placeholder]=\"props.placeholder\"\n      />\n    </ng-template>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }] });\n\nclass FormlyMatInputModule {\n}\nFormlyMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyMatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormlyMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyMatInputModule, declarations: [FormlyFieldInput], imports: [CommonModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        FormlyMatFormFieldModule, i4.FormlyModule] });\nFormlyMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyMatInputModule, imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            MatInputModule,\n            FormlyMatFormFieldModule,\n            FormlyModule.forChild({\n                types: [\n                    {\n                        name: 'input',\n                        component: FormlyFieldInput,\n                        wrappers: ['form-field'],\n                    },\n                    { name: 'string', extends: 'input' },\n                    {\n                        name: 'number',\n                        extends: 'input',\n                        defaultOptions: {\n                            props: {\n                                type: 'number',\n                            },\n                        },\n                    },\n                    {\n                        name: 'integer',\n                        extends: 'input',\n                        defaultOptions: {\n                            props: {\n                                type: 'number',\n                            },\n                        },\n                    },\n                ],\n            }),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyMatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FormlyFieldInput],\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        MatInputModule,\n                        FormlyMatFormFieldModule,\n                        FormlyModule.forChild({\n                            types: [\n                                {\n                                    name: 'input',\n                                    component: FormlyFieldInput,\n                                    wrappers: ['form-field'],\n                                },\n                                { name: 'string', extends: 'input' },\n                                {\n                                    name: 'number',\n                                    extends: 'input',\n                                    defaultOptions: {\n                                        props: {\n                                            type: 'number',\n                                        },\n                                    },\n                                },\n                                {\n                                    name: 'integer',\n                                    extends: 'input',\n                                    defaultOptions: {\n                                        props: {\n                                            type: 'number',\n                                        },\n                                    },\n                                },\n                            ],\n                        }),\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyFieldInput, FormlyMatInputModule };\n//# sourceMappingURL=ngx-formly-material-input.mjs.map\n"]},"metadata":{},"sourceType":"module"}