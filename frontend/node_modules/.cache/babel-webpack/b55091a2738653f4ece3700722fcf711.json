{"ast":null,"code":"import { Validators, FormControl } from '@angular/forms';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { AdherenciaComponent } from \"../../components/adherencia/adherencia.component\";\nimport { environment } from \"../../../environments/environment\";\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../components/adherencia/adherencia.component\";\nimport * as i4 from \"../../service/ordenes/ordenes.service\";\nimport * as i5 from \"src/app/service/liquidos_penetrantes/liquidos-penetrantes.service\";\nimport * as i6 from \"../../service/rutas-informes/informes-rutas.service\";\nimport * as i7 from \"../../service/opciones-informes/opciones-informes.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/stepper\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"ngx-mat-select-search\";\nimport * as i14 from \"@angular/material/button\";\nimport * as i15 from \"@angular/material/icon\";\nimport * as i16 from \"@angular/material/input\";\nimport * as i17 from \"ngx-quill\";\nimport * as i18 from \"@angular/material/grid-list\";\nimport * as i19 from \"ng-image-fullscreen-view\";\nimport * as i20 from \"@angular/material/card\";\nconst _c0 = [\"formFileSmRegistroFotos\"];\nconst _c1 = [\"multiSelect\"];\nconst _c2 = [\"firmaElaboro\"];\n\nfunction LiquidosPenetrantesComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtext(2, \"Proyecto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 9);\n    i0.ɵɵtext(6, \"Sub-proyecto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 10);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵtext(10, \"Consecutivo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 10);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 9);\n    i0.ɵɵtext(14, \"Fecha de inicio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 10);\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 9);\n    i0.ɵɵtext(19, \"Lugar de inspecci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 10);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.detallesOrden.proyecto);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.detallesOrden.subProyecto);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.detallesOrden.orden_consecutivo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(17, 5, ctx_r0.detallesOrden.fecha_visita, \"mediumDate\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.detallesOrden.lugar_visita);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Normas\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const norm_r31 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", norm_r31);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(norm_r31);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 18);\n    i0.ɵɵelement(2, \"input\", 83);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", \"Ingrese el procedimiento\")(\"formControlName\", \"procedimiento\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_mat_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const matbase_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", matbase_r32);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(matbase_r32);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 18);\n    i0.ɵɵelement(2, \"input\", 84);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", \"Proceso de soldadura\")(\"formControlName\", \"process_soldadura\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_mat_option_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const implementos_r33 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", implementos_r33.nombre_implemento);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(implementos_r33.nombre_implemento);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_71_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Materiales utilizados\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_mat_form_field_88_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 18);\n    i0.ɵɵelement(1, \"input\", 85);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", \"detalles\")(\"placeholder\", \"Detalles\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_button_102_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_button_102_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.cancelarEditMaterialesUtilizados();\n    });\n    i0.ɵɵtext(1, \" Cancela \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_tr_107_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 87);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_tr_107_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const itemMaterial_r36 = restoredCtx.$implicit;\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return ctx_r37.onClickEditMaterialesUtilizados(itemMaterial_r36);\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemMaterial_r36 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemMaterial_r36.detalles);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemMaterial_r36.fabricante);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemMaterial_r36.ref_comercial);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemMaterial_r36.lotes_n);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_115_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Normas para los procedimientos y m\\u00E9todos de aplicaci\\u00F3n\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_div_127_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 18);\n    i0.ɵɵelement(2, \"input\", 88);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", \"Ingrese la norma\")(\"formControlName\", \"normas_process\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_mat_form_field_141_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 18);\n    i0.ɵɵelement(1, \"input\", 89);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", \"Ingrese el tipo\")(\"formControlName\", \"tipo\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_mat_form_field_156_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 18);\n    i0.ɵɵelement(1, \"input\", 90);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", \"Ingrese el m\\u00E9todo\")(\"formControlName\", \"metodo\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_div_166_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 18);\n    i0.ɵɵelement(2, \"textarea\", 91);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", \"Ingrese el procedimiento\")(\"formControlName\", \"procedimiento\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_177_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Par\\u00E1metros de operaci\\u00F3n\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_button_221_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_button_221_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext(2);\n      return ctx_r39.cancelarEditMaterialesUtilizados();\n    });\n    i0.ɵɵtext(1, \" Cancela \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_tr_226_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵelementStart(12, \"div\", 92);\n    i0.ɵɵelementStart(13, \"button\", 93);\n    i0.ɵɵelement(14, \"i\", 94);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ul\", 95);\n    i0.ɵɵelementStart(16, \"li\");\n    i0.ɵɵelementStart(17, \"a\", 96);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_tr_226_Template_a_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const itemParametros_r41 = restoredCtx.$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return ctx_r42.onClickEditMaterialesUtilizados(itemParametros_r41);\n    });\n    i0.ɵɵelement(18, \"i\", 97);\n    i0.ɵɵtext(19, \" \\u00A0 \");\n    i0.ɵɵelementStart(20, \"strong\");\n    i0.ɵɵtext(21, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"li\");\n    i0.ɵɵelementStart(23, \"a\", 98);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_tr_226_Template_a_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const itemParametros_r41 = restoredCtx.$implicit;\n      const ctx_r44 = i0.ɵɵnextContext(2);\n      return ctx_r44.onDeleteParametrosOp(itemParametros_r41._id);\n    });\n    i0.ɵɵelement(24, \"i\", 99);\n    i0.ɵɵtext(25, \" \\u00A0 \");\n    i0.ɵɵelementStart(26, \"strong\");\n    i0.ɵɵtext(27, \"Eliminar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemParametros_r41 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r41.actividad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r41.tiempo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r41.temperatura);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r41.aplicacion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r41.iluminacion);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_234_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 100);\n    i0.ɵɵtext(1, \" Elementos inspeccionados \");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_246_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Interpretacion y evaluaci\\u00F3n de resultados\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_button_303_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_button_303_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return ctx_r45.cancelarEditMaterialesUtilizados();\n    });\n    i0.ɵɵtext(1, \" Cancela \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_tr_308_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵelementStart(12, \"div\", 92);\n    i0.ɵɵelementStart(13, \"button\", 93);\n    i0.ɵɵelement(14, \"i\", 94);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ul\", 95);\n    i0.ɵɵelementStart(16, \"li\");\n    i0.ɵɵelementStart(17, \"a\", 96);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_tr_308_Template_a_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r49);\n      const itemInter_r47 = restoredCtx.$implicit;\n      const ctx_r48 = i0.ɵɵnextContext(2);\n      return ctx_r48.onClickEditInterpretacionEvaluacion(itemInter_r47);\n    });\n    i0.ɵɵelement(18, \"i\", 97);\n    i0.ɵɵtext(19, \" \\u00A0 \");\n    i0.ɵɵelementStart(20, \"strong\");\n    i0.ɵɵtext(21, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"li\");\n    i0.ɵɵelementStart(23, \"a\", 98);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_tr_308_Template_a_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r49);\n      const itemInter_r47 = restoredCtx.$implicit;\n      const ctx_r50 = i0.ɵɵnextContext(2);\n      return ctx_r50.onDeleteInterpretacion(itemInter_r47._id);\n    });\n    i0.ɵɵelement(24, \"i\", 99);\n    i0.ɵɵtext(25, \" \\u00A0 \");\n    i0.ɵɵelementStart(26, \"strong\");\n    i0.ɵɵtext(27, \"Eliminar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemInter_r47 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r47.item);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r47.elemento);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r47.indicacion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r47.calificacion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r47.observaciones);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_316_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 100);\n    i0.ɵɵtext(1, \" Observaciones \");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_328_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 101);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_ng_template_328_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext(2);\n      return ctx_r51.onGetRegistroFotos();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(1, \" Registro Fotogr\\u00E1fico \");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_mat_grid_tile_349_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelementStart(1, \"img\", 102);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_mat_grid_tile_349_Template_img_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r56);\n      const i_r54 = restoredCtx.index;\n      const ctx_r55 = i0.ɵɵnextContext(2);\n      return ctx_r55.showLightboxRegistroFotos(i_r54);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mat-grid-tile-footer\");\n    i0.ɵɵelementStart(3, \"h3\", 103);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 103);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 104);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_mat_grid_tile_349_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r56);\n      const item_r53 = restoredCtx.$implicit;\n      const ctx_r57 = i0.ɵɵnextContext(2);\n      return ctx_r57.deleteRegistroFoto(item_r53._id);\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"restore_from_trash\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r53 = ctx.$implicit;\n    const i_r54 = ctx.index;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", item_r53.title);\n    i0.ɵɵproperty(\"src\", ctx_r28.url + \"/img-uploads/\" + item_r53.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Registro Fotogr\\u00E1fico N\\u00B0 \", i_r54 + 1, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r53.title, \" \");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_358_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r59 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 101);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_ng_template_358_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r58 = i0.ɵɵnextContext(2);\n      return ctx_r58.onGetRegistroFotos();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(1, \" Firmas \");\n  }\n}\n\nconst _c3 = function (a0) {\n  return {\n    \"display\": a0\n  };\n};\n\nfunction LiquidosPenetrantesComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 11);\n    i0.ɵɵelementStart(1, \"mat-stepper\", 12, 13);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_stepper_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r60 = i0.ɵɵnextContext();\n      return ctx_r60.setIndex($event);\n    });\n    i0.ɵɵelementStart(3, \"mat-step\", 14);\n    i0.ɵɵelementStart(4, \"form\", 15);\n    i0.ɵɵtemplate(5, LiquidosPenetrantesComponent_form_7_ng_template_5_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelementStart(6, \"div\", 17);\n    i0.ɵɵelementStart(7, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Normas para el criterio de evaluaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-select\", 19);\n    i0.ɵɵelementStart(11, \"mat-option\");\n    i0.ɵɵelementStart(12, \"ngx-mat-select-search\", 20);\n    i0.ɵɵelementStart(13, \"span\", 21);\n    i0.ɵɵtext(14, \" no se encontr\\u00F3 ninguna norma coincidente \");\n    i0.ɵɵelementStart(15, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r62 = i0.ɵɵnextContext();\n      return ctx_r62.onClickAddNormas();\n    });\n    i0.ɵɵtext(16, \" Agregar\");\n    i0.ɵɵelementStart(17, \"mat-icon\");\n    i0.ɵɵtext(18, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, LiquidosPenetrantesComponent_form_7_mat_option_19_Template, 2, 2, \"mat-option\", 23);\n    i0.ɵɵpipe(20, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 17);\n    i0.ɵɵelementStart(22, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(23, \"mat-label\");\n    i0.ɵɵtext(24, \"Procedimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"mat-select\", 24);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_select_selectionChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r63 = i0.ɵɵnextContext();\n      return ctx_r63.onChangePro($event.value);\n    });\n    i0.ɵɵelementStart(26, \"mat-option\", 25);\n    i0.ɵɵtext(27, \"TLPR0025 Rev.04\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"mat-option\", 25);\n    i0.ɵɵtext(29, \"Otro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(30, LiquidosPenetrantesComponent_form_7_div_30_Template, 3, 2, \"div\", 26);\n    i0.ɵɵelementStart(31, \"div\", 17);\n    i0.ɵɵelementStart(32, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(33, \"mat-label\");\n    i0.ɵɵtext(34, \"Especificaci\\u00F3n material base\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"mat-select\", 27);\n    i0.ɵɵtemplate(36, LiquidosPenetrantesComponent_form_7_mat_option_36_Template, 2, 2, \"mat-option\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"div\", 17);\n    i0.ɵɵelementStart(38, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(39, \"mat-label\");\n    i0.ɵɵtext(40, \"Proceso de soldadura\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"mat-select\", 28);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_select_selectionChange_41_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r64 = i0.ɵɵnextContext();\n      return ctx_r64.onChangePro($event.value);\n    });\n    i0.ɵɵelementStart(42, \"mat-option\", 25);\n    i0.ɵɵtext(43, \"GMAW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"mat-option\", 25);\n    i0.ɵɵtext(45, \"SMAW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"mat-option\", 25);\n    i0.ɵɵtext(47, \"GTAW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"mat-option\", 25);\n    i0.ɵɵtext(49, \"SAW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"mat-option\", 25);\n    i0.ɵɵtext(51, \"FCAW\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"mat-option\", 25);\n    i0.ɵɵtext(53, \"N.A.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(54, \"mat-option\", 25);\n    i0.ɵɵtext(55, \"Otro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(56, LiquidosPenetrantesComponent_form_7_div_56_Template, 3, 2, \"div\", 26);\n    i0.ɵɵelementStart(57, \"div\", 17);\n    i0.ɵɵelementStart(58, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(59, \"mat-label\");\n    i0.ɵɵtext(60, \"Equipos utilizados\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(61, \"mat-select\", 27);\n    i0.ɵɵtemplate(62, LiquidosPenetrantesComponent_form_7_mat_option_62_Template, 2, 2, \"mat-option\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(63, \"div\", 29);\n    i0.ɵɵelementStart(64, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_64_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r65 = i0.ɵɵnextContext();\n      return ctx_r65.NormasId ? ctx_r65.onEditNormas() : ctx_r65.onSubmitNormas();\n    });\n    i0.ɵɵelementStart(65, \"span\", 31);\n    i0.ɵɵtext(66, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(67, \"span\", 32);\n    i0.ɵɵelement(68, \"span\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(69, \"mat-step\", 14);\n    i0.ɵɵelementStart(70, \"form\", 15);\n    i0.ɵɵtemplate(71, LiquidosPenetrantesComponent_form_7_ng_template_71_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelement(72, \"br\");\n    i0.ɵɵelementStart(73, \"div\", 34);\n    i0.ɵɵelementStart(74, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(75, \"mat-label\");\n    i0.ɵɵtext(76, \"Detalles\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(77, \"mat-select\", 35);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_select_selectionChange_77_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r66 = i0.ɵɵnextContext();\n      return ctx_r66.onChangeDeta($event.value);\n    });\n    i0.ɵɵelementStart(78, \"mat-option\", 25);\n    i0.ɵɵtext(79, \"PENETRANTE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(80, \"mat-option\", 25);\n    i0.ɵɵtext(81, \"EMULSIFICANTE\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(82, \"mat-option\", 25);\n    i0.ɵɵtext(83, \"LIMPIADOR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(84, \"mat-option\", 25);\n    i0.ɵɵtext(85, \"REVELADOR\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(86, \"mat-option\", 25);\n    i0.ɵɵtext(87, \"Otro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(88, LiquidosPenetrantesComponent_form_7_mat_form_field_88_Template, 2, 2, \"mat-form-field\", 36);\n    i0.ɵɵelementStart(89, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(90, \"mat-label\");\n    i0.ɵɵtext(91, \"Fabricante\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(92, \"input\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(93, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(94, \"mat-label\");\n    i0.ɵɵtext(95, \"Referencia comercial\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(96, \"input\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(97, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(98, \"mat-label\");\n    i0.ɵɵtext(99, \"Lote N\\u00B0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(100, \"input\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(101, \"div\", 38);\n    i0.ɵɵtemplate(102, LiquidosPenetrantesComponent_form_7_button_102_Template, 2, 0, \"button\", 39);\n    i0.ɵɵelementStart(103, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_103_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r67 = i0.ɵɵnextContext();\n      return ctx_r67.MaterialesUtilizadosStatus == false ? ctx_r67.onSubmitMaterialesUtilizados() : ctx_r67.onEditarMaterialesUtilizados();\n    });\n    i0.ɵɵtext(104);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(105, \"table\", 41);\n    i0.ɵɵelementStart(106, \"tbody\");\n    i0.ɵɵtemplate(107, LiquidosPenetrantesComponent_form_7_tr_107_Template, 9, 4, \"tr\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(108, \"div\", 38);\n    i0.ɵɵelementStart(109, \"button\", 43);\n    i0.ɵɵtext(110, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(111, \"button\", 44);\n    i0.ɵɵtext(112, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(113, \"mat-step\", 14);\n    i0.ɵɵelementStart(114, \"form\", 15);\n    i0.ɵɵtemplate(115, LiquidosPenetrantesComponent_form_7_ng_template_115_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelementStart(116, \"div\", 17);\n    i0.ɵɵelementStart(117, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(118, \"mat-label\");\n    i0.ɵɵtext(119, \"Normas para los procedimientos y m\\u00E9todos de aplicaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(120, \"mat-select\", 45);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_select_selectionChange_120_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r68 = i0.ɵɵnextContext();\n      return ctx_r68.onChangeNormaProc($event.value);\n    });\n    i0.ɵɵelementStart(121, \"mat-option\", 25);\n    i0.ɵɵtext(122, \"ASTM E 165: Standar Test Method for Liquid Penetrant Examination\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(123, \"mat-option\", 25);\n    i0.ɵɵtext(124, \"ASTM E 1417: Standar Practice for Liquid Penetrant Examination\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(125, \"mat-option\", 25);\n    i0.ɵɵtext(126, \"Otro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(127, LiquidosPenetrantesComponent_form_7_div_127_Template, 3, 2, \"div\", 26);\n    i0.ɵɵelementStart(128, \"p\", 46);\n    i0.ɵɵtext(129, \"Tipo y m\\u00E9todo: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(130, \"div\", 34);\n    i0.ɵɵelementStart(131, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(132, \"mat-label\");\n    i0.ɵɵtext(133, \"Tipo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(134, \"mat-select\", 47);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_select_selectionChange_134_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r69 = i0.ɵɵnextContext();\n      return ctx_r69.onChangeTipo($event.value);\n    });\n    i0.ɵɵelementStart(135, \"mat-option\", 25);\n    i0.ɵɵtext(136, \"TIPO I: Tintas fluorescentes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(137, \"mat-option\", 25);\n    i0.ɵɵtext(138, \"TIPO II: Tintas Visibles\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(139, \"mat-option\", 25);\n    i0.ɵɵtext(140, \"Otro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(141, LiquidosPenetrantesComponent_form_7_mat_form_field_141_Template, 2, 2, \"mat-form-field\", 36);\n    i0.ɵɵelementStart(142, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(143, \"mat-label\");\n    i0.ɵɵtext(144, \"M\\u00E9todo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(145, \"mat-select\", 48);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_select_selectionChange_145_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r70 = i0.ɵɵnextContext();\n      return ctx_r70.onChangeMet($event.value);\n    });\n    i0.ɵɵelementStart(146, \"mat-option\", 25);\n    i0.ɵɵtext(147, \"M\\u00C9TODO A: Lavable con agua\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(148, \"mat-option\", 25);\n    i0.ɵɵtext(149, \"M\\u00C9TODO B: Post emulsificable, lipofilico\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(150, \"mat-option\", 25);\n    i0.ɵɵtext(151, \"M\\u00C9TODO C: Removible con Solvente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(152, \"mat-option\", 25);\n    i0.ɵɵtext(153, \"M\\u00C9TODO D: Post emulsificable, hidrofilico\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(154, \"mat-option\", 25);\n    i0.ɵɵtext(155, \"Otro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(156, LiquidosPenetrantesComponent_form_7_mat_form_field_156_Template, 2, 2, \"mat-form-field\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(157, \"div\", 17);\n    i0.ɵɵelementStart(158, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(159, \"mat-label\");\n    i0.ɵɵtext(160, \"Procedimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(161, \"mat-select\", 49);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_select_selectionChange_161_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r71 = i0.ɵɵnextContext();\n      return ctx_r71.onChangeP($event.value);\n    });\n    i0.ɵɵelementStart(162, \"mat-option\", 25);\n    i0.ɵɵtext(163, \" Limpieza de la superficie con m\\u00E9todo manual (con pa\\u00F1o). 2\\u00B0 Aplicaci\\u00F3n de limpiador. 3\\u00B0 Aplicaci\\u00F3n del l\\u00EDquido penetrante, dej\\u00E1ndose actuar durante 10:00 min. 4\\u00B0 Limpieza del l\\u00EDquido con papel absorbente. 5\\u00B0 Aplicaci\\u00F3n de revelador, dej\\u00E1ndose actuar durante 10:00 min para luego realizar la interpretaci\\u00F3n. 6\\u00B0 limpieza final\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(164, \"mat-option\", 25);\n    i0.ɵɵtext(165, \"Otro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(166, LiquidosPenetrantesComponent_form_7_div_166_Template, 3, 2, \"div\", 26);\n    i0.ɵɵelementStart(167, \"div\", 38);\n    i0.ɵɵelementStart(168, \"button\", 43);\n    i0.ɵɵtext(169, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(170, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_170_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r72 = i0.ɵɵnextContext();\n      return ctx_r72.onEditNormasProce();\n    });\n    i0.ɵɵelementStart(171, \"span\", 31);\n    i0.ɵɵtext(172, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(173, \"span\", 32);\n    i0.ɵɵelement(174, \"span\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(175, \"mat-step\", 14);\n    i0.ɵɵelementStart(176, \"form\", 15);\n    i0.ɵɵtemplate(177, LiquidosPenetrantesComponent_form_7_ng_template_177_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelement(178, \"br\");\n    i0.ɵɵelementStart(179, \"div\", 17);\n    i0.ɵɵelementStart(180, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(181, \"mat-label\");\n    i0.ɵɵtext(182, \"Actividad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(183, \"mat-select\", 51);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_select_selectionChange_183_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r73 = i0.ɵɵnextContext();\n      return ctx_r73.onChangeActividad($event.value);\n    });\n    i0.ɵɵelementStart(184, \"mat-option\", 25);\n    i0.ɵɵtext(185, \"Limpieza\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(186, \"mat-option\", 25);\n    i0.ɵɵtext(187, \"Penetrante\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(188, \"mat-option\", 25);\n    i0.ɵɵtext(189, \"Limpieza\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(190, \"mat-option\", 25);\n    i0.ɵɵtext(191, \"Revelador\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(192, \"div\", 17);\n    i0.ɵɵelementStart(193, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(194, \"mat-label\");\n    i0.ɵɵtext(195, \"Tiempo de permanencia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(196, \"input\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(197, \"div\", 17);\n    i0.ɵɵelementStart(198, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(199, \"mat-label\");\n    i0.ɵɵtext(200, \"Temperatura\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(201, \"input\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(202, \"div\", 17);\n    i0.ɵɵelementStart(203, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(204, \"mat-label\");\n    i0.ɵɵtext(205, \"Aplicaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(206, \"mat-select\", 19);\n    i0.ɵɵelementStart(207, \"mat-option\", 25);\n    i0.ɵɵtext(208, \"Spray\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(209, \"mat-option\", 25);\n    i0.ɵɵtext(210, \"Sumergible\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(211, \"div\", 17);\n    i0.ɵɵelementStart(212, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(213, \"mat-label\");\n    i0.ɵɵtext(214, \"Iluminaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(215, \"mat-select\", 19);\n    i0.ɵɵelementStart(216, \"mat-option\", 25);\n    i0.ɵɵtext(217, \"Luz natural\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(218, \"mat-option\", 25);\n    i0.ɵɵtext(219, \"Luz negra\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(220, \"div\", 38);\n    i0.ɵɵtemplate(221, LiquidosPenetrantesComponent_form_7_button_221_Template, 2, 0, \"button\", 39);\n    i0.ɵɵelementStart(222, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_222_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r74 = i0.ɵɵnextContext();\n      return ctx_r74.ParametrosOpStatus == false ? ctx_r74.onSubmitParametrosOp() : ctx_r74.onEditarParametrosOp();\n    });\n    i0.ɵɵtext(223);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(224, \"table\", 41);\n    i0.ɵɵelementStart(225, \"tbody\");\n    i0.ɵɵtemplate(226, LiquidosPenetrantesComponent_form_7_tr_226_Template, 28, 5, \"tr\", 53);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(227, \"div\", 38);\n    i0.ɵɵelementStart(228, \"button\", 43);\n    i0.ɵɵtext(229, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(230, \"button\", 44);\n    i0.ɵɵtext(231, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(232, \"mat-step\", 14);\n    i0.ɵɵelementStart(233, \"form\", 15);\n    i0.ɵɵtemplate(234, LiquidosPenetrantesComponent_form_7_ng_template_234_Template, 2, 0, \"ng-template\", 16);\n    i0.ɵɵelement(235, \"quill-editor\", 54);\n    i0.ɵɵelementStart(236, \"div\", 55);\n    i0.ɵɵelementStart(237, \"button\", 43);\n    i0.ɵɵtext(238, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(239, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_239_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r75 = i0.ɵɵnextContext();\n      return ctx_r75.ElementosInspeccionadosId ? ctx_r75.onEditarElementosInspeccionados() : ctx_r75.onSubmitElementosInspeccionados();\n    });\n    i0.ɵɵelementStart(240, \"span\", 31);\n    i0.ɵɵtext(241, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(242, \"span\", 32);\n    i0.ɵɵelement(243, \"span\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(244, \"mat-step\", 14);\n    i0.ɵɵelementStart(245, \"form\", 15);\n    i0.ɵɵtemplate(246, LiquidosPenetrantesComponent_form_7_ng_template_246_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelement(247, \"br\");\n    i0.ɵɵelementStart(248, \"div\", 17);\n    i0.ɵɵelementStart(249, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(250, \"mat-label\");\n    i0.ɵɵtext(251, \"Elemento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(252, \"input\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(253, \"div\", 17);\n    i0.ɵɵelementStart(254, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(255, \"mat-label\");\n    i0.ɵɵtext(256, \"Indicaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(257, \"mat-select\", 27);\n    i0.ɵɵelementStart(258, \"mat-option\", 25);\n    i0.ɵɵtext(259, \"Cord\\u00F3n Irregular\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(260, \"mat-option\", 25);\n    i0.ɵɵtext(261, \"Exceso de Concavidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(262, \"mat-option\", 25);\n    i0.ɵɵtext(263, \"Exceso de Refuerzo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(264, \"mat-option\", 25);\n    i0.ɵɵtext(265, \"Porosidad Agrupada\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(266, \"mat-option\", 25);\n    i0.ɵɵtext(267, \"Falta de Fusi\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(268, \"mat-option\", 25);\n    i0.ɵɵtext(269, \"Falta de Penetraci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(270, \"mat-option\", 25);\n    i0.ɵɵtext(271, \"Grietas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(272, \"mat-option\", 25);\n    i0.ɵɵtext(273, \"Exceso de Penetraci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(274, \"mat-option\", 25);\n    i0.ɵɵtext(275, \"Porosidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(276, \"mat-option\", 25);\n    i0.ɵɵtext(277, \"Socavado Externo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(278, \"mat-option\", 25);\n    i0.ɵɵtext(279, \"Socavado Interno\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(280, \"mat-option\", 25);\n    i0.ɵɵtext(281, \"Falta de Material de aporte\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(282, \"mat-option\", 25);\n    i0.ɵɵtext(283, \"Da\\u00F1o Material Base\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(284, \"div\", 17);\n    i0.ɵɵelementStart(285, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(286, \"mat-label\");\n    i0.ɵɵtext(287, \"Calificaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(288, \"mat-select\", 19);\n    i0.ɵɵelementStart(289, \"mat-option\", 25);\n    i0.ɵɵtext(290, \"Conforme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(291, \"mat-option\", 25);\n    i0.ɵɵtext(292, \"Conforme luego x Reparaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(293, \"mat-option\", 25);\n    i0.ɵɵtext(294, \"No conforme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(295, \"mat-option\", 25);\n    i0.ɵɵtext(296, \"Inspeccionar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(297, \"div\", 17);\n    i0.ɵɵelementStart(298, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(299, \"mat-label\");\n    i0.ɵɵtext(300, \"Observaciones\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(301, \"input\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(302, \"div\", 38);\n    i0.ɵɵtemplate(303, LiquidosPenetrantesComponent_form_7_button_303_Template, 2, 0, \"button\", 39);\n    i0.ɵɵelementStart(304, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_304_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r76 = i0.ɵɵnextContext();\n      return ctx_r76.InterpretacionEvaluacionStatus == false ? ctx_r76.onSubmitInterpretacion() : ctx_r76.onEditarInterpretacion();\n    });\n    i0.ɵɵtext(305);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(306, \"table\", 41);\n    i0.ɵɵelementStart(307, \"tbody\");\n    i0.ɵɵtemplate(308, LiquidosPenetrantesComponent_form_7_tr_308_Template, 28, 5, \"tr\", 53);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(309, \"div\", 38);\n    i0.ɵɵelementStart(310, \"button\", 43);\n    i0.ɵɵtext(311, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(312, \"button\", 44);\n    i0.ɵɵtext(313, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(314, \"mat-step\", 14);\n    i0.ɵɵelementStart(315, \"form\", 15);\n    i0.ɵɵtemplate(316, LiquidosPenetrantesComponent_form_7_ng_template_316_Template, 2, 0, \"ng-template\", 16);\n    i0.ɵɵelement(317, \"quill-editor\", 56);\n    i0.ɵɵelementStart(318, \"div\", 55);\n    i0.ɵɵelementStart(319, \"button\", 43);\n    i0.ɵɵtext(320, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(321, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_321_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r77 = i0.ɵɵnextContext();\n      return ctx_r77.ObservacionesId ? ctx_r77.onEditarObservaciones() : ctx_r77.onSubmitObservaciones();\n    });\n    i0.ɵɵelementStart(322, \"span\", 31);\n    i0.ɵɵtext(323, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(324, \"span\", 32);\n    i0.ɵɵelement(325, \"span\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(326, \"mat-step\", 14);\n    i0.ɵɵelementStart(327, \"form\", 15);\n    i0.ɵɵtemplate(328, LiquidosPenetrantesComponent_form_7_ng_template_328_Template, 2, 0, \"ng-template\", 16);\n    i0.ɵɵelement(329, \"br\");\n    i0.ɵɵelementStart(330, \"div\", 17);\n    i0.ɵɵelementStart(331, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(332, \"mat-label\");\n    i0.ɵɵtext(333, \"Titulo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(334, \"input\", 37);\n    i0.ɵɵelementStart(335, \"mat-icon\", 57);\n    i0.ɵɵtext(336, \"title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(337, \"div\", 58);\n    i0.ɵɵelementStart(338, \"div\", 59);\n    i0.ɵɵelementStart(339, \"label\", 60);\n    i0.ɵɵtext(340, \"Seleccion las imagenes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(341, \"input\", 61, 62);\n    i0.ɵɵlistener(\"change\", function LiquidosPenetrantesComponent_form_7_Template_input_change_341_listener($event) {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r78 = i0.ɵɵnextContext();\n      return ctx_r78.onPhotoSelectedRegistroFotos($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(343, \"div\", 63);\n    i0.ɵɵelementStart(344, \"button\", 64);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_344_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r79 = i0.ɵɵnextContext();\n      return ctx_r79.onSubmitRegistroFotos();\n    });\n    i0.ɵɵtext(345, \" A\\u00F1adir \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(346, \"div\", 65);\n    i0.ɵɵelementStart(347, \"div\", 66);\n    i0.ɵɵelementStart(348, \"mat-grid-list\", 67);\n    i0.ɵɵtemplate(349, LiquidosPenetrantesComponent_form_7_mat_grid_tile_349_Template, 10, 4, \"mat-grid-tile\", 53);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(350, \"ng-image-fullscreen-view\", 68);\n    i0.ɵɵlistener(\"close\", function LiquidosPenetrantesComponent_form_7_Template_ng_image_fullscreen_view_close_350_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r80 = i0.ɵɵnextContext();\n      return ctx_r80.closeEventHandlerRegistroFotos();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(351, \"div\", 38);\n    i0.ɵɵelementStart(352, \"button\", 43);\n    i0.ɵɵtext(353, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(354, \"button\", 44);\n    i0.ɵɵtext(355, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(356, \"mat-step\");\n    i0.ɵɵelementStart(357, \"form\");\n    i0.ɵɵtemplate(358, LiquidosPenetrantesComponent_form_7_ng_template_358_Template, 2, 0, \"ng-template\", 16);\n    i0.ɵɵelement(359, \"br\");\n    i0.ɵɵelementStart(360, \"div\", 17);\n    i0.ɵɵelementStart(361, \"div\", 69);\n    i0.ɵɵelementStart(362, \"label\", 70);\n    i0.ɵɵtext(363, \"Elabor\\u00F3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(364, \"div\");\n    i0.ɵɵelement(365, \"canvas\", 71, 72);\n    i0.ɵɵelementStart(367, \"div\", 73);\n    i0.ɵɵelementStart(368, \"div\", 74);\n    i0.ɵɵelementStart(369, \"button\", 75);\n    i0.ɵɵtext(370, \"Finalizar firma\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(371, \"div\", 74);\n    i0.ɵɵelementStart(372, \"button\", 76);\n    i0.ɵɵtext(373, \"Limpiar firma\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(374, \"div\");\n    i0.ɵɵelement(375, \"img\", 77);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(376, \"div\", 69);\n    i0.ɵɵelementStart(377, \"label\", 78);\n    i0.ɵɵtext(378, \"Revis\\u00F3\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(379, \"div\");\n    i0.ɵɵelement(380, \"canvas\", 79);\n    i0.ɵɵelementStart(381, \"div\", 73);\n    i0.ɵɵelementStart(382, \"div\", 74);\n    i0.ɵɵelementStart(383, \"button\", 80);\n    i0.ɵɵtext(384, \"Finalizar firma\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(385, \"div\", 74);\n    i0.ɵɵelementStart(386, \"button\", 81);\n    i0.ɵɵtext(387, \"Limpiar firma\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(388, \"div\");\n    i0.ɵɵelement(389, \"img\", 77);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(390, \"div\", 38);\n    i0.ɵɵelementStart(391, \"button\", 43);\n    i0.ɵɵtext(392, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(393, \"button\", 82);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_393_listener() {\n      i0.ɵɵrestoreView(_r61);\n      const ctx_r81 = i0.ɵɵnextContext();\n      return ctx_r81.finalizarInforme();\n    });\n    i0.ɵɵtext(394, \" Finalizar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Normas);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"selectedIndex\", ctx_r1.autoSaveIndex.indexStepper);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Normas);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Normas);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControlName\", \"norma\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControl\", ctx_r1.normasMultiFilterCtrl);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 146, ctx_r1.filteredNormasMulti));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControlName\", \"procedimiento\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"TLPR0025 Rev.04\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Otro\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ocultoProc == 1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"esp_material_base\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.MaterialesBase);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"process_soldadura\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"GMAW\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"SMAW\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"GTAW\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"SAW\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"FCAW\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"N.A.\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Otro\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.oculto == 1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"equipos_utilizados\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.implementosOrdenes);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Normas.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Materiales_Utilizados);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Materiales_Utilizados);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"detalles\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"PENETRANTE\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"EMULSIFICANTE\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"LIMPIADOR\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"REVELADOR\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Otro\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ocultoMat == 1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"fabricante\")(\"placeholder\", \"Fabricante\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"ref_comercial\")(\"placeholder\", \"Referencia comercial\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"lotes_n\")(\"placeholder\", \"Lote N\\u00B0\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.MaterialesUtilizadosStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Materiales_Utilizados.status != \"VALID\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.MaterialesUtilizadosStatus == false ? \"A\\u00F1adir\" : \"Editar\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.MaterialesUtilizados);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Normas_ProcessModel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Normas_ProcessModel);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControlName\", \"normas_process\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"ASTM E 165: Standar Test Method for Liquid Penetrant Examination\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"ASTM E 1417: Standar Practice for Liquid Penetrant Examination\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Otro\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ocultoNomProc == 1);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"tipo\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"TIPO I: Tintas fluorescentes\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"TIPO II: Tintas Visibles\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Otro\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ocultoTip == 1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"metodo\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"M\\u00C9TODO A: Lavable con agua\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"M\\u00C9TODO B: Post emulsificable, lipofilico\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"M\\u00C9TODO C: Removible con Solvente\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"M\\u00C9TODO D: Post emulsificable, hidrofilico\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Otro\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ocultoMet == 1);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"procedimiento\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \" Limpieza de la superficie con m\\u00E9todo manual (con pa\\u00F1o). 2\\u00B0 Aplicaci\\u00F3n de limpiador. 3\\u00B0 Aplicaci\\u00F3n del l\\u00EDquido penetrante, dej\\u00E1ndose actuar durante 10:00 min. 4\\u00B0 Limpieza del l\\u00EDquido con papel absorbente. 5\\u00B0 Aplicaci\\u00F3n de revelador, dej\\u00E1ndose actuar durante 10:00 min para luego realizar la interpretaci\\u00F3n. 6\\u00B0 limpieza final\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Otro\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ocultoP == 1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Normas_ProcessModel.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Parametros_operacion);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Parametros_operacion);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"actividad\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"Limpieza\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Penetrante\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Limpieza2\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Revelador\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControlName\", \"tiempo\")(\"placeholder\", \"Tiempo de permanencia\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"temperatura\")(\"placeholder\", \"Temperatura\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"aplicacion\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"Spray\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Sumergible\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControlName\", \"iluminacion\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"Luz natural\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"Luz negra\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.MaterialesUtilizadosStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Parametros_operacion.status != \"VALID\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.ParametrosOpStatus == false ? \"A\\u00F1adir\" : \"Editar\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ParametrosOp);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.ElementosInspeccionados);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.ElementosInspeccionados);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"elementos_inspeccionados\")(\"modules\", ctx_r1.quillModules);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.ElementosInspeccionados.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Interpretacion_evaluacion);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Interpretacion_evaluacion);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"elemento\")(\"placeholder\", \"Elemento\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"indicacion\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"Cir\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"EC\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"ER\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"PAG\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"FF\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"FP\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"G\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"EP\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"P\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"SE\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"SI\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"FMA\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"DMA\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControlName\", \"calificacion\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"C\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"C(xR)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"NC\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"I\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControlName\", \"observaciones\")(\"placeholder\", \"Observaciones\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.MaterialesUtilizadosStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Interpretacion_evaluacion.status != \"VALID\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.InterpretacionEvaluacionStatus == false ? \"A\\u00F1adir\" : \"Editar\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.InterpretacionEvaluacion);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Observaciones);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Observaciones);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"observaciones\")(\"modules\", ctx_r1.quillModules);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Observaciones.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.RegistroFotosForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.RegistroFotosForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"title\")(\"placeholder\", \"Titulo\");\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.RegistroFotos);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"images\", ctx_r1.imageObjectRegistroFotos)(\"imageIndex\", ctx_r1.selectedImageIndexRegistroFotos)(\"show\", ctx_r1.showFlagRegistroFotos);\n    i0.ɵɵadvance(14);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(148, _c3, ctx_r1.firmaElaboroStatus == true ? \"none\" : \"block\"));\n    i0.ɵɵadvance(10);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(150, _c3, ctx_r1.firmaElaboroStatus == true ? \"block\" : \"none\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r1.firmaElaboroImg, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(152, _c3, ctx_r1.firmaRevisoStatus == true ? \"none\" : \"block\"));\n    i0.ɵɵadvance(9);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(154, _c3, ctx_r1.firmaRevisoStatus == true ? \"block\" : \"none\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r1.firmaRevisaImg, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let LiquidosPenetrantesComponent = /*#__PURE__*/(() => {\n  class LiquidosPenetrantesComponent {\n    constructor(_formBuilder, _route, _activatedRoute, _adherenciaComponent, _ordenesService, _liquidos_penetrantes, _informesRutasService, _opcionesInformesService) {\n      this._formBuilder = _formBuilder;\n      this._route = _route;\n      this._activatedRoute = _activatedRoute;\n      this._adherenciaComponent = _adherenciaComponent;\n      this._ordenesService = _ordenesService;\n      this._liquidos_penetrantes = _liquidos_penetrantes;\n      this._informesRutasService = _informesRutasService;\n      this._opcionesInformesService = _opcionesInformesService;\n      this.quillModules = {\n        toolbar: [['bold', 'italic', 'underline'], [{\n          align: []\n        }, {\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], ['clean']]\n      };\n      this.NormasList = ['AWS D1.1 2020', 'AWS D1.2 2003', 'AWS D1.3 2008', 'AWS D1.4 2005', 'AASHTO/AWS D1.5 2010', 'AWS D1.6 2007', 'AWS D1.7 2010', 'AWS D1.8 2009', 'AWS D1.9 2007', 'AWS D14.3 2010', 'ASME SECCIÓN V 2010', 'ASME SECCIÓN IX 2010', 'ASME B31.1 2010', 'ASME B31.3 2010', 'ASME B31.4 2006', 'ASME B31.5 2001', 'ASME B31.8 2010', 'ASME B31.9 2008', 'ASME B31G 2009', 'ASTM E 186', 'API 1104', 'Otro'];\n      /* OPCIONES NORMAS */\n\n      this.opcionesNormas = [];\n      this.filteredNormasMulti = new ReplaySubject(1);\n      this.normasMultiFilterCtrl = new FormControl();\n      this._onDestroy = new Subject();\n      this.campoOtro = document.querySelector(\"#OtroPrc\");\n      this.implementosOrdenes = [];\n      this.MaterialesBase = this._adherenciaComponent.MaterialesBase;\n      this.isLinear = false;\n      this.NormasBtnSave = true;\n      this.NormasStatus = false;\n      this.MaterialesUtilizadosStatus = false;\n      this.MaterialesUtilizados = [];\n      this.NormasProceBtnSave = true;\n      this.NormasProceStatus = false;\n      this.ParametrosOpStatus = false;\n      this.ParametrosOp = [];\n      this.ElementosInspeccionadosBtnSave = true;\n      this.ElementosInspeccionadosStatus = false;\n      this.InterpretacionEvaluacionStatus = false;\n      this.InterpretacionEvaluacion = [];\n      this.ObservacionesBtnSave = true;\n      this.ObservacionesStatus = false;\n      this.RegistroFotos = [];\n      this.showFlagRegistroFotos = false;\n      this.selectedImageIndexRegistroFotos = -1;\n      this.imageObjectRegistroFotos = [];\n      this.ResultadosStatus = false;\n      this.firmaRevisaImg = '';\n      this.firmaRevisoStatus = false;\n      this.firmaElaboroImg = '';\n      this.firmaElaboroStatus = false;\n      this.url = environment.url;\n\n      this._activatedRoute.params.subscribe(params => {\n        this.orden_id = params['orden_id'];\n        this.informe_id = params['informe_id'];\n      });\n    }\n\n    ngOnInit() {\n      this.getImplementosOrdenes();\n      this.forms();\n      this.onGetDetallesOrden();\n      this.onGet();\n      this.onGetOpciones();\n    }\n\n    forms() {\n      this.Normas = this._formBuilder.group({\n        norma: ['', [Validators.required]],\n        procedimiento: ['', [Validators.required]],\n        esp_material_base: ['', [Validators.required]],\n        process_soldadura: ['', [Validators.required]],\n        equipos_utilizados: ['', [Validators.required]]\n      });\n      this.Materiales_Utilizados = this._formBuilder.group({\n        detalles: ['', [Validators.required]],\n        fabricante: ['', [Validators.required]],\n        ref_comercial: ['', [Validators.required]],\n        lotes_n: ['', [Validators.required]]\n      });\n      this.Normas_ProcessModel = this._formBuilder.group({\n        normas_process: ['', [Validators.required]],\n        tipo: ['', [Validators.required]],\n        metodo: ['', [Validators.required]],\n        procedimiento: [' Limpieza de la superficie con método manual (con paño). 2° Aplicación de limpiador. 3° Aplicación del líquido penetrante, dejándose actuar durante 10:00 min. 4° Limpieza del líquido con papel absorbente. 5° Aplicación de revelador, dejándose actuar durante 10:00 min para luego realizar la interpretación. 6° limpieza final', [Validators.required]]\n      });\n      this.Parametros_operacion = this._formBuilder.group({\n        actividad: ['', [Validators.required]],\n        tiempo: ['', [Validators.required]],\n        temperatura: ['', [Validators.required]],\n        aplicacion: ['', [Validators.required]],\n        iluminacion: ['', [Validators.required]]\n      });\n      this.ElementosInspeccionados = this._formBuilder.group({\n        elementos_inspeccionados: ['', [Validators.required, Validators.maxLength(50)]]\n      });\n      this.Interpretacion_evaluacion = this._formBuilder.group({\n        elemento: ['', [Validators.required]],\n        indicacion: ['', [Validators.required]],\n        calificacion: ['', [Validators.required]],\n        observaciones: ['', [Validators.required]]\n      });\n      this.Observaciones = this._formBuilder.group({\n        observaciones: ['', [Validators.required]]\n      });\n      this.RegistroFotosForm = this._formBuilder.group({\n        title: ['', [Validators.required]]\n      });\n    }\n\n    onGetOpciones() {\n      this._opcionesInformesService.getOpcionesOrdenes(this.informe_id).subscribe(res => {\n        const result = res.body.filter(opciones => opciones.name === 'normas');\n        this.opcionesNormas = result[0].data;\n        this.opcionesNormasId = result[0]._id;\n        this.onInitFilter();\n      });\n    }\n\n    onInitFilter() {\n      // set initial selection\n      // load the initial bank list\n      this.filteredNormasMulti.next(this.opcionesNormas.slice()); // listen for search field value changes\n\n      this.normasMultiFilterCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n        this.filterMaterialMulti();\n      });\n    }\n\n    ngAfterViewInit() {\n      this.setInitialValue();\n    }\n\n    ngOnDestroy() {\n      this._onDestroy.next();\n\n      this._onDestroy.complete();\n    }\n\n    setInitialValue() {\n      this.filteredNormasMulti.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n        this.multiSelect.compareWith = (a, b) => a && b && a === b;\n      });\n    }\n\n    filterMaterialMulti() {\n      if (!this.opcionesNormas) {\n        return;\n      } // get the search keyword\n\n\n      let search = this.normasMultiFilterCtrl.value;\n\n      if (!search) {\n        this.filteredNormasMulti.next(this.opcionesNormas.slice());\n        return;\n      } else {\n        search = search.toLowerCase();\n      } // filter the banks\n\n\n      this.filteredNormasMulti.next(this.opcionesNormas.filter(normas => normas.toLowerCase().indexOf(search) > -1));\n    }\n\n    onClickAddNormas() {\n      const data = {\n        _id: this.opcionesNormasId,\n        data: this.normasMultiFilterCtrl.value\n      };\n\n      this._opcionesInformesService.addOpcionesOrdenes(data).subscribe(res => {\n        Swal.fire({\n          title: '¡Se agrego correctamente la opción!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar'\n        });\n        this.onGetOpciones();\n      });\n    }\n\n    onGet() {\n      this.onGetAutoSave();\n      this.onGetDetallesOrden();\n      this.onGetNormas();\n      this.onGetMaterialesUtilizados();\n      this.onGetNormasProcess();\n      this.onGetParametrosOp();\n      this.onGetInterpretacion();\n      this.onGetObservaciones();\n      this.onGetRegistroFotos();\n      this.onGetElementosInspeccionados();\n      this.getFirmaElaboro();\n      this.getFirmaReviso();\n    }\n\n    getImplementosOrdenes() {\n      this._activatedRoute.params.subscribe(params => {\n        // this.addImplemento.orden_id = orden_id\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._ordenesService.getImplementosOrdenes(orden_id).subscribe(res => {\n          this.implementosOrdenes = res.body;\n          console.log(this.implementosOrdenes);\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.implementosOrdenes = [];\n            }\n\n            if (error.status == 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.body.message\n              });\n            } else if (error.status == 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onGetAutoSave() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._informesRutasService.getAutoSaveStepper(orden_id, informe_id).subscribe(res => {\n          this.statusAutoSave = true;\n          this.autoSaveIndex = res.body;\n          console.log(res.body);\n          this.windowOnloadCanvasElaboro();\n          this.windowOnloadCanvasReviso();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.statusAutoSave = false;\n              this.autoSaveIndex = body.body;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    setIndex(event) {\n      if (this.statusAutoSave == true) {\n        let data = {\n          indexStepper: event.selectedIndex\n        };\n\n        this._informesRutasService.putAutoSaveStepper(data, this.autoSaveIndex._id).subscribe(res => {\n          this.onGetAutoSave();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      } else if (this.statusAutoSave == false) {\n        this._activatedRoute.params.subscribe(params => {\n          const {\n            orden_id,\n            informe_id\n          } = params;\n          let data = {\n            indexStepper: event.selectedIndex,\n            orden_id,\n            informe_id\n          };\n\n          this._informesRutasService.postAutoSaveStepper(data).subscribe(res => {\n            this.onGetAutoSave();\n          }, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status === 404) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'info',\n                  title: body.message\n                });\n              } else if (error.status === 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.message\n                });\n              } else if (error.status === 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        });\n      }\n    }\n\n    onGetDetallesOrden() {\n      this._activatedRoute.params.subscribe(params => {\n        const orden_id = params['orden_id'];\n        const informe_id = params['informe_id'];\n\n        this._ordenesService.getDetallesOrdenes(orden_id).subscribe(res => {\n          this.detallesOrden = res.body[0];\n        });\n\n        this._liquidos_penetrantes.getDetallesInforme(informe_id).subscribe(res => {\n          this.detallesInforme = res.body[0]; // console.log(res.body)\n          // this.NormasId = res.body._id\n        });\n      });\n    }\n\n    onChangePro(Opcion) {\n      let selec = document.querySelector(\"#Prc\");\n      let campoOtro = document.querySelector(\"#OtroPrc\");\n\n      if (Opcion == \"Otro\") {\n        this.oculto = 1;\n      } else {\n        this.oculto = 0;\n      }\n    }\n\n    onGetNormas() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getNormasLiquidos(orden_id, informe_id).subscribe(res => {\n          this.NormasId = res.body._id;\n          console.log('normas', res.body);\n          this.Normas.patchValue(res.body);\n          this.NormasBtnSave = false;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.NormasStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onSubmitNormas() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Normas.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postNormasLiquidos(data).subscribe(res => {\n          this.onGetNormas();\n          this.Normas.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditNormas() {\n      if (this.NormasId) {\n        let data = Object.assign({}, this.Normas.value); // console.log(data)\n\n        this._liquidos_penetrantes.putNormasLiquidos(data, this.NormasId).subscribe(res => {\n          this.onGetNormas();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: 'No hay usuarios por favor Agregue uno'\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      } else {\n        this._activatedRoute.params.subscribe(params => {\n          const orden_id = params['orden_id'];\n          const informe_id = params['informe_id'];\n          let data = Object.assign(Object.assign({}, this.Normas.value), {\n            orden_id,\n            informe_id\n          });\n\n          this._liquidos_penetrantes.postNormasLiquidos(data).subscribe(res => {}, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status === 404) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'info',\n                  title: 'No hay usuarios por favor Agregue uno'\n                });\n              } else if (error.status === 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.message\n                });\n              } else if (error.status === 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        });\n      }\n    }\n\n    onGetMaterialesUtilizados() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getMaterialesUtilizados(orden_id, informe_id).subscribe(data => {\n          this.MaterialesUtilizados = data.body;\n          console.log('MaterialesUtilizados', this.MaterialesUtilizados);\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.MaterialesUtilizadosStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onChangeDeta(Opcion) {\n      console.log(Opcion); // Aquí iría tu lógica al momento de seleccionar algo\n\n      let selec = document.querySelector(\"#Deta\");\n      let campoOtro = document.querySelector(\"#OtroDet\");\n\n      if (Opcion == \"Otro\") {\n        this.ocultoMat = 1;\n      } else {\n        this.ocultoMat = 0;\n      }\n    }\n\n    onClickEditMaterialesUtilizados(data) {\n      this.MaterialesUtilizadosId = data._id;\n      this.MaterialesUtilizadosStatus = true;\n      this.MaterialesUtilizados.splice(data.actividad, 1);\n      this.Materiales_Utilizados.patchValue(data);\n    }\n\n    cancelarEditMaterialesUtilizados() {\n      this.onGetMaterialesUtilizados();\n      this.Materiales_Utilizados.reset();\n      this.MaterialesUtilizadosStatus = false;\n    }\n\n    onSubmitMaterialesUtilizados() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Materiales_Utilizados.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postMaterialesUtilizados(data).subscribe(res => {\n          this.onGetMaterialesUtilizados();\n          this.Materiales_Utilizados.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarMaterialesUtilizados() {\n      if (this.Materiales_Utilizados.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putMaterialesUtilizados(this.Materiales_Utilizados.value, this.MaterialesUtilizadosId).subscribe(res => {\n          this.Materiales_Utilizados.reset();\n          this.onGetMaterialesUtilizados();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    }\n\n    onGetNormasProcess() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getNormasProce(orden_id, informe_id).subscribe(res => {\n          this.NormasProceId = res.body._id;\n          this.Normas_ProcessModel.patchValue(res.body);\n          this.NormasProceBtnSave = false;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {} else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onChangeTipo(Opcion) {\n      let selec = document.querySelector(\"#Tip\");\n      let campoOtro = document.querySelector(\"#OtroTip\");\n\n      if (Opcion == \"Otro\") {\n        this.ocultoTip = 1;\n      } else {\n        this.ocultoTip = 0;\n      }\n    }\n\n    onChangeMet(Opcion) {\n      let selec = document.querySelector(\"#Met\");\n      let campoOtro = document.querySelector(\"#OtroMet\");\n\n      if (Opcion == \"Otro\") {\n        this.ocultoMet = 1;\n      } else {\n        this.ocultoMet = 0;\n      }\n    }\n\n    onSubmitNormasProce() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Normas_ProcessModel.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n        console.log(this.Normas_ProcessModel.value);\n\n        this._liquidos_penetrantes.postNormasProce(data).subscribe(res => {\n          this.onGetNormasProcess();\n          this.Normas_ProcessModel.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onChangeNormaProc(Opcion) {\n      let selec = document.querySelector(\"#Norm\");\n      let campoOtro = document.querySelector(\"#OtraNorm\");\n\n      if (Opcion == \"Otro\") {\n        this.ocultoNomProc = 1;\n      } else {\n        this.ocultoNomProc = 0;\n      }\n    }\n\n    onChangeP(Opcion) {\n      let selec = document.querySelector(\"#Prd\");\n      let campoOtro = document.querySelector(\"#OtroPrd\");\n\n      if (Opcion == \"Otro\") {\n        this.ocultoP = 1;\n      } else {\n        this.ocultoP = 0;\n      }\n    }\n\n    onEditNormasProce() {\n      if (this.NormasProceId) {\n        let data = Object.assign({}, this.Normas_ProcessModel.value); // console.log(data)\n\n        this._liquidos_penetrantes.putNormasProces(data, this.NormasProceId).subscribe(res => {\n          this.onGetNormasProcess();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: 'No hay usuarios por favor Agregue uno'\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      } else {\n        this._activatedRoute.params.subscribe(params => {\n          const orden_id = params['orden_id'];\n          const informe_id = params['informe_id'];\n          let data = Object.assign(Object.assign({}, this.Normas_ProcessModel.value), {\n            orden_id,\n            informe_id\n          });\n\n          this._liquidos_penetrantes.postNormasProce(data).subscribe(res => {}, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status === 404) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'info',\n                  title: 'No hay usuarios por favor Agregue uno'\n                });\n              } else if (error.status === 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.message\n                });\n              } else if (error.status === 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        });\n      }\n    }\n    /* PARÁMETROS DE OPERACIÓN */\n\n\n    onGetParametrosOp() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getParametros(orden_id, informe_id).subscribe(data => {\n          this.ParametrosOp = data.body;\n          console.log('ok', data.body);\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.ParametrosOpStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onChangeActividad(Opcion) {\n      var _a, _b, _c;\n\n      let selec = document.querySelector(\"#Activ\");\n      let campoOtro = document.querySelector(\"#TiempPe\");\n\n      if (Opcion == \"Limpieza\") {\n        console.log(\"lim\");\n        ((_a = this.Parametros_operacion.get('tiempo')) === null || _a === void 0 ? void 0 : _a.value) == \"5:00 min\";\n      } else if (Opcion == \"Penetrante\") {\n        console.log(\"pen\");\n        ((_b = this.Parametros_operacion.get('tiempo')) === null || _b === void 0 ? void 0 : _b.value) == \"12:00 min\";\n      } else if (Opcion == \"Limpieza2\") {\n        console.log(\"limp2\");\n        ((_c = this.Parametros_operacion.get('tiempo')) === null || _c === void 0 ? void 0 : _c.value) == \"3:00 min\";\n      } else if (Opcion == \"Revelador\") {\n        let tieesp = \"as\"; // let name = this.Parametros_operacion.get('tiempo')?.value;\n      }\n    }\n\n    onClickEditParametrosOp(data) {\n      this.ParametrosOpId = data._id;\n      this.ParametrosOpStatus = true;\n      this.ParametrosOp.splice(data.actividad, 1);\n      this.Parametros_operacion.patchValue(data);\n    }\n\n    cancelarEditParametrosOp() {\n      this.onGetParametrosOp();\n      this.Parametros_operacion.reset();\n      this.ParametrosOpStatus = false;\n    }\n\n    onSubmitParametrosOp() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Parametros_operacion.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postParametros(data).subscribe(res => {\n          this.onGetParametrosOp();\n          this.Parametros_operacion.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarParametrosOp() {\n      if (this.Parametros_operacion.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putParametros(this.Parametros_operacion.value, this.ParametrosOpId).subscribe(res => {\n          this.Parametros_operacion.reset();\n          this.onGetParametrosOp();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    }\n\n    onDeleteParametrosOp(_id) {\n      Swal.fire({\n        title: \"¿Está seguro de eliminar el elemento?\",\n        text: \"¡Si no lo está puede cancelar la accíon!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        cancelButtonText: 'Cancelar',\n        confirmButtonText: 'Si, eliminar elemento!'\n      }).then(result => {\n        if (result.value) {\n          this._liquidos_penetrantes.deleteParametros(_id).subscribe(res => {\n            if (res.status === 200) {\n              Swal.fire({\n                title: '¡El elemento se ha eliminado correctamente!',\n                icon: 'success',\n                confirmButtonText: 'Cerrar'\n              });\n              this.onGetParametrosOp();\n            }\n          }, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar'\n                });\n              }\n\n              if (error.status == 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n                });\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n\n    onGetElementosInspeccionados() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getElementosInspeccionados(orden_id, informe_id).subscribe(res => {\n          this.ElementosInspeccionadosId = res.body._id;\n          this.ElementosInspeccionados.patchValue(res.body);\n          this.ElementosInspeccionadosBtnSave = false;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.NormasStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onSubmitElementosInspeccionados() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.ElementosInspeccionados.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postElementosInspeccionados(data).subscribe(res => {\n          this.onGetElementosInspeccionados();\n          this.ElementosInspeccionados.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarElementosInspeccionados() {\n      if (this.ElementosInspeccionados.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putElementosInspeccionados(this.ElementosInspeccionados.value, this.ElementosInspeccionadosId).subscribe(res => {\n          this.ElementosInspeccionados.reset();\n          this.onGetElementosInspeccionados();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    }\n\n    onGetInterpretacion() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getInterpretacion(orden_id, informe_id).subscribe(data => {\n          this.InterpretacionEvaluacion = data.body;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.InterpretacionEvaluacionStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onClickEditInterpretacionEvaluacion(data) {\n      this.InterpretacionEvaluacionId = data._id;\n      this.InterpretacionEvaluacionStatus = true;\n      this.InterpretacionEvaluacion.splice(data.actividad, 1);\n      this.Interpretacion_evaluacion.patchValue(data);\n    }\n\n    cancelarEditInterpretacion() {\n      this.onGetInterpretacion();\n      this.Interpretacion_evaluacion.reset();\n      this.InterpretacionEvaluacionStatus = false;\n    }\n\n    onSubmitInterpretacion() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Interpretacion_evaluacion.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postInterpretacion(data).subscribe(res => {\n          this.onGetInterpretacion();\n          this.Interpretacion_evaluacion.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarInterpretacion() {\n      if (this.Interpretacion_evaluacion.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putInterpretacion(this.Interpretacion_evaluacion.value, this.InterpretacionEvaluacionId).subscribe(res => {\n          this.Interpretacion_evaluacion.reset();\n          this.onGetInterpretacion();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    }\n\n    onDeleteInterpretacion(_id) {\n      Swal.fire({\n        title: \"¿Está seguro de eliminar el elemento?\",\n        text: \"¡Si no lo está puede cancelar la accíon!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        cancelButtonText: 'Cancelar',\n        confirmButtonText: 'Si, eliminar elemento!'\n      }).then(result => {\n        if (result.value) {\n          this._liquidos_penetrantes.deleteInterpretacion(_id).subscribe(res => {\n            if (res.status === 200) {\n              Swal.fire({\n                title: '¡El elemento se ha eliminado correctamente!',\n                icon: 'success',\n                confirmButtonText: 'Cerrar'\n              });\n              this.onGetInterpretacion();\n            }\n          }, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar'\n                });\n              }\n\n              if (error.status == 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n                });\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n\n    onGetObservaciones() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getObservaciones(orden_id, informe_id).subscribe(res => {\n          this.ObservacionesId = res.body._id;\n          this.Observaciones.patchValue(res.body);\n          console.log('ob', res);\n          this.ObservacionesStatus = false;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.ObservacionesStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onSubmitObservaciones() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Observaciones.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postObservaciones(data).subscribe(res => {\n          this.onGetObservaciones();\n          this.Observaciones.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarObservaciones() {\n      if (this.Observaciones.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putObservaciones(this.Observaciones.value, this.ObservacionesId).subscribe(res => {\n          this.Observaciones.reset();\n          this.onGetObservaciones();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    } //REGISTRO FOTOGRÁFICO\n\n\n    onPhotoSelectedRegistroFotos(event) {\n      if (event.target.files && event.target.files[0]) {\n        this.fileRegistroFotos = event.target.files[0];\n      }\n    }\n\n    onSubmitRegistroFotos() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        const title = this.RegistroFotosForm.get('title').value;\n        const data = {\n          orden_id,\n          informe_id,\n          title\n        };\n\n        this._liquidos_penetrantes.postRegistroFotos(data, this.fileRegistroFotos).subscribe(res => {\n          this.onGetRegistroFotos();\n          this.RegistroFotosForm.reset();\n          this.myInputVariableRegistroFotos.nativeElement.value = \"\";\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onGetRegistroFotos() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getRegistroFotografico(orden_id, informe_id).subscribe(res => {\n          this.RegistroFotos = res.body;\n          res.body.map(item => {\n            const data = {\n              image: `${this.url}/img-uploads/${item.image}`,\n              title: item.title\n            };\n            this.imageObjectRegistroFotos.push(data);\n          });\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.ResultadosStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    deleteRegistroFoto(id) {\n      Swal.fire({\n        title: \"¿Está seguro de eliminar el registro fotográfico?\",\n        text: \"¡Si no lo está puede cancelar la acción!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        cancelButtonText: 'Cancelar',\n        confirmButtonText: 'Si, eliminar registro fotográfico!'\n      }).then(result => {\n        if (result.value) {\n          this._liquidos_penetrantes.deleteRegistroFoto(id).subscribe(res => {\n            Swal.fire({\n              title: '¡El registro fotográfico se ha eliminado correctamente!',\n              icon: 'success',\n              confirmButtonText: 'Cerrar'\n            });\n            this.onGetRegistroFotos();\n          }, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar'\n                });\n              }\n\n              if (error.status == 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n                });\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n\n    showLightboxRegistroFotos(index) {\n      this.selectedImageIndexRegistroFotos = index;\n      this.showFlagRegistroFotos = true;\n    }\n\n    closeEventHandlerRegistroFotos() {\n      this.showFlagRegistroFotos = false;\n      this.selectedImageIndexRegistroFotos = -1;\n    }\n    /* FIRMAS */\n\n\n    getFirmaElaboro() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getFirmaElboro(orden_id, informe_id).subscribe(res => {\n          this.firmaElaboroImg = res.body[0].firma;\n          this.firmaElaboroStatus = true;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {} else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    getFirmaReviso() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getFirmaReviso(orden_id, informe_id).subscribe(res => {\n          this.firmaRevisaImg = res.body[0].firma;\n          this.firmaRevisoStatus = true;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {} else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    windowOnloadCanvasElaboro() {\n      if (this.autoSaveIndex) {\n        setTimeout(() => {\n          var canvasElaboro = document.getElementById('firmaElaboro');\n          var ctxElaboro = canvasElaboro.getContext('2d');\n          $('#btn-finalizar-firma-elaboro').on('click', () => {\n            var dataUrl = canvasElaboro.toDataURL();\n\n            this._activatedRoute.params.subscribe(params => {\n              const {\n                orden_id,\n                informe_id\n              } = params;\n              let data = {\n                firma: dataUrl,\n                orden_id,\n                informe_id\n              };\n\n              this._liquidos_penetrantes.postFirmaElaboro(data).subscribe(res => {\n                this.getFirmaElaboro();\n              }, error => {\n                var errorMessage = error;\n\n                if (errorMessage != null) {\n                  var body = error.error;\n\n                  if (error.status === 404) {\n                    const Toast = Swal.mixin({\n                      toast: true,\n                      position: 'center',\n                      showConfirmButton: false,\n                      timer: 4000,\n                      timerProgressBar: true,\n                      width: '300px'\n                    });\n                    Toast.fire({\n                      icon: 'info',\n                      title: body.message\n                    });\n                  } else if (error.status === 500) {\n                    const Toast = Swal.mixin({\n                      toast: true,\n                      position: 'center',\n                      showConfirmButton: false,\n                      timer: 4000,\n                      timerProgressBar: true,\n                      width: '300px'\n                    });\n                    Toast.fire({\n                      icon: 'error',\n                      title: body.message\n                    });\n                  } else if (error.status === 0) {\n                    const Toast = Swal.mixin({\n                      toast: true,\n                      position: 'center',\n                      showConfirmButton: false,\n                      timer: 4000,\n                      timerProgressBar: true,\n                      width: '300px'\n                    });\n                    Toast.fire({\n                      icon: 'error',\n                      title: 'Por favor compruebe su conexión de internet'\n                    });\n                  }\n                }\n              });\n            });\n          });\n          $('#draw-clearBtn-firma-elaboro').on('click', () => {\n            ctxElaboro === null || ctxElaboro === void 0 ? void 0 : ctxElaboro.clearRect(0, 0, canvasElaboro.width, canvasElaboro.height);\n          });\n          /*     $('.guardarControlIngreso').on('click', () => {\n                this.statusImgSign = false\n                ctx.clearRect(0, 0, canvas.width, canvas.height)\n              }) */\n          // Activamos MouseEvent para nuestra pagina\n\n          var drawing = false;\n          var mousePos = {\n            x: 0,\n            y: 0\n          };\n          var lastPos = mousePos;\n          canvasElaboro.addEventListener(\"mousedown\", function (e) {\n            /*\n              Mas alla de solo llamar a una funcion, usamos function (e){...}\n              para mas versatilidad cuando ocurre un evento\n            */\n            drawing = true;\n            lastPos = getMousePos(canvasElaboro, e);\n          }, false);\n          canvasElaboro.addEventListener(\"mouseup\", function (e) {\n            drawing = false;\n          }, false);\n          canvasElaboro.addEventListener(\"mousemove\", function (e) {\n            mousePos = getMousePos(canvasElaboro, e);\n          }, false); // Activamos touchEvent para nuestra pagina\n\n          canvasElaboro.addEventListener(\"touchstart\", function (e) {\n            mousePos = getTouchPos(canvasElaboro, e);\n            e.preventDefault(); // Prevent scrolling when touching the canvasElaboro\n\n            var touch = e.touches[0];\n            var mouseEvent = new MouseEvent(\"mousedown\", {\n              clientX: touch.clientX,\n              clientY: touch.clientY\n            });\n            canvasElaboro.dispatchEvent(mouseEvent);\n          }, false);\n          canvasElaboro.addEventListener(\"touchend\", function (e) {\n            e.preventDefault(); // Prevent scrolling when touching the canvasElaboro\n\n            var mouseEvent = new MouseEvent(\"mouseup\", {});\n            canvasElaboro.dispatchEvent(mouseEvent);\n          }, false);\n          canvasElaboro.addEventListener(\"touchleave\", function (e) {\n            // Realiza el mismo proceso que touchend en caso de que el dedo se deslice fuera del canvasElaboro\n            e.preventDefault(); // Prevent scrolling when touching the canvasElaboro\n\n            var mouseEvent = new MouseEvent(\"mouseup\", {});\n            canvasElaboro.dispatchEvent(mouseEvent);\n          }, false);\n          canvasElaboro.addEventListener(\"touchmove\", function (e) {\n            e.preventDefault(); // Prevent scrolling when touching the canvasElaboro\n\n            var touch = e.touches[0];\n            var mouseEvent = new MouseEvent(\"mousemove\", {\n              clientX: touch.clientX,\n              clientY: touch.clientY\n            });\n            canvasElaboro.dispatchEvent(mouseEvent);\n          }, false); // Get the position of the mouse relative to the canvasElaboro\n\n          function getMousePos(canvasDom, mouseEvent) {\n            var rect = canvasDom.getBoundingClientRect();\n            /*\n              Devuelve el tamaño de un elemento y su posición relativa respecto\n              a la ventana de visualización (viewport).\n            */\n\n            return {\n              x: mouseEvent.clientX - rect.left,\n              y: mouseEvent.clientY - rect.top\n            };\n          } // Get the position of a touch relative to the canvas\n\n\n          function getTouchPos(canvasDom, touchEvent) {\n            var rect = canvasDom.getBoundingClientRect();\n            /*\n              Devuelve el tamaño de un elemento y su posición relativa respecto\n              a la ventana de visualización (viewport).\n            */\n\n            return {\n              x: touchEvent.touches[0].clientX - rect.left,\n              y: touchEvent.touches[0].clientY - rect.top\n            };\n          } // Draw to the canvas\n\n\n          function renderCanvas() {\n            if (drawing) {\n              var tint = '#000000';\n              var punta = 3;\n              ctxElaboro.strokeStyle = tint;\n              ctxElaboro.beginPath();\n              ctxElaboro.moveTo(lastPos.x, lastPos.y);\n              ctxElaboro.lineTo(mousePos.x, mousePos.y);\n              ctxElaboro.lineWidth = punta;\n              ctxElaboro.stroke();\n              ctxElaboro.closePath();\n              lastPos = mousePos;\n            }\n          } // Allow for animation\n\n\n          (function drawLoop() {\n            requestAnimationFrame(drawLoop);\n            renderCanvas();\n          })();\n        }, 2);\n      }\n    }\n\n    windowOnloadCanvasReviso() {\n      if (this.autoSaveIndex) {\n        setTimeout(() => {\n          var firmaReviso = document.getElementById('firmaReviso');\n          var ctxReviso = firmaReviso.getContext('2d');\n          $('#btn-finalizar-firma-reviso').on('click', () => {\n            var dataUrl = firmaReviso.toDataURL();\n\n            this._activatedRoute.params.subscribe(params => {\n              const {\n                orden_id,\n                informe_id\n              } = params;\n              let data = {\n                firma: dataUrl,\n                orden_id,\n                informe_id\n              };\n\n              this._liquidos_penetrantes.postFirmaReviso(data).subscribe(res => {\n                this.getFirmaReviso();\n              }, error => {\n                var errorMessage = error;\n\n                if (errorMessage != null) {\n                  var body = error.error;\n\n                  if (error.status === 404) {\n                    const Toast = Swal.mixin({\n                      toast: true,\n                      position: 'center',\n                      showConfirmButton: false,\n                      timer: 4000,\n                      timerProgressBar: true,\n                      width: '300px'\n                    });\n                    Toast.fire({\n                      icon: 'info',\n                      title: body.message\n                    });\n                  } else if (error.status === 500) {\n                    const Toast = Swal.mixin({\n                      toast: true,\n                      position: 'center',\n                      showConfirmButton: false,\n                      timer: 4000,\n                      timerProgressBar: true,\n                      width: '300px'\n                    });\n                    Toast.fire({\n                      icon: 'error',\n                      title: body.message\n                    });\n                  } else if (error.status === 0) {\n                    const Toast = Swal.mixin({\n                      toast: true,\n                      position: 'center',\n                      showConfirmButton: false,\n                      timer: 4000,\n                      timerProgressBar: true,\n                      width: '300px'\n                    });\n                    Toast.fire({\n                      icon: 'error',\n                      title: 'Por favor compruebe su conexión de internet'\n                    });\n                  }\n                }\n              });\n            });\n          });\n          $('#draw-clearBtn-firma-reviso').on('click', () => {\n            ctxReviso === null || ctxReviso === void 0 ? void 0 : ctxReviso.clearRect(0, 0, firmaReviso.width, firmaReviso.height);\n          });\n          /*     $('.guardarControlIngreso').on('click', () => {\n                this.statusImgSign = false\n                ctx.clearRect(0, 0, canvas.width, canvas.height)\n              }) */\n          // Activamos MouseEvent para nuestra pagina\n\n          var drawing = false;\n          var mousePos = {\n            x: 0,\n            y: 0\n          };\n          var lastPos = mousePos;\n          firmaReviso.addEventListener(\"mousedown\", function (e) {\n            /*\n              Mas alla de solo llamar a una funcion, usamos function (e){...}\n              para mas versatilidad cuando ocurre un evento\n            */\n            drawing = true;\n            lastPos = getMousePos(firmaReviso, e);\n          }, false);\n          firmaReviso.addEventListener(\"mouseup\", function (e) {\n            drawing = false;\n          }, false);\n          firmaReviso.addEventListener(\"mousemove\", function (e) {\n            mousePos = getMousePos(firmaReviso, e);\n          }, false); // Activamos touchEvent para nuestra pagina\n\n          firmaReviso.addEventListener(\"touchstart\", function (e) {\n            mousePos = getTouchPos(firmaReviso, e);\n            e.preventDefault(); // Prevent scrolling when touching the firmaReviso\n\n            var touch = e.touches[0];\n            var mouseEvent = new MouseEvent(\"mousedown\", {\n              clientX: touch.clientX,\n              clientY: touch.clientY\n            });\n            firmaReviso.dispatchEvent(mouseEvent);\n          }, false);\n          firmaReviso.addEventListener(\"touchend\", function (e) {\n            e.preventDefault(); // Prevent scrolling when touching the firmaReviso\n\n            var mouseEvent = new MouseEvent(\"mouseup\", {});\n            firmaReviso.dispatchEvent(mouseEvent);\n          }, false);\n          firmaReviso.addEventListener(\"touchleave\", function (e) {\n            // Realiza el mismo proceso que touchend en caso de que el dedo se deslice fuera del firmaReviso\n            e.preventDefault(); // Prevent scrolling when touching the firmaReviso\n\n            var mouseEvent = new MouseEvent(\"mouseup\", {});\n            firmaReviso.dispatchEvent(mouseEvent);\n          }, false);\n          firmaReviso.addEventListener(\"touchmove\", function (e) {\n            e.preventDefault(); // Prevent scrolling when touching the firmaReviso\n\n            var touch = e.touches[0];\n            var mouseEvent = new MouseEvent(\"mousemove\", {\n              clientX: touch.clientX,\n              clientY: touch.clientY\n            });\n            firmaReviso.dispatchEvent(mouseEvent);\n          }, false); // Get the position of the mouse relative to the firmaReviso\n\n          function getMousePos(canvasDom, mouseEvent) {\n            var rect = canvasDom.getBoundingClientRect();\n            /*\n              Devuelve el tamaño de un elemento y su posición relativa respecto\n              a la ventana de visualización (viewport).\n            */\n\n            return {\n              x: mouseEvent.clientX - rect.left,\n              y: mouseEvent.clientY - rect.top\n            };\n          } // Get the position of a touch relative to the canvas\n\n\n          function getTouchPos(canvasDom, touchEvent) {\n            var rect = canvasDom.getBoundingClientRect();\n            /*\n              Devuelve el tamaño de un elemento y su posición relativa respecto\n              a la ventana de visualización (viewport).\n            */\n\n            return {\n              x: touchEvent.touches[0].clientX - rect.left,\n              y: touchEvent.touches[0].clientY - rect.top\n            };\n          } // Draw to the canvas\n\n\n          function renderCanvas() {\n            if (drawing) {\n              var tint = '#000000';\n              var punta = 3;\n              ctxReviso.strokeStyle = tint;\n              ctxReviso.beginPath();\n              ctxReviso.moveTo(lastPos.x, lastPos.y);\n              ctxReviso.lineTo(mousePos.x, mousePos.y);\n              ctxReviso.lineWidth = punta;\n              ctxReviso.stroke();\n              ctxReviso.closePath();\n              lastPos = mousePos;\n            }\n          } // Allow for animation\n\n\n          (function drawLoop() {\n            requestAnimationFrame(drawLoop);\n            renderCanvas();\n          })();\n        }, 2);\n      }\n    }\n\n    finalizarInforme() {\n      Swal.fire({\n        title: \"¿Está seguro de finalizar el informe?\",\n        text: \"¡Si no lo está puede cancelar la acción!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        cancelButtonText: 'Cancelar',\n        confirmButtonText: 'Si, finalizar el informe!'\n      }).then(result => {\n        if (result.value) {\n          this._liquidos_penetrantes.putFinalizarInforme(this.informe_id).subscribe(res => {\n            Swal.fire({\n              title: '¡El informe se finalizo correctamente!',\n              icon: 'success',\n              confirmButtonText: 'Cerrar'\n            });\n          }, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar'\n                });\n              }\n\n              if (error.status == 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n                });\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n\n  }\n\n  LiquidosPenetrantesComponent.ɵfac = function LiquidosPenetrantesComponent_Factory(t) {\n    return new (t || LiquidosPenetrantesComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AdherenciaComponent), i0.ɵɵdirectiveInject(i4.OrdenesService), i0.ɵɵdirectiveInject(i5.LiquidosPenetrantesService), i0.ɵɵdirectiveInject(i6.InformesRutasService), i0.ɵɵdirectiveInject(i7.OpcionesInformesService));\n  };\n\n  LiquidosPenetrantesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LiquidosPenetrantesComponent,\n    selectors: [[\"app-liquidos-penetrantes\"]],\n    viewQuery: function LiquidosPenetrantesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myInputVariableRegistroFotos = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiSelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasElaboroRef = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([AdherenciaComponent])],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"flex\", \"items-start\", \"justify-between\"], [\"class\", \"grid grid-cols-2 gap-x-4 gap-y-1\", 4, \"ngIf\"], [1, \"projects-section-header\"], [1, \"flex\", \"sm\", \"items-start\", \"sm:items-center\", \"sm:justify-between\", \"py-8\", \"px-6\", \"px-8\"], [1, \"text-3xl\", \"font-extrabold\", \"tracking-tight\", \"leading-none\"], [\"class\", \"p-3 bg-card shadow rounded overflow-hidden\", 3, \"formGroup\", 4, \"ngIf\"], [1, \"grid\", \"grid-cols-2\", \"gap-x-4\", \"gap-y-1\"], [1, \"text-4xl\", \"tracking-tight\", \"text-secondary\"], [1, \"text-4xl\"], [1, \"font-medium\", \"tracking-tight\", \"text-secondary\"], [1, \"font-medium\"], [1, \"p-3\", \"bg-card\", \"shadow\", \"rounded\", \"overflow-hidden\", 3, \"formGroup\"], [\"orientation\", \"vertical\", 3, \"selectedIndex\", \"selectionChange\"], [\"stepper\", \"\"], [3, \"stepControl\"], [3, \"formGroup\"], [\"matStepLabel\", \"\"], [1, \"flex\"], [\"appearance\", \"outline\", 1, \"flex-auto\"], [3, \"formControlName\"], [\"placeholderLabel\", \"Filtro\", 3, \"formControl\"], [\"ngxMatSelectNoEntriesFound\", \"\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"Prc\", 3, \"formControlName\", \"selectionChange\"], [3, \"value\"], [\"class\", \"flex\", 4, \"ngIf\"], [\"multiple\", \"\", 3, \"formControlName\"], [3, \"formControlName\", \"selectionChange\"], [1, \"flex\", \"justify-end\", \"mt-8\", \"ng-star-inserted\"], [\"type\", \"submit\", \"mat-button\", \"\", \"matStepperNext\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"next-save\", 3, \"disabled\", \"click\"], [1, \"mat-button-wrapper\"], [\"matripple\", \"\", 1, \"mat-ripple\", \"mat-button-ripple\"], [1, \"mat-button-focus-overlay\"], [1, \"content-inputs\", \"flex\"], [\"id\", \"Deta\", 3, \"formControlName\", \"selectionChange\"], [\"class\", \"flex-auto\", \"appearance\", \"outline\", 4, \"ngIf\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"required\", \"\", 3, \"formControlName\", \"placeholder\"], [1, \"flex\", \"justify-end\"], [\"class\", \"mat-focus-indicator mat-stepper-next px-8 mat-flat-button mat-button-base mat-primary back mr-2\", \"mat-flat-button\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"submit\", \"mat-flat-button\", \"\", \"type\", \"button\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"table\", \"table-hover\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-flat-button\", \"\", \"type\", \"button\", \"matStepperPrevious\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"back\", \"mr-2\"], [\"type\", \"button\", \"mat-flat-button\", \"\", \"type\", \"button\", \"matStepperNext\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"next-save\"], [\"id\", \"Norm\", 3, \"formControlName\", \"selectionChange\"], [1, \"my-6\", \"font-medium\"], [\"id\", \"Tip\", 3, \"formControlName\", \"selectionChange\"], [\"id\", \"Met\", 3, \"formControlName\", \"selectionChange\"], [\"id\", \"Prd\", 3, \"formControlName\", \"selectionChange\"], [\"type\", \"submit\", \"mat-button\", \"\", \"matStepperNext\", \"\", \"matStepperNext\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"next-save\", 3, \"disabled\", \"click\"], [\"id\", \"Activ\", 3, \"formControlName\", \"selectionChange\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"id\", \"TiempPe\", 3, \"formControlName\", \"placeholder\"], [4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Elementos Inspeccionados\", 3, \"formControlName\", \"modules\"], [1, \"flex\", \"justify-end\", \"mt-3\"], [\"placeholder\", \"Observaciones\", 3, \"formControlName\", \"modules\"], [\"matPrefix\", \"\", 1, \"icon-size-5\", \"icon-form\"], [1, \"content-inputs\"], [1, \"mb-3\"], [\"for\", \"formFileSm\", 1, \"form-label\"], [\"id\", \"formFileSmRegistroFotos\", \"type\", \"file\", \"accept\", \"image/x-png,image/jpeg,image/jpg\", 1, \"form-control\", \"form-control-sm\", 3, \"change\"], [\"formFileSmRegistroFotos\", \"\"], [1, \"flex\", \"justify-end\", \"mb-3\"], [\"type\", \"submit\", \"mat-flat-button\", \"\", \"type\", \"submit\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"btn\", \"btn-success\", \"bt-m\", 3, \"click\"], [1, \"marging\", \"row-img\"], [1, \"column-img\"], [\"cols\", \"2\", \"rowHeight\", \"2:1\"], [3, \"images\", \"imageIndex\", \"show\", \"close\"], [1, \"form-group\"], [\"for\", \"firma-elaboro\"], [\"id\", \"firmaElaboro\", \"width\", \"466\", \"height\", \"154\", 1, \"firma\"], [\"firmaElaboro\", \"\"], [1, \"btn-toolbar\"], [1, \"me-2\"], [\"type\", \"button\", \"id\", \"btn-finalizar-firma-elaboro\", 1, \"btn\", \"btn-outline-success\"], [\"type\", \"button\", \"id\", \"draw-clearBtn-firma-elaboro\", 1, \"btn\", \"btn-secondary\", \"float-sm-right\"], [\"width\", \"466\", \"height\", \"154\", 3, \"src\"], [\"for\", \"firma-reviso\"], [\"id\", \"firmaReviso\", \"width\", \"466\", \"height\", \"154\", 1, \"firma\"], [\"type\", \"button\", \"id\", \"btn-finalizar-firma-reviso\", 1, \"btn\", \"btn-outline-success\"], [\"type\", \"button\", \"id\", \"draw-clearBtn-firma-reviso\", 1, \"btn\", \"btn-secondary\", \"float-sm-right\"], [\"type\", \"button\", \"mat-flat-button\", \"\", \"type\", \"button\", \"matStepperNext\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"next-save\", 3, \"click\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"id\", \"OtroPrc\", \"value\", \"\", 3, \"placeholder\", \"formControlName\"], [\"matInput\", \"\", \"autocomplete\", \"off\", 3, \"placeholder\", \"formControlName\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"id\", \"OtroDet\", \"value\", \"\", 3, \"formControlName\", \"placeholder\"], [\"mat-flat-button\", \"\", \"type\", \"button\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"back\", \"mr-2\", 3, \"click\"], [3, \"click\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"id\", \"OtraNorm\", \"value\", \"\", 3, \"placeholder\", \"formControlName\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"id\", \"OtroTip\", \"value\", \"\", 3, \"placeholder\", \"formControlName\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"id\", \"OtroMet\", \"value\", \"\", 3, \"placeholder\", \"formControlName\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"autocomplete\", \"off\", \"id\", \"OtroPrd\", \"required\", \"\", 3, \"placeholder\", \"formControlName\"], [1, \"dropdown\"], [\"type\", \"button\", \"role\", \"button\", \"id\", \"dropdownMenuLink\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"btn\", \"btn-sm\", \"btn-icon\"], [\"data-toggle\", \"tooltip\", \"data-placement\", \"top\", \"title\", \"\", \"data-original-title\", \"Actions\", 1, \"fas\", \"fa-ellipsis-h\"], [\"aria-labelledby\", \"dropdownMenuLink\", 1, \"dropdown-menu\"], [1, \"dropdown-item\", 3, \"click\"], [1, \"fas\", \"fa-pencil-alt\", 2, \"color\", \"rgb(26, 25, 25)\"], [1, \"dropdown-item\", \"text-danger\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"fas\", \"fa-trash\", 2, \"color\", \"rgb(148, 21, 21)\"], [1, \"mat-step-custom-click\"], [1, \"mat-step-custom-click\", 3, \"click\"], [\"mat-card-image\", \"\", 1, \"img\", 3, \"src\", \"alt\", \"click\"], [\"mat-line\", \"\"], [\"mat-mini-fab\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function LiquidosPenetrantesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, LiquidosPenetrantesComponent_div_1_Template, 22, 8, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6, \"Informe inspecci\\u00F3n l\\u00EDquidos penetrantes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, LiquidosPenetrantesComponent_form_7_Template, 395, 156, \"form\", 5);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.detallesOrden);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.autoSaveIndex);\n      }\n    },\n    directives: [i8.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i9.MatStepper, i9.MatStep, i9.MatStepLabel, i10.MatFormField, i10.MatLabel, i11.MatSelect, i1.NgControlStatus, i1.FormControlName, i12.MatOption, i13.MatSelectSearchComponent, i1.FormControlDirective, i13.MatSelectNoEntriesFoundDirective, i14.MatButton, i15.MatIcon, i8.NgForOf, i9.MatStepperNext, i16.MatInput, i1.DefaultValueAccessor, i1.RequiredValidator, i9.MatStepperPrevious, i17.QuillEditorComponent, i10.MatPrefix, i18.MatGridList, i19.NgImageFullscreenViewComponent, i1.NgForm, i18.MatGridTile, i20.MatCardImage, i18.MatGridTileText, i18.MatGridTileFooterCssMatStyler, i12.MatLine],\n    pipes: [i8.DatePipe, i8.AsyncPipe],\n    styles: [\".gap-y-1[_ngcontent-%COMP%] {\\n    grid-row-gap: 0.25rem !important;\\n    row-gap: 0.25rem !important;\\n  }\\n\\n  .gap-x-4[_ngcontent-%COMP%] {\\n    grid-column-gap: 1rem !important;\\n    column-gap: 1rem !important;\\n  }\\n\\n  .grid-cols-2[_ngcontent-%COMP%] {\\n    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;\\n  }\\n\\n  .grid[_ngcontent-%COMP%] {\\n    display: grid !important;\\n  }\\n\\n  @media (min-width: 600px) {\\n    .sm\\\\:justify-between[_ngcontent-%COMP%] {\\n      justify-content: space-between !important;\\n    }\\n  }\\n\\n  @media (min-width: 600px) {\\n    .sm[_ngcontent-%COMP%] {\\n      align-items: center !important;\\n    }\\n  }\\n\\n  @media (min-width: 600px) {\\n    .sm[_ngcontent-%COMP%] {\\n      flex-direction: row !important;\\n    }\\n  }\\n\\n  @media (min-width: 960px) {\\n    .px-8[_ngcontent-%COMP%] {\\n      padding-left: 2rem !important;\\n      padding-right: 2rem !important;\\n    }\\n  }\\n\\n  .tracking-tight[_ngcontent-%COMP%] {\\n    letter-spacing: -0.025em !important;\\n  }\\n\\n  .leading-none[_ngcontent-%COMP%] {\\n    line-height: 1 !important;\\n  }\\n\\n  .font-extrabold[_ngcontent-%COMP%] {\\n    font-weight: 800 !important;\\n  }\\n\\n  .text-4xl[_ngcontent-%COMP%] {\\n    font-size: 2rem !important;\\n  }\\n\\n  @media (min-width: 600px) {\\n    .sm\\\\:mt-0[_ngcontent-%COMP%] {\\n      margin-top: 0 !important;\\n    }\\n  }\\n\\n  .mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%] {\\n    padding: 0 20px !important;\\n    border-radius: 9999px !important;\\n  }\\n\\n  .mt-4[_ngcontent-%COMP%] {\\n    margin-top: 1rem !important;\\n  }\\n\\n  .py-8[_ngcontent-%COMP%] {\\n    padding-top: 2rem !important;\\n    padding-bottom: 2rem !important;\\n  }\\n\\n  .px-6[_ngcontent-%COMP%] {\\n    padding-left: 1.5rem !important;\\n    padding-right: 1.5rem !important;\\n  }\\n\\n  .items-start[_ngcontent-%COMP%] {\\n    align-items: flex-start !important;\\n  }\\n\\n  .flex-col[_ngcontent-%COMP%] {\\n    flex-direction: column !important;\\n  }\\n\\n  .divide-y[_ngcontent-%COMP%] {\\n    border: calc(1px * calc(1 - 0)) rgba(0, 0, 0, 0.125) solid !important;\\n    border-radius: 10px;\\n  }\\n\\n  .select-none[_ngcontent-%COMP%] {\\n    -webkit-user-select: none !important;\\n    user-select: none !important;\\n  }\\n\\n  .w-full[_ngcontent-%COMP%] {\\n    width: 100% !important;\\n  }\\n\\n  .h-16[_ngcontent-%COMP%] {\\n    height: 4rem !important;\\n  }\\n\\n  .pl-10[_ngcontent-%COMP%] {\\n    padding-left: 2.5rem !important;\\n  }\\n\\n  .items-center[_ngcontent-%COMP%] {\\n    align-items: center !important;\\n  }\\n\\n  .h-full[_ngcontent-%COMP%] {\\n    height: 100% !important;\\n  }\\n\\n  .flex[_ngcontent-%COMP%] {\\n    display: flex !important;\\n  }\\n\\n  .relative[_ngcontent-%COMP%] {\\n    position: relative !important;\\n  }\\n\\n  .bg-primary[_ngcontent-%COMP%] {\\n    --tw-bg-opacity: 1 !important;\\n    background-color: (rgba(79, 70, 229), var(--tw-bg-opacity)) !important;\\n  }\\n\\n  .flex-0[_ngcontent-%COMP%] {\\n    flex: 0 0 auto !important;\\n  }\\n\\n  .w-1[_ngcontent-%COMP%] {\\n    width: 0.25rem !important;\\n  }\\n\\n  .z-10[_ngcontent-%COMP%] {\\n    z-index: 10 !important;\\n  }\\n\\n  .-bottom-px[_ngcontent-%COMP%] {\\n    bottom: -1px !important;\\n  }\\n\\n  .-top-px[_ngcontent-%COMP%] {\\n    top: -1px !important;\\n  }\\n\\n  .right-0[_ngcontent-%COMP%] {\\n    right: 0px !important;\\n  }\\n\\n  .absolute[_ngcontent-%COMP%], .\\\\!absolute[_ngcontent-%COMP%] {\\n    position: absolute !important;\\n  }\\n\\n  .items-center[_ngcontent-%COMP%] {\\n    align-items: center !important;\\n  }\\n\\n  .cursor-move[_ngcontent-%COMP%] {\\n    cursor: move !important;\\n  }\\n\\n  .w-8[_ngcontent-%COMP%] {\\n    width: 2rem !important;\\n  }\\n\\n  .left-0[_ngcontent-%COMP%] {\\n    left: 0px !important;\\n  }\\n\\n  .inset-y-0[_ngcontent-%COMP%] {\\n    top: 0px !important;\\n    bottom: 0px !important;\\n  }\\n\\n  .icon-size-5[_ngcontent-%COMP%] {\\n    width: 1.25rem !important;\\n    height: 1.25rem !important;\\n    min-width: 1.25rem !important;\\n    min-height: 1.25rem !important;\\n    font-size: 1.25rem !important;\\n    line-height: 1.25rem !important;\\n  }\\n\\n  .mat-icon[_ngcontent-%COMP%] {\\n    display: inline-flex !important;\\n    align-items: center;\\n    justify-content: center;\\n    width: 24px;\\n    min-width: 24px;\\n    height: 24px;\\n    min-height: 24px;\\n    font-size: 24px;\\n    line-height: 24px;\\n    -webkit-appearance: none !important;\\n  }\\n\\n  .text-hint[_ngcontent-%COMP%] {\\n    --tw-text-opacity: 1 !important;\\n    color: rgba(148, 163, 184, var(--tw-text-opacity)) !important;\\n  }\\n\\n  .bg-gray-100[_ngcontent-%COMP%]:hover {\\n    background-color: rgb(241 245 249);\\n  }\\n\\n  .leading-none[_ngcontent-%COMP%] {\\n    line-height: 1 !important;\\n  }\\n\\n  .-ml-2\\\\.5[_ngcontent-%COMP%] {\\n    margin-left: -0.625rem !important;\\n  }\\n\\n  .mr-2[_ngcontent-%COMP%] {\\n    margin-right: 0.5rem !important;\\n  }\\n\\n  .mat-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-fab[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-mini-fab[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-raised-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%] {\\n    position: relative;\\n    display: inline-flex !important;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100%;\\n    z-index: 2;\\n  }\\n\\n  .pr-7[_ngcontent-%COMP%] {\\n    padding-right: 1.75rem !important;\\n  }\\n\\n  .items-center[_ngcontent-%COMP%] {\\n    align-items: center !important;\\n  }\\n\\n  .min-w-0[_ngcontent-%COMP%] {\\n    min-width: 0px !important;\\n  }\\n\\n  .h-full[_ngcontent-%COMP%] {\\n    height: 100% !important;\\n  }\\n\\n  .link-informe[_ngcontent-%COMP%] {\\n    color: inherit;\\n    text-decoration: inherit;\\n  }\\n\\n  .truncate[_ngcontent-%COMP%] {\\n    overflow: hidden !important;\\n    text-overflow: ellipsis !important;\\n    white-space: nowrap !important;\\n  }\\n\\n  .w-4[_ngcontent-%COMP%] {\\n    width: 1rem !important;\\n  }\\n\\n  .h-4[_ngcontent-%COMP%] {\\n    height: 1rem !important;\\n  }\\n\\n  .mr-3[_ngcontent-%COMP%] {\\n    margin-right: 0.75rem !important;\\n  }\\n\\n  .text-sm[_ngcontent-%COMP%] {\\n    font-size: 0.75rem !important;\\n  }\\n\\n  .whitespace-nowrap[_ngcontent-%COMP%] {\\n    white-space: nowrap !important;\\n  }\\n\\n  .text-secondary[_ngcontent-%COMP%] {\\n    --tw-text-opacity: 1 !important;\\n    color: rgba(100, 116, 139, var(--tw-text-opacity)) !important;\\n  }\\n\\n  .icon-size-4[_ngcontent-%COMP%] {\\n    width: 1rem !important;\\n    height: 1rem !important;\\n    min-width: 1rem !important;\\n    min-height: 1rem !important;\\n    font-size: 1rem !important;\\n    line-height: 1rem !important;\\n  }\\n\\n  .text-green-600[_ngcontent-%COMP%] {\\n    --tw-text-opacity: 1 !important;\\n    color: rgb(22 163 74 / var(--tw-text-opacity)) !important;\\n  }\\n\\n  .flex-auto[_ngcontent-%COMP%] {\\n    flex: 1 1 auto !important;\\n  }\\n\\n  .bg-primary[_ngcontent-%COMP%] {\\n    --tw-bg-opacity: 1 !important;\\n    background-color: rgba(79, 70, 229, var(--tw-bg-opacity)) !important;\\n  }\\n\\n  .flex-0[_ngcontent-%COMP%] {\\n    flex: 0 0 auto !important;\\n  }\\n\\n  .w-1[_ngcontent-%COMP%] {\\n    width: 0.25rem !important;\\n  }\\n\\n  .z-10[_ngcontent-%COMP%] {\\n    z-index: 10 !important;\\n  }\\n\\n  .-bottom-px[_ngcontent-%COMP%] {\\n    bottom: -1px !important;\\n  }\\n\\n  .-top-px[_ngcontent-%COMP%] {\\n    top: -1px !important;\\n  }\\n\\n  .right-0[_ngcontent-%COMP%] {\\n    right: 0px !important;\\n  }\\n\\n  .indication[_ngcontent-%COMP%] {\\n    display: none;\\n    border-top-right-radius: 10px;\\n    border-bottom-right-radius: 10px;\\n  }\\n\\n  .bg-gray-100[_ngcontent-%COMP%]:hover    + .indication[_ngcontent-%COMP%] {\\n    display: block !important;\\n  }\\n\\n    .mat-form-field-flex > .mat-form-field-infix {\\n    padding: 0.3em 0px !important;\\n  }\\n\\n    .mat-form-field-label-wrapper {\\n    top: -1.5em;\\n  }\\n\\n   \\n    .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float\\n    .mat-form-field-label {\\n    transform: translateY(-1.1em) scale(0.75);\\n    width: 133.33333%;\\n  }\\n\\n  .icon-form[_ngcontent-%COMP%] {\\n    color: rgba(148, 163, 184, 1) !important;\\n    margin-right: 12px;\\n  }\\n\\n    .mat-step-header .mat-step-icon-selected, .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\\n    background-color: #4f46e5 !important;\\n    color: #ffffff !important;\\n  }\\n\\n  .justify-end[_ngcontent-%COMP%] {\\n    justify-content: flex-end !important;\\n  }\\n\\n  .next-save[_ngcontent-%COMP%] {\\n    background-color: #3e66e9;\\n  }\\n\\n  .back[_ngcontent-%COMP%] {\\n    background-color: #1e293b;\\n  }\\n\\n  .content-inputs[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]    + .mat-form-field[_ngcontent-%COMP%] {\\n    margin-left: 8px;\\n  }\\n\\n  table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    text-align: center;\\n  }\\n\\n  .card[_ngcontent-%COMP%] {\\n    box-shadow: 1px 1px 16px rgb(202, 202, 202);\\n    z-index: 100 !important;\\n  }\\n\\n  .projects-section-header[_ngcontent-%COMP%] {\\n    margin-top: -20px;\\n    margin-bottom: 50px;\\n  }\\n\\n  .btn-close[_ngcontent-%COMP%] {\\n    width: 5px !important;\\n    height: 5px !important;\\n    background-color: rgb(233, 65, 61);\\n    border-radius: 50%;\\n  }\\n\\n  .status[_ngcontent-%COMP%] {\\n    border-radius: 4px;\\n    align-items: center;\\n    padding: 4px 8px;\\n    font-size: 12px;\\n  }\\n\\n  .status[_ngcontent-%COMP%]:before {\\n    content: \\\"\\\";\\n    width: 4px;\\n    height: 4px;\\n    border-radius: 50%;\\n    margin-right: 4px;\\n  }\\n\\n  .status.active[_ngcontent-%COMP%] {\\n    color: #2ba972;\\n    background-color: rgba(43, 169, 114, 0.2);\\n  }\\n\\n  .status.active[_ngcontent-%COMP%]:before {\\n    background-color: #2ba972;\\n  }\\n\\n  .status.disabled-btn[_ngcontent-%COMP%] {\\n    color: #59719d;\\n    background-color: rgba(89, 113, 157, 0.2);\\n  }\\n\\n  .status.disabled-btn[_ngcontent-%COMP%]:before {\\n    background-color: #59719d;\\n  }\\n\\n  .img-user[_ngcontent-%COMP%] {\\n    width: 40px;\\n    height: 40px;\\n    object-fit: cover;\\n    border-radius: 50%;\\n    margin-right: 4 px;\\n    float: left;\\n  }\\n\\n  .alert-danger[_ngcontent-%COMP%] {\\n    margin-top: 15px;\\n    padding: 10px;\\n  }\\n\\n  .content[_ngcontent-%COMP%] {\\n    flex: 2;\\n    background-color: #fff;\\n    border-radius: 32px;\\n    padding: 32px 32px 10px 32px;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .table[_ngcontent-%COMP%] {\\n    border-spacing: 0 0.85rem !important;\\n    border-collapse: separate !important;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   .dropdown[_ngcontent-%COMP%] {\\n    display: inline-block;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    vertical-align: middle;\\n    margin-bottom: 10px;\\n    border: none;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    border: none;\\n    font-size: 12px;\\n    letter-spacing: 1px;\\n    text-transform: uppercase;\\n    background: transparent;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    background: #fff;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child {\\n    border-top-left-radius: 10px;\\n    border-bottom-left-radius: 10px;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child {\\n    border-top-right-radius: 10px;\\n    border-bottom-right-radius: 10px;\\n  }\\n\\n  tr[_ngcontent-%COMP%] {\\n    box-shadow: 1px 1px 16px rgb(202, 202, 202);\\n    border-radius: 20px;\\n  }\\n\\n  table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[role=\\\"row\\\"][_ngcontent-%COMP%]    > td[_ngcontent-%COMP%]:first-child:before, table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[role=\\\"row\\\"][_ngcontent-%COMP%]    > th[_ngcontent-%COMP%]:first-child:before {\\n    top: 28px;\\n    left: 14px;\\n    border: none;\\n    box-shadow: none;\\n  }\\n\\n  table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[role=\\\"row\\\"][_ngcontent-%COMP%]    > td[_ngcontent-%COMP%]:first-child, table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[role=\\\"row\\\"][_ngcontent-%COMP%]    > th[_ngcontent-%COMP%]:first-child {\\n    padding-left: 48px;\\n  }\\n\\n  table.dataTable[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr.child[_ngcontent-%COMP%]   ul.dtr-details[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n\\n  table.dataTable[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr.child[_ngcontent-%COMP%]   span.dtr-title[_ngcontent-%COMP%] {\\n    min-width: 50%;\\n  }\\n\\n  table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]    > td.child[_ngcontent-%COMP%], table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]    > th.child[_ngcontent-%COMP%], table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]    > td.dataTables_empty[_ngcontent-%COMP%] {\\n    padding: 0.75rem 1rem 0.125rem;\\n  }\\n\\n  div.dataTables_wrapper[_ngcontent-%COMP%]   div.dataTables_length[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], div.dataTables_wrapper[_ngcontent-%COMP%]   div.dataTables_filter[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    margin-bottom: 0;\\n  }\\n\\n  @media (max-width: 767px) {\\n    div.dataTables_wrapper[_ngcontent-%COMP%]   div.dataTables_paginate[_ngcontent-%COMP%]   ul.pagination[_ngcontent-%COMP%] {\\n      justify-content: center !important;\\n      margin-top: 1rem;\\n    }\\n    .table-responsive[_ngcontent-%COMP%] {\\n      overflow-x: auto !important;\\n    }\\n  }\\n\\n  @media (min-width: 767px) {\\n    .table-responsive[_ngcontent-%COMP%] {\\n      overflow-x: initial !important;\\n    }\\n  }\\n\\n  @media (max-width: 420px) {\\n    .projects-section-header[_ngcontent-%COMP%] {\\n      margin-top: 10px !important;\\n      margin-bottom: 50px;\\n    }\\n  }\\n\\n  .dropdown-menu[_ngcontent-%COMP%] {\\n    padding: 0.25rem 0;\\n  }\\n\\n  .dropdown-item[_ngcontent-%COMP%] {\\n    padding: 0.5rem 1rem;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    color: #212529;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover, .table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus {\\n    text-decoration: none;\\n  }\\n\\n  table.dataTable[_ngcontent-%COMP%] {\\n    margin-top: 12px !important;\\n  }\\n\\n  .icon[_ngcontent-%COMP%]    > .bx[_ngcontent-%COMP%] {\\n    display: block;\\n    min-width: 1.5em;\\n    min-height: 1.5em;\\n    text-align: center;\\n    font-size: 1.0625rem;\\n  }\\n\\n  .click-table-edit[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n  }\\n\\n  .mat-step-custom-click[_ngcontent-%COMP%] {\\n    top: 0;\\n    left: 0;\\n    width: 130px;\\n    height: 72px;\\n    position: absolute;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .example-card[_ngcontent-%COMP%] {\\n    box-sizing: border-box;\\n    max-width: 30%;\\n    margin: 8px;\\n  }\\n\\n  .img[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n  }\\n\\n  .example-full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-top: 10px;\\n  }\\n\\n  .btn-m[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n  }\\n\\n  .row-img[_ngcontent-%COMP%] {\\n    display: flex !important;\\n    flex-direction: row !important;\\n    flex-wrap: wrap !important;\\n    width: 100% !important;\\n  }\\n\\n  .column-img[_ngcontent-%COMP%] {\\n    display: flex !important;\\n    flex-direction: column !important;\\n    flex-basis: 100% !important;\\n    flex: 1 !important;\\n  }\\n\\n  .my-grid-tile[_ngcontent-%COMP%] {\\n    margin: 10px !important;\\n  }\\n\\n  .firma[_ngcontent-%COMP%] {\\n    border: 2px dotted #CCCCCC;\\n    border-radius: 5px;\\n    cursor: crosshair;\\n  }\\n\\n  #multiplicar[_ngcontent-%COMP%]{\\n    width: 70px;\\n    margin-right: 10px;\\n  }\"]\n  });\n  return LiquidosPenetrantesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}