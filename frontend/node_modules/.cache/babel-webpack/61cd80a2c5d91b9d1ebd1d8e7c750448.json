{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/report-designer/report-designer.service\";\nimport * as i2 from \"../../service/generate-pdf/generate-pdf.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-print\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/grid-list\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/core\";\nconst _c0 = [\"contenido\"];\n\nfunction GenratePdfComponent_div_4_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.interpretarExpresion(element_r5.texto), \" \");\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_2_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"IMG\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_2_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 9);\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"width\", element_r5.ancho - 3, \"px\")(\"height\", element_r5.largo - 3, \"px\");\n    i0.ɵɵproperty(\"src\", ctx_r12.url + \"/img-uploads/\" + element_r5.imagen_url, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, GenratePdfComponent_div_4_div_1_div_2_p_1_Template, 2, 0, \"p\", 7);\n    i0.ɵɵtemplate(2, GenratePdfComponent_div_4_div_1_div_2_img_2_Template, 1, 5, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.imagen_url === \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.imagen_url !== \"\");\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_3_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r17 = ctx.$implicit;\n    const element_r5 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵstyleProp(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", field_r17.label, \"\");\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_3_ng_container_6_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r21 = ctx.$implicit;\n    const item_r19 = i0.ɵɵnextContext().$implicit;\n    const element_r5 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_body)(\"color\", element_r5.color_body)(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r19[field_r21.key]);\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_3_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtemplate(2, GenratePdfComponent_div_4_div_1_div_3_ng_container_6_td_2_Template, 2, 13, \"td\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", element_r5.head);\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"table\", 10);\n    i0.ɵɵelementStart(2, \"thead\");\n    i0.ɵɵelementStart(3, \"tr\");\n    i0.ɵɵtemplate(4, GenratePdfComponent_div_4_div_1_div_3_th_4_Template, 2, 9, \"th\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵtemplate(6, GenratePdfComponent_div_4_div_1_div_3_ng_container_6_Template, 3, 1, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_head)(\"color\", element_r5.color_head);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", element_r5.head);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.onGetDataTableFilter(element_r5.seccion_id));\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_4_mat_grid_tile_2_span_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const field_r30 = i0.ɵɵnextContext().$implicit;\n    const item_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", field_r30.label, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r27.data[field_r30.key], \" \");\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_4_mat_grid_tile_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtemplate(1, GenratePdfComponent_div_4_div_1_div_4_mat_grid_tile_2_span_6_ng_container_1_Template, 4, 2, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r30 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r30.type !== \"file\");\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_4_mat_grid_tile_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 18);\n    i0.ɵɵelementStart(1, \"div\", 19);\n    i0.ɵɵelement(2, \"img\", 20);\n    i0.ɵɵelementStart(3, \"div\", 19);\n    i0.ɵɵelementStart(4, \"h6\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, GenratePdfComponent_div_4_div_1_div_4_mat_grid_tile_2_span_6_Template, 2, 1, \"span\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r27 = ctx.$implicit;\n    const i_r28 = ctx.index;\n    const element_r5 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"background-color\", element_r5.relleno_foto)(\"color\", element_r5.color_foto)(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", element_r5.tamano_imagen_ancho, \"px\")(\"height\", element_r5.tamano_imagen_largo, \"px\");\n    i0.ɵɵproperty(\"src\", ctx_r26.url + \"/img-uploads/\" + item_r27.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Registro Fotogr\\u00E1fico N\\u00B0 \", i_r28 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", element_r5.data);\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-grid-list\", 16);\n    i0.ɵɵtemplate(2, GenratePdfComponent_div_4_div_1_div_4_mat_grid_tile_2_Template, 7, 19, \"mat-grid-tile\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cols\", element_r5.cantidad_columna)(\"rowHeight\", element_r5.altura_fila);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.onGetDataImagenFilter(element_r5.seccion_id));\n  }\n}\n\nfunction GenratePdfComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, GenratePdfComponent_div_4_div_1_div_1_Template, 2, 1, \"div\", 7);\n    i0.ɵɵtemplate(2, GenratePdfComponent_div_4_div_1_div_2_Template, 3, 2, \"div\", 7);\n    i0.ɵɵtemplate(3, GenratePdfComponent_div_4_div_1_div_3_Template, 7, 6, \"div\", 7);\n    i0.ɵɵtemplate(4, GenratePdfComponent_div_4_div_1_div_4_Template, 3, 3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"top\", element_r5.y, \"px\")(\"left\", element_r5.x, \"px\")(\"width\", element_r5.ancho, \"px\")(\"height\", element_r5.largo, \"px\")(\"font-size\", element_r5.tamano_texto, \"px\")(\"font-weight\", element_r5.negrita ? \"bold\" : \"normal\")(\"border-top\", element_r5.border_top ? \"1px solid #000\" : \"\")(\"border-bottom\", element_r5.border_bottom ? \"1px solid #000\" : \"\")(\"border-right\", element_r5.border_right ? \"1px solid #000\" : \"\")(\"border-left\", element_r5.border_left ? \"1px solid #000\" : \"\")(\"text-align\", element_r5.alineacion)(\"background-color\", element_r5.relleno)(\"color\", element_r5.color_letra)(\"font-family\", element_r5.fuente);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.tipo === \"texto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.tipo === \"imagen\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.tipo === \"tabla\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r5.tipo === \"registroFotografico\");\n  }\n}\n\nfunction GenratePdfComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, GenratePdfComponent_div_4_div_1_Template, 5, 32, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"width\", item_r2.tamano.width, \"px\")(\"height\", item_r2.tamano.height, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r2.elements);\n  }\n}\n\nexport let GenratePdfComponent = /*#__PURE__*/(() => {\n  class GenratePdfComponent {\n    constructor(_reportDesignerService, _generatePdfService, _activatedRoute) {\n      this._reportDesignerService = _reportDesignerService;\n      this._generatePdfService = _generatePdfService;\n      this._activatedRoute = _activatedRoute;\n      this.dataTable = [];\n      this.dataRegistro = [];\n      this.pages = [];\n      this.url = environment.url;\n\n      this._activatedRoute.params.subscribe(params => {\n        this.orden_id = params['orden_id'];\n        this.informe_orden_id = params['informe_orden_id'];\n        this.informe = params['informe_id'];\n      });\n    }\n\n    ngOnInit() {\n      this.onGetDataTable();\n      this.OnGetDataRegistro();\n      this.onGetInforme();\n    }\n\n    onGetInforme() {\n      this._generatePdfService.getDataInforme(this.orden_id, this.informe_orden_id, this.informe).subscribe(res => {\n        this.encabezado = res.body.encabezado;\n        this.contenido = res.body.contenido.data;\n        console.log(this.contenido);\n        this.onGetPages();\n      }, error => {\n        var errorMessage = error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status == 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message\n            });\n          } else if (error.status == 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n            });\n          }\n        }\n      });\n    }\n\n    onGetPages() {\n      this._reportDesignerService.getPages(this.informe).subscribe(res => {\n        this.pages = res.body;\n      }, error => {\n        var errorMessage = error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status == 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message\n            });\n          } else if (error.status == 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n            });\n          }\n        }\n      });\n    }\n\n    interpretarExpresion(texto) {\n      const expresionRegex = /{{(.*?)}}/g;\n      const coincidencias = texto.match(expresionRegex);\n\n      if (coincidencias) {\n        coincidencias.forEach(coincidencia => {\n          const propiedad = coincidencia.replace(/[{}]/g, '').trim();\n          const valor = this.obtenerValorPropiedad(propiedad);\n          texto = texto.replace(coincidencia, valor);\n        });\n      }\n\n      return texto;\n    }\n\n    obtenerValorPropiedad(propiedad) {\n      const propiedades = propiedad.split('.');\n\n      if (propiedades.length === 2) {\n        // Verifica si la propiedad está en 'encabezado'\n        if (propiedades[0] === 'encabezado' && this.encabezado) {\n          return this.encabezado[propiedades[1]] || '';\n        } // Verifica si la propiedad está en 'contenido'\n        else if (propiedades[0] === 'contenido' && this.contenido) {\n          return this.contenido[propiedades[1]] || '';\n        }\n      }\n\n      return '';\n    }\n\n    onGetDataTable() {\n      this._generatePdfService.getDataInformeTable(this.orden_id, this.informe_orden_id).subscribe(res => {\n        this.dataTable = Array.isArray(res.body) ? res.body : [];\n      }, error => {\n        var errorMessage = error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status == 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message\n            });\n          } else if (error.status == 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n            });\n          }\n        }\n      });\n    }\n\n    onGetDataTableFilter(id) {\n      if (!Array.isArray(this.dataTable)) {\n        return [];\n      }\n\n      const objetosFiltrados = this.dataTable.filter(item => item.seccion_id === id); // Mapeamos los objetos filtrados para devolver solo el campo \"data\" con \"_id\" anexado\n\n      const objetosFiltradosConId = objetosFiltrados.map(item => {\n        return Object.assign({\n          _id: item._id\n        }, item.data);\n      });\n      return objetosFiltradosConId;\n    }\n\n    OnGetDataRegistro() {\n      this._generatePdfService.getDataInformeRegistro(this.orden_id, this.informe_orden_id).subscribe(res => {\n        this.dataRegistro = Array.isArray(res.body) ? res.body : [];\n      }, error => {\n        var errorMessage = error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status == 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message\n            });\n          } else if (error.status == 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n            });\n          }\n        }\n      });\n    }\n\n    onGetDataImagenFilter(id) {\n      if (!Array.isArray(this.dataRegistro)) {\n        return [];\n      }\n\n      const objetosFiltrados = this.dataRegistro.filter(item => item.seccion_id === id); // Mapeamos los objetos filtrados para devolver solo el campo \"data\" con \"_id\" anexado\n\n      const objetosFiltradosConId = objetosFiltrados.map(item => {\n        return {\n          _id: item._id,\n          image: item.image,\n          data: item.data\n        };\n      });\n      return objetosFiltradosConId;\n    }\n\n  }\n\n  GenratePdfComponent.ɵfac = function GenratePdfComponent_Factory(t) {\n    return new (t || GenratePdfComponent)(i0.ɵɵdirectiveInject(i1.ReportDesignerService), i0.ɵɵdirectiveInject(i2.GeneratePdfService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  GenratePdfComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GenratePdfComponent,\n    selectors: [[\"app-genrate-pdf\"]],\n    viewQuery: function GenratePdfComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contenidoPdf = _t.first);\n      }\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[\"printSectionId\", \"contenido\", \"ngxPrint\", \"\", 1, \"btn\", \"btn-print\", 3, \"useExistingCss\"], [\"id\", \"contenido\", 1, \"report\", 2, \"width\", \"864px\"], [\"contenido\", \"\"], [\"class\", \"page\", 3, \"width\", \"height\", 4, \"ngFor\", \"ngForOf\"], [1, \"page\"], [\"class\", \"report-element\", 3, \"top\", \"left\", \"width\", \"height\", \"font-size\", \"font-weight\", \"border-top\", \"border-bottom\", \"border-right\", \"border-left\", \"text-align\", \"background-color\", \"color\", \"font-family\", 4, \"ngFor\", \"ngForOf\"], [1, \"report-element\"], [4, \"ngIf\"], [3, \"src\", \"width\", \"height\", 4, \"ngIf\"], [3, \"src\"], [1, \"table\"], [\"scope\", \"col\", 3, \"border-top\", \"border-bottom\", \"border-right\", \"border-left\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\"], [\"style\", \"text-align: center;\", 3, \"background-color\", \"color\", \"border-top\", \"border-bottom\", \"border-right\", \"border-left\", 4, \"ngFor\", \"ngForOf\"], [2, \"text-align\", \"center\"], [3, \"cols\", \"rowHeight\"], [\"style\", \"display: grid !important;\", 3, \"background-color\", \"color\", \"border-top\", \"border-bottom\", \"border-right\", \"border-left\", 4, \"ngFor\", \"ngForOf\"], [2, \"display\", \"grid !important\"], [2, \"width\", \"100%\"], [\"mat-card-image\", \"\", 1, \"img\", 3, \"src\"], [\"mat-line\", \"\"], [\"mat-line\", \"\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function GenratePdfComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵtext(1, \"Guarda documento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1, 2);\n        i0.ɵɵtemplate(4, GenratePdfComponent_div_4_Template, 2, 5, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"useExistingCss\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      }\n    },\n    directives: [i4.NgxPrintDirective, i5.NgForOf, i5.NgIf, i6.MatGridList, i6.MatGridTile, i7.MatCardImage, i8.MatLine],\n    styles: [\".report[_ngcontent-%COMP%] {\\n  margin: 0;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n.btn-print[_ngcontent-%COMP%]{\\n  background-color: #f0f1ff;\\n  color: #716fb5;\\n  margin-bottom: 10px;\\n}\\n.page[_ngcontent-%COMP%] {\\n  margin-bottom: 30px;\\n  width: 791px;\\n  height: 612px;\\n  background-color: white;\\n  position: relative;\\n}\\n.report-element[_ngcontent-%COMP%] {\\n  z-index: 10;\\n  position: absolute !important;\\n  vertical-align: top;\\n}\"]\n  });\n  return GenratePdfComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}