{"ast":null,"code":"import 'rxjs/add/operator/map';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ImplementosService = /*#__PURE__*/(() => {\n  class ImplementosService {\n    constructor(_http) {\n      this._http = _http;\n      this.url = environment.url;\n    }\n\n    getImplementos() {\n      return this._http.get(this.url + '/api/v1/getImplementos').map(res => res);\n    }\n\n    addImplementos(data) {\n      return this._http.post(this.url + '/api/v1/SaveImplementos', data).map(res => res);\n    }\n\n    getSeriales(id) {\n      return this._http.get(this.url + `/api/v1/getSeriales/${id}`).map(res => res);\n    }\n\n    deleteImplemento(id) {\n      return this._http.delete(this.url + `/api/v1/deleteImplemento/${id}`).map(res => res);\n    }\n\n    deleteSerial(id) {\n      return this._http.delete(this.url + `/api/v1/deleteSerial/${id}`).map(res => res);\n    }\n\n    addSerial(data) {\n      return this._http.post(this.url + '/api/v1/addSerial', data).map(res => res);\n    }\n\n    getImplemento(id) {\n      return this._http.get(this.url + `/api/v1/getImplemento/${id}`).map(res => res);\n    }\n\n    updateImplemento(data) {\n      return this._http.put(this.url + `/api/v1/updateImplemento`, data).map(res => res);\n    }\n\n    getImplementoSelect() {\n      return this._http.get(this.url + `/api/v1/getImplementosSelect`).map(res => res);\n    }\n\n  }\n\n  ImplementosService.ɵfac = function ImplementosService_Factory(t) {\n    return new (t || ImplementosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ImplementosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImplementosService,\n    factory: ImplementosService.ɵfac,\n    providedIn: 'root'\n  });\n  return ImplementosService;\n})();","map":null,"metadata":{},"sourceType":"module"}