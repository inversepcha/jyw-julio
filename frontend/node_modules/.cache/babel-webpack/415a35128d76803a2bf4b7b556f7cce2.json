{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let InjectSessionInterceptor = /*#__PURE__*/(() => {\n  class InjectSessionInterceptor {\n    constructor(_router) {\n      this._router = _router;\n    }\n\n    intercept(request, next) {\n      try {\n        let newRequest = request;\n        const token = localStorage.getItem('token');\n\n        if (token != \"undefined\") {\n          newRequest = request.clone({\n            setHeaders: {\n              Authorization: `${token}`\n            }\n          });\n          return next.handle(newRequest).map(event => {\n            if (event instanceof HttpErrorResponse) {\n              if (event['status'] === 403) {\n                localStorage.removeItem('token');\n                localStorage.clear();\n\n                this._router.navigate(['/']);\n              }\n            }\n\n            return event;\n          });\n        } else {\n          localStorage.removeItem('token');\n          localStorage.clear();\n\n          this._router.navigate(['/']);\n\n          return next.handle(request);\n        } // let newRequest = request\n        // newRequest = request.clone(\n        //   {\n        //     setHeaders: {\n        //       Authorization: `${token}`,\n        //       'Content-Type': 'application/json',\n        //     }\n        //   }\n        // )\n\n      } catch (e) {\n        console.log('error', e);\n        return next.handle(request);\n      }\n    }\n\n  }\n\n  InjectSessionInterceptor.ɵfac = function InjectSessionInterceptor_Factory(t) {\n    return new (t || InjectSessionInterceptor)(i0.ɵɵinject(i1.Router));\n  };\n\n  InjectSessionInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InjectSessionInterceptor,\n    factory: InjectSessionInterceptor.ɵfac\n  });\n  return InjectSessionInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}