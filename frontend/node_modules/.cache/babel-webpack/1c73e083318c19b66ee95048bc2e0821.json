{"ast":null,"code":"import { Ajax, extend, getValue, isNullOrUndefined, merge, setValue } from '@syncfusion/ej2-base';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\n\nvar Query =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Constructor for Query class.\n   * @param  {string|string[]} from?\n   * @hidden\n   */\n  function Query(from) {\n    /** @hidden */\n    this.subQuery = null;\n    /** @hidden */\n\n    this.isChild = false;\n    /** @hidden */\n\n    this.distincts = [];\n    this.queries = [];\n    this.key = '';\n    this.fKey = '';\n\n    if (typeof from === 'string') {\n      this.fromTable = from;\n    } else if (from && from instanceof Array) {\n      this.lookups = from;\n    }\n\n    this.expands = [];\n    this.sortedColumns = [];\n    this.groupedColumns = [];\n    this.subQuery = null;\n    this.isChild = false;\n    this.params = [];\n    this.lazyLoad = [];\n    return this;\n  }\n  /**\n   * Sets the primary key.\n   * @param  {string} field - Defines the column field.\n   */\n\n\n  Query.prototype.setKey = function (field) {\n    this.key = field;\n    return this;\n  };\n  /**\n   * Sets default DataManager to execute query.\n   * @param  {DataManager} dataManager - Defines the DataManager.\n   */\n\n\n  Query.prototype.using = function (dataManager) {\n    this.dataManager = dataManager;\n    return this;\n  };\n  /**\n   * Executes query with the given DataManager.\n   * @param  {DataManager} dataManager - Defines the DataManager.\n   * @param  {Function} done - Defines the success callback.\n   * @param  {Function} fail - Defines the failure callback.\n   * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n   *\n   * <pre>\n   * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n   * let query: Query = new Query();\n   * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n   * let promise: Promise< Object > = query.execute(dataManager);\n   * promise.then((e: { result: Object }) => { });\n   * </pre>\n   */\n\n\n  Query.prototype.execute = function (dataManager, done, fail, always) {\n    dataManager = dataManager || this.dataManager;\n\n    if (dataManager) {\n      return dataManager.executeQuery(this, done, fail, always);\n    }\n\n    return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n  };\n  /**\n   * Executes query with the local datasource.\n   * @param  {DataManager} dataManager - Defines the DataManager.\n   */\n\n\n  Query.prototype.executeLocal = function (dataManager) {\n    dataManager = dataManager || this.dataManager;\n\n    if (dataManager) {\n      return dataManager.executeLocal(this);\n    }\n\n    return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n  };\n  /**\n   * Creates deep copy of the Query object.\n   */\n\n\n  Query.prototype.clone = function () {\n    var cloned = new Query();\n    cloned.queries = this.queries.slice(0);\n    cloned.key = this.key;\n    cloned.isChild = this.isChild;\n    cloned.dataManager = this.dataManager;\n    cloned.fromTable = this.fromTable;\n    cloned.params = this.params.slice(0);\n    cloned.expands = this.expands.slice(0);\n    cloned.sortedColumns = this.sortedColumns.slice(0);\n    cloned.groupedColumns = this.groupedColumns.slice(0);\n    cloned.subQuerySelector = this.subQuerySelector;\n    cloned.subQuery = this.subQuery;\n    cloned.fKey = this.fKey;\n    cloned.isCountRequired = this.isCountRequired;\n    cloned.distincts = this.distincts.slice(0);\n    cloned.lazyLoad = this.lazyLoad.slice(0);\n    return cloned;\n  };\n  /**\n   * Specifies the name of table to retrieve data in query execution.\n   * @param  {string} tableName - Defines the table name.\n   */\n\n\n  Query.prototype.from = function (tableName) {\n    this.fromTable = tableName;\n    return this;\n  };\n  /**\n   * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n   * @param  {string} key - Defines the key of additional parameter.\n   * @param  {Function|string} value - Defines the value for the key.\n   */\n\n\n  Query.prototype.addParams = function (key, value) {\n    if (typeof value === 'function') {\n      this.params.push({\n        key: key,\n        fn: value\n      });\n    } else {\n      this.params.push({\n        key: key,\n        value: value\n      });\n    }\n\n    return this;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Query.prototype.distinct = function (fields) {\n    if (typeof fields === 'string') {\n      this.distincts = [].slice.call([fields], 0);\n    } else {\n      this.distincts = fields.slice(0);\n    }\n\n    return this;\n  };\n  /**\n   * Expands the related table.\n   * @param  {string|Object[]} tables\n   */\n\n\n  Query.prototype.expand = function (tables) {\n    if (typeof tables === 'string') {\n      this.expands = [].slice.call([tables], 0);\n    } else {\n      this.expands = tables.slice(0);\n    }\n\n    return this;\n  };\n  /**\n   * Filter data with given filter criteria.\n   * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n   * @param  {string} operator - Defines the operator how to filter data.\n   * @param  {string|number|boolean} value - Defines the values to match with data.\n   * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n   * filter data with case insensitive.\n   */\n\n\n  Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent, matchCase) {\n    operator = operator ? operator.toLowerCase() : null;\n    var predicate = null;\n\n    if (typeof fieldName === 'string') {\n      predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent, matchCase);\n    } else if (fieldName instanceof Predicate) {\n      predicate = fieldName;\n    }\n\n    this.queries.push({\n      fn: 'onWhere',\n      e: predicate\n    });\n    return this;\n  };\n  /**\n   * Search data with given search criteria.\n   * @param  {string|number|boolean} searchKey - Defines the search key.\n   * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n   * @param  {string} operator - Defines the operator how to search data.\n   * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n   * filter data with case insensitive.\n   */\n\n\n  Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n    if (typeof fieldNames === 'string') {\n      fieldNames = [fieldNames];\n    }\n\n    if (!operator || operator === 'none') {\n      operator = 'contains';\n    }\n\n    var comparer = DataUtil.fnOperators[operator];\n    this.queries.push({\n      fn: 'onSearch',\n      e: {\n        fieldNames: fieldNames,\n        operator: operator,\n        searchKey: searchKey,\n        ignoreCase: ignoreCase,\n        ignoreAccent: ignoreAccent,\n        comparer: comparer\n      }\n    });\n    return this;\n  };\n  /**\n   * Sort the data with given sort criteria.\n   * By default, sort direction is ascending.\n   * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n   * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n   */\n\n\n  Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n    return this.sortByForeignKey(fieldName, comparer, isFromGroup);\n  };\n  /**\n   * Sort the data with given sort criteria.\n   * By default, sort direction is ascending.\n   * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n   * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n   * @param  {string} direction - Defines the sort direction .\n   */\n\n\n  Query.prototype.sortByForeignKey = function (fieldName, comparer, isFromGroup, direction) {\n    var order = !isNullOrUndefined(direction) ? direction : 'ascending';\n    var sorts;\n    var temp;\n\n    if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n      fieldName = fieldName.replace(/ desc$/i, '');\n      comparer = 'descending';\n    }\n\n    if (!comparer || typeof comparer === 'string') {\n      order = comparer ? comparer.toLowerCase() : 'ascending';\n      comparer = DataUtil.fnSort(comparer);\n    }\n\n    if (isFromGroup) {\n      sorts = Query.filterQueries(this.queries, 'onSortBy');\n\n      for (var i = 0; i < sorts.length; i++) {\n        temp = sorts[i].e.fieldName;\n\n        if (typeof temp === 'string') {\n          if (temp === fieldName) {\n            return this;\n          }\n        } else if (temp instanceof Array) {\n          for (var j = 0; j < temp.length; j++) {\n            if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n              return this;\n            }\n          }\n        }\n      }\n    }\n\n    this.queries.push({\n      fn: 'onSortBy',\n      e: {\n        fieldName: fieldName,\n        comparer: comparer,\n        direction: order\n      }\n    });\n    return this;\n  };\n  /**\n   * Sorts data in descending order.\n   * @param  {string} fieldName - Defines the column field.\n   */\n\n\n  Query.prototype.sortByDesc = function (fieldName) {\n    return this.sortBy(fieldName, 'descending');\n  };\n  /**\n   * Groups data with the given field name.\n   * @param  {string} fieldName - Defines the column field.\n   */\n\n\n  Query.prototype.group = function (fieldName, fn, format) {\n    this.sortBy(fieldName, null, true);\n    this.queries.push({\n      fn: 'onGroup',\n      e: {\n        fieldName: fieldName,\n        comparer: fn ? fn : null,\n        format: format ? format : null\n      }\n    });\n    return this;\n  };\n  /**\n   * Gets data based on the given page index and size.\n   * @param  {number} pageIndex - Defines the current page index.\n   * @param  {number} pageSize - Defines the no of records per page.\n   */\n\n\n  Query.prototype.page = function (pageIndex, pageSize) {\n    this.queries.push({\n      fn: 'onPage',\n      e: {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      }\n    });\n    return this;\n  };\n  /**\n   * Gets data based on the given start and end index.\n   * @param  {number} start - Defines the start index of the datasource.\n   * @param  {number} end - Defines the end index of the datasource.\n   */\n\n\n  Query.prototype.range = function (start, end) {\n    this.queries.push({\n      fn: 'onRange',\n      e: {\n        start: start,\n        end: end\n      }\n    });\n    return this;\n  };\n  /**\n   * Gets data from the top of the data source based on given number of records count.\n   * @param  {number} nos - Defines the no of records to retrieve from datasource.\n   */\n\n\n  Query.prototype.take = function (nos) {\n    this.queries.push({\n      fn: 'onTake',\n      e: {\n        nos: nos\n      }\n    });\n    return this;\n  };\n  /**\n   * Skips data with given number of records count from the top of the data source.\n   * @param  {number} nos - Defines the no of records skip in the datasource.\n   */\n\n\n  Query.prototype.skip = function (nos) {\n    this.queries.push({\n      fn: 'onSkip',\n      e: {\n        nos: nos\n      }\n    });\n    return this;\n  };\n  /**\n   * Selects specified columns from the data source.\n   * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n   */\n\n\n  Query.prototype.select = function (fieldNames) {\n    if (typeof fieldNames === 'string') {\n      fieldNames = [].slice.call([fieldNames], 0);\n    }\n\n    this.queries.push({\n      fn: 'onSelect',\n      e: {\n        fieldNames: fieldNames\n      }\n    });\n    return this;\n  };\n  /**\n   * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n   * @param  {Query} query - Defines the query to relate two tables.\n   * @param  {Function} selectorFn - Defines the custom function to select records.\n   */\n\n\n  Query.prototype.hierarchy = function (query, selectorFn) {\n    this.subQuerySelector = selectorFn;\n    this.subQuery = query;\n    return this;\n  };\n  /**\n   * Sets the foreign key which is used to get data from the related table.\n   * @param  {string} key - Defines the foreign key.\n   */\n\n\n  Query.prototype.foreignKey = function (key) {\n    this.fKey = key;\n    return this;\n  };\n  /**\n   * It is used to get total number of records in the DataManager execution result.\n   */\n\n\n  Query.prototype.requiresCount = function () {\n    this.isCountRequired = true;\n    return this;\n  }; //type - sum, avg, min, max\n\n  /**\n   * Aggregate the data with given type and field name.\n   * @param  {string} type - Defines the aggregate type.\n   * @param  {string} field - Defines the column field to aggregate.\n   */\n\n\n  Query.prototype.aggregate = function (type, field) {\n    this.queries.push({\n      fn: 'onAggregates',\n      e: {\n        field: field,\n        type: type\n      }\n    });\n    return this;\n  };\n  /**\n   * Pass array of filterColumn query for performing filter operation.\n   * @param  {QueryOptions[]} queries\n   * @param  {string} name\n   * @hidden\n   */\n\n\n  Query.filterQueries = function (queries, name) {\n    return queries.filter(function (q) {\n      return q.fn === name;\n    });\n  };\n  /**\n   * To get the list of queries which is already filtered in current data source.\n   * @param  {Object[]} queries\n   * @param  {string[]} singles\n   * @hidden\n   */\n\n\n  Query.filterQueryLists = function (queries, singles) {\n    var filtered = queries.filter(function (q) {\n      return singles.indexOf(q.fn) !== -1;\n    });\n    var res = {};\n\n    for (var i = 0; i < filtered.length; i++) {\n      if (!res[filtered[i].fn]) {\n        res[filtered[i].fn] = filtered[i].e;\n      }\n    }\n\n    return res;\n  };\n\n  return Query;\n}();\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\n\n\nvar Predicate =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Constructor for Predicate class.\n   * @param  {string|Predicate} field\n   * @param  {string} operator\n   * @param  {string|number|boolean|Predicate|Predicate[]} value\n   * @param  {boolean=false} ignoreCase\n   * @param  {boolean} matchCase\n   * @hidden\n   */\n  function Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase) {\n    if (ignoreCase === void 0) {\n      ignoreCase = false;\n    }\n    /** @hidden */\n\n\n    this.ignoreAccent = false;\n    /** @hidden */\n\n    this.isComplex = false;\n\n    if (typeof field === 'string') {\n      this.field = field;\n      this.operator = operator.toLowerCase();\n      this.value = value;\n      this.matchCase = matchCase;\n      this.ignoreCase = ignoreCase;\n      this.ignoreAccent = ignoreAccent;\n      this.isComplex = false;\n      this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n    } else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n      this.isComplex = true;\n      this.condition = operator.toLowerCase();\n      this.predicates = [field];\n      this.matchCase = field.matchCase;\n      this.ignoreCase = field.ignoreCase;\n      this.ignoreAccent = field.ignoreAccent;\n\n      if (value instanceof Array) {\n        [].push.apply(this.predicates, value);\n      } else {\n        this.predicates.push(value);\n      }\n    }\n\n    return this;\n  }\n  /**\n   * Adds n-number of new predicates on existing predicate with “and” condition.\n   * @param  {Object[]} args - Defines the collection of predicates.\n   */\n\n\n  Predicate.and = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n  };\n  /**\n   * Adds new predicate on existing predicate with “and” condition.\n   * @param  {string} field - Defines the column field.\n   * @param  {string} operator - Defines the operator how to filter data.\n   * @param  {string} value - Defines the values to match with data.\n   * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n   * filter data with case insensitive.\n   */\n\n\n  Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n    return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n  };\n  /**\n   * Adds n-number of new predicates on existing predicate with “or” condition.\n   * @param  {Object[]} args - Defines the collection of predicates.\n   */\n\n\n  Predicate.or = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n  };\n  /**\n   * Adds new predicate on existing predicate with “or” condition.\n   * @param  {string} field - Defines the column field.\n   * @param  {string} operator - Defines the operator how to filter data.\n   * @param  {string} value - Defines the values to match with data.\n   * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n   * filter data with case insensitive.\n   */\n\n\n  Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n    return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n  };\n  /**\n   * Converts plain JavaScript object to Predicate object.\n   * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n   */\n\n\n  Predicate.fromJson = function (json) {\n    if (json instanceof Array) {\n      var res = [];\n\n      for (var i = 0, len = json.length; i < len; i++) {\n        res.push(this.fromJSONData(json[i]));\n      }\n\n      return res;\n    }\n\n    var pred = json;\n    return this.fromJSONData(pred);\n  };\n  /**\n   * Validate the record based on the predicates.\n   * @param  {Object} record - Defines the datasource record.\n   */\n\n\n  Predicate.prototype.validate = function (record) {\n    var predicate = this.predicates ? this.predicates : [];\n    var isAnd;\n    var ret;\n\n    if (!this.isComplex && this.comparer) {\n      return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n    }\n\n    isAnd = this.condition === 'and';\n\n    for (var i = 0; i < predicate.length; i++) {\n      ret = predicate[i].validate(record);\n\n      if (isAnd) {\n        if (!ret) {\n          return false;\n        }\n      } else {\n        if (ret) {\n          return true;\n        }\n      }\n    }\n\n    return isAnd;\n  };\n  /**\n   * Converts predicates to plain JavaScript.\n   * This method is uses Json stringify when serializing Predicate object.\n   */\n\n\n  Predicate.prototype.toJson = function () {\n    var predicates;\n    var p;\n\n    if (this.isComplex) {\n      predicates = [];\n      p = this.predicates;\n\n      for (var i = 0; i < p.length; i++) {\n        predicates.push(p[i].toJson());\n      }\n    }\n\n    return {\n      isComplex: this.isComplex,\n      field: this.field,\n      operator: this.operator,\n      value: this.value,\n      ignoreCase: this.ignoreCase,\n      ignoreAccent: this.ignoreAccent,\n      condition: this.condition,\n      predicates: predicates,\n      matchCase: this.matchCase\n    };\n  };\n\n  Predicate.combinePredicates = function (predicates, operator) {\n    if (predicates.length === 1) {\n      if (!(predicates[0] instanceof Array)) {\n        return predicates[0];\n      }\n\n      predicates = predicates[0];\n    }\n\n    return new Predicate(predicates[0], operator, predicates.slice(1));\n  };\n\n  Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n    if (field instanceof Predicate) {\n      return Predicate[condition](pred, field);\n    }\n\n    if (typeof field === 'string') {\n      return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n    }\n\n    return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n  };\n\n  Predicate.fromJSONData = function (json) {\n    var preds = json.predicates || [];\n    var len = preds.length;\n    var predicates = [];\n    var result;\n\n    for (var i = 0; i < len; i++) {\n      predicates.push(this.fromJSONData(preds[i]));\n    }\n\n    if (!json.isComplex) {\n      result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n    } else {\n      result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n    }\n\n    return result;\n  };\n\n  return Predicate;\n}();\n\nvar consts = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\n * Data manager common utility methods.\n * @hidden\n */\n\nvar DataUtil =\n/** @__PURE__ @class */\nfunction () {\n  function DataUtil() {}\n  /**\n   * Returns the value by invoking the provided parameter function.\n   * If the paramater is not of type function then it will be returned as it is.\n   * @param  {Function|string|string[]|number} value\n   * @param  {Object} inst?\n   * @hidden\n   */\n\n\n  DataUtil.getValue = function (value, inst) {\n    if (typeof value === 'function') {\n      return value.call(inst || {});\n    }\n\n    return value;\n  };\n  /**\n   * Returns true if the input string ends with given string.\n   * @param  {string} input\n   * @param  {string} substr\n   */\n\n\n  DataUtil.endsWith = function (input, substr) {\n    return input.slice && input.slice(-substr.length) === substr;\n  };\n  /**\n   * Returns true if the input string starts with given string.\n   * @param  {string} str\n   * @param  {string} startstr\n   */\n\n\n  DataUtil.startsWith = function (input, start) {\n    return input.slice(0, start.length) === start;\n  };\n  /**\n   * To return the sorting function based on the string.\n   * @param  {string} order\n   * @hidden\n   */\n\n\n  DataUtil.fnSort = function (order) {\n    order = order ? DataUtil.toLowerCase(order) : 'ascending';\n\n    if (order === 'ascending') {\n      return this.fnAscending;\n    }\n\n    return this.fnDescending;\n  };\n  /**\n   * Comparer function which is used to sort the data in ascending order.\n   * @param  {string|number} x\n   * @param  {string|number} y\n   * @returns number\n   */\n\n\n  DataUtil.fnAscending = function (x, y) {\n    if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n      return -1;\n    }\n\n    if (y === null || y === undefined) {\n      return -1;\n    }\n\n    if (typeof x === 'string') {\n      return x.localeCompare(y);\n    }\n\n    if (x === null || x === undefined) {\n      return 1;\n    }\n\n    return x - y;\n  };\n  /**\n   * Comparer function which is used to sort the data in descending order.\n   * @param  {string|number} x\n   * @param  {string|number} y\n   * @returns number\n   */\n\n\n  DataUtil.fnDescending = function (x, y) {\n    if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n      return -1;\n    }\n\n    if (y === null || y === undefined) {\n      return 1;\n    }\n\n    if (typeof x === 'string') {\n      return x.localeCompare(y) * -1;\n    }\n\n    if (x === null || x === undefined) {\n      return -1;\n    }\n\n    return y - x;\n  };\n\n  DataUtil.extractFields = function (obj, fields) {\n    var newObj = {};\n\n    for (var i = 0; i < fields.length; i++) {\n      newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n    }\n\n    return newObj;\n  };\n  /**\n   * Select objects by given fields from jsonArray.\n   * @param  {Object[]} jsonArray\n   * @param  {string[]} fields\n   */\n\n\n  DataUtil.select = function (jsonArray, fields) {\n    var newData = [];\n\n    for (var i = 0; i < jsonArray.length; i++) {\n      newData.push(this.extractFields(jsonArray[i], fields));\n    }\n\n    return newData;\n  };\n  /**\n   * Group the input data based on the field name.\n   * It also performs aggregation of the grouped records based on the aggregates paramater.\n   * @param  {Object[]} jsonArray\n   * @param  {string} field?\n   * @param  {Object[]} agg?\n   * @param  {number} level?\n   * @param  {Object[]} groupDs?\n   */\n\n\n  DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n    level = level || 1;\n    var jsonData = jsonArray;\n    var guid = 'GroupGuid';\n\n    if (jsonData.GroupGuid === consts[guid]) {\n      var _loop_1 = function (j) {\n        if (!isNullOrUndefined(groupDs)) {\n          var indx = -1;\n          var temp = groupDs.filter(function (e) {\n            return e.key === jsonData[j].key;\n          });\n          indx = groupDs.indexOf(temp[0]);\n          jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n          jsonData[j].count = groupDs[indx].count;\n        } else {\n          jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n          jsonData[j].count = jsonData[j].items.length;\n        }\n      };\n\n      var this_1 = this;\n\n      for (var j = 0; j < jsonData.length; j++) {\n        _loop_1(j);\n      }\n\n      jsonData.childLevels += 1;\n      return jsonData;\n    }\n\n    var grouped = {};\n    var groupedArray = [];\n    groupedArray.GroupGuid = consts[guid];\n    groupedArray.level = level;\n    groupedArray.childLevels = 0;\n    groupedArray.records = jsonData;\n\n    var _loop_2 = function (i) {\n      var val = this_2.getVal(jsonData, i, field);\n\n      if (!isNullOrUndefined(format)) {\n        val = format(val, field);\n      }\n\n      if (!grouped[val]) {\n        grouped[val] = {\n          key: val,\n          count: 0,\n          items: [],\n          aggregates: {},\n          field: field\n        };\n        groupedArray.push(grouped[val]);\n\n        if (!isNullOrUndefined(groupDs)) {\n          var tempObj = groupDs.filter(function (e) {\n            return e.key === grouped[val].key;\n          });\n          grouped[val].count = tempObj[0].count;\n        }\n      }\n\n      grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n\n      if (!isLazyLoad || isLazyLoad && aggregates.length) {\n        grouped[val].items.push(jsonData[i]);\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < jsonData.length; i++) {\n      _loop_2(i);\n    }\n\n    if (aggregates && aggregates.length) {\n      var _loop_3 = function (i) {\n        var res = {};\n        var fn = void 0;\n        var aggs = aggregates;\n\n        for (var j = 0; j < aggregates.length; j++) {\n          fn = DataUtil.aggregates[aggregates[j].type];\n\n          if (!isNullOrUndefined(groupDs)) {\n            var temp = groupDs.filter(function (e) {\n              return e.key === groupedArray[i].key;\n            });\n\n            if (fn) {\n              res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n            }\n          } else {\n            if (fn) {\n              res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n            }\n          }\n        }\n\n        groupedArray[i].aggregates = res;\n      };\n\n      for (var i = 0; i < groupedArray.length; i++) {\n        _loop_3(i);\n      }\n    }\n\n    if (isLazyLoad && groupedArray.length && aggregates.length) {\n      for (var i = 0; i < groupedArray.length; i++) {\n        groupedArray[i].items = [];\n      }\n    }\n\n    return jsonData.length && groupedArray || jsonData;\n  };\n  /**\n   * It is used to categorize the multiple items based on a specific field in jsonArray.\n   * The hierarchical queries are commonly required when you use foreign key binding.\n   * @param  {string} fKey\n   * @param  {string} from\n   * @param  {Object[]} source\n   * @param  {Group} lookup?\n   * @param  {string} pKey?\n   * @hidden\n   */\n\n\n  DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n    var i;\n    var grp = {};\n    var temp;\n\n    if (lookup.result) {\n      lookup = lookup.result;\n    }\n\n    if (lookup.GroupGuid) {\n      this.throwError('DataManager: Do not have support Grouping in hierarchy');\n    }\n\n    for (i = 0; i < lookup.length; i++) {\n      var fKeyData = this.getObject(fKey, lookup[i]);\n      temp = grp[fKeyData] || (grp[fKeyData] = []);\n      temp.push(lookup[i]);\n    }\n\n    for (i = 0; i < source.length; i++) {\n      var fKeyData = this.getObject(pKey || fKey, source[i]);\n      source[i][from] = grp[fKeyData];\n    }\n  };\n  /**\n   * The method used to get the field names which started with specified characters.\n   * @param  {Object} obj\n   * @param  {string[]} fields?\n   * @param  {string} prefix?\n   * @hidden\n   */\n\n\n  DataUtil.getFieldList = function (obj, fields, prefix) {\n    if (prefix === undefined) {\n      prefix = '';\n    }\n\n    if (fields === undefined || fields === null) {\n      return this.getFieldList(obj, [], prefix);\n    }\n\n    var copyObj = obj;\n    var keys = Object.keys(obj);\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var prop = keys_1[_i];\n\n      if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n        this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n      } else {\n        fields.push(prefix + prop);\n      }\n    }\n\n    return fields;\n  };\n  /**\n   * Gets the value of the property in the given object.\n   * The complex object can be accessed by providing the field names concatenated with dot(.).\n   * @param  {string} nameSpace - The name of the property to be accessed.\n   * @param  {Object} from - Defines the source object.\n   */\n\n\n  DataUtil.getObject = function (nameSpace, from) {\n    if (!nameSpace) {\n      return from;\n    }\n\n    if (!from) {\n      return undefined;\n    }\n\n    if (nameSpace.indexOf('.') === -1) {\n      return from[nameSpace];\n    }\n\n    var value = from;\n    var splits = nameSpace.split('.');\n\n    for (var i = 0; i < splits.length; i++) {\n      if (value == null) {\n        break;\n      }\n\n      value = value[splits[i]];\n    }\n\n    return value;\n  };\n  /**\n   * To set value for the nameSpace in desired object.\n   * @param {string} nameSpace - String value to the get the inner object.\n   * @param {Object} value - Value that you need to set.\n   * @param {Object} obj - Object to get the inner object value.\n   * @return { [key: string]: Object; } | Object\n   * @hidden\n   */\n\n\n  DataUtil.setValue = function (nameSpace, value, obj) {\n    var keys = nameSpace.toString().split('.');\n    var start = obj || {};\n    var fromObj = start;\n    var i;\n    var length = keys.length;\n    var key;\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n\n      if (i + 1 === length) {\n        fromObj[key] = value === undefined ? undefined : value;\n      } else if (isNullOrUndefined(fromObj[key])) {\n        fromObj[key] = {};\n      }\n\n      fromObj = fromObj[key];\n    }\n\n    return start;\n  };\n  /**\n   * Sort the given data based on the field and comparer.\n   * @param  {Object[]} ds - Defines the input data.\n   * @param  {string} field - Defines the field to be sorted.\n   * @param  {Function} comparer - Defines the comparer function used to sort the records.\n   */\n\n\n  DataUtil.sort = function (ds, field, comparer) {\n    if (ds.length <= 1) {\n      return ds;\n    }\n\n    var middle = parseInt((ds.length / 2).toString(), 10);\n    var left = ds.slice(0, middle);\n    var right = ds.slice(middle);\n    left = this.sort(left, field, comparer);\n    right = this.sort(right, field, comparer);\n    return this.merge(left, right, field, comparer);\n  };\n\n  DataUtil.ignoreDiacritics = function (value) {\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    var result = value.split('');\n    var newValue = result.map(function (temp) {\n      return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp;\n    });\n    return newValue.join('');\n  };\n\n  DataUtil.merge = function (left, right, fieldName, comparer) {\n    var result = [];\n    var current;\n\n    while (left.length > 0 || right.length > 0) {\n      if (left.length > 0 && right.length > 0) {\n        if (comparer) {\n          current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n        } else {\n          current = left[0][fieldName] < left[0][fieldName] ? left : right;\n        }\n      } else {\n        current = left.length > 0 ? left : right;\n      }\n\n      result.push(current.shift());\n    }\n\n    return result;\n  };\n\n  DataUtil.getVal = function (array, index, field) {\n    return field ? this.getObject(field, array[index]) : array[index];\n  };\n\n  DataUtil.toLowerCase = function (val) {\n    return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : val === 0 || val === false ? val.toString() : '';\n  };\n  /**\n   * To perform the filter operation with specified adaptor and returns the result.\n   * @param  {Object} adaptor\n   * @param  {string} fnName\n   * @param  {Object} param1?\n   * @param  {Object} param2?\n   * @hidden\n   */\n\n\n  DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n    if (fnName in adaptor) {\n      var res = adaptor[fnName](param1, param2);\n\n      if (!isNullOrUndefined(res)) {\n        param1 = res;\n      }\n    }\n\n    return param1;\n  };\n\n  DataUtil.getAddParams = function (adp, dm, query) {\n    var req = {};\n    DataUtil.callAdaptorFunction(adp, 'addParams', {\n      dm: dm,\n      query: query,\n      params: query.params,\n      reqParams: req\n    });\n    return req;\n  };\n  /**\n   * Checks wheather the given input is a plain object or not.\n   * @param  {Object|Object[]} obj\n   */\n\n\n  DataUtil.isPlainObject = function (obj) {\n    return !!obj && obj.constructor === Object;\n  };\n  /**\n   * Returns true when the browser cross origin request.\n   */\n\n\n  DataUtil.isCors = function () {\n    var xhr = null;\n    var request = 'XMLHttpRequest';\n\n    try {\n      xhr = new window[request]();\n    } catch (e) {// No exception handling\n    }\n\n    return !!xhr && 'withCredentials' in xhr;\n  };\n  /**\n   * Generate random GUID value which will be prefixed with the given value.\n   * @param  {string} prefix\n   */\n\n\n  DataUtil.getGuid = function (prefix) {\n    var hexs = '0123456789abcdef';\n    var rand;\n    return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n      if ('crypto' in window && 'getRandomValues' in crypto) {\n        var arr = new Uint8Array(1);\n        window.crypto.getRandomValues(arr);\n        rand = arr[0] % 16 | 0;\n      } else {\n        rand = Math.random() * 16 | 0;\n      }\n\n      return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n    });\n  };\n  /**\n   * Checks wheather the given value is null or not.\n   * @param  {string|Object} val\n   * @returns boolean\n   */\n\n\n  DataUtil.isNull = function (val) {\n    return val === undefined || val === null;\n  };\n  /**\n   * To get the required items from collection of objects.\n   * @param  {Object[]} array\n   * @param  {string} field\n   * @param  {Function} comparer\n   * @returns Object\n   * @hidden\n   */\n\n\n  DataUtil.getItemFromComparer = function (array, field, comparer) {\n    var keyVal;\n    var current;\n    var key;\n    var i = 0;\n    var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n\n    if (array.length) {\n      while (isNullOrUndefined(keyVal) && i < array.length) {\n        keyVal = DataUtil.getVal(array, i, field);\n        key = array[i++];\n      }\n    }\n\n    for (; i < array.length; i++) {\n      current = DataUtil.getVal(array, i, field);\n\n      if (isNullOrUndefined(current)) {\n        continue;\n      }\n\n      if (castRequired) {\n        keyVal = +keyVal;\n        current = +current;\n      }\n\n      if (comparer(keyVal, current) > 0) {\n        keyVal = current;\n        key = array[i];\n      }\n    }\n\n    return key;\n  };\n  /**\n   * To get distinct values of Array or Array of Objects.\n   * @param  {Object[]} json\n   * @param  {string} field\n   * @param  {boolean} requiresCompleteRecord\n   * @returns Object[]\n   * * distinct array of objects is return when requiresCompleteRecord set as true.\n   * @hidden\n   */\n\n\n  DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n    requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n    var result = [];\n    var val;\n    var tmp = {};\n    json.forEach(function (data, index) {\n      val = typeof json[index] === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n\n      if (!(val in tmp)) {\n        result.push(!requiresCompleteRecord ? val : json[index]);\n        tmp[val] = 1;\n      }\n    });\n    return result;\n  };\n  /**\n   * Process the given records based on the datamanager string.\n   * @param  {string} datamanager\n   * @param  {Object[]} records\n   */\n\n\n  DataUtil.processData = function (dm, records) {\n    var query = this.prepareQuery(dm);\n    var sampledata = new DataManager(records);\n\n    if (dm.requiresCounts) {\n      query.requiresCount();\n    }\n\n    var result = sampledata.executeLocal(query);\n    var returnValue = {\n      result: dm.requiresCounts ? result.result : result,\n      count: result.count,\n      aggregates: JSON.stringify(result.aggregates)\n    };\n    return dm.requiresCounts ? returnValue : result;\n  };\n\n  DataUtil.prepareQuery = function (dm) {\n    var _this = this;\n\n    var query = new Query();\n\n    if (dm.select) {\n      query.select(dm.select);\n    }\n\n    if (dm.where) {\n      var where = DataUtil.parse.parseJson(dm.where);\n      where.filter(function (pred) {\n        if (isNullOrUndefined(pred.condition)) {\n          query.where(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent);\n        } else {\n          var predicateList = [];\n\n          if (pred.field) {\n            predicateList.push(new Predicate(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent));\n          } else {\n            predicateList = predicateList.concat(_this.getPredicate(pred.predicates));\n          }\n\n          if (pred.condition == 'or') {\n            query.where(Predicate.or(predicateList));\n          } else if (pred.condition == 'and') {\n            query.where(Predicate.and(predicateList));\n          }\n        }\n      });\n    }\n\n    if (dm.search) {\n      var search = DataUtil.parse.parseJson(dm.search);\n      search.filter(function (e) {\n        return query.search(e.key, e.fields, e['operator'], e['ignoreCase'], e['ignoreAccent']);\n      });\n    }\n\n    if (dm.aggregates) {\n      dm.aggregates.filter(function (e) {\n        return query.aggregate(e.type, e.field);\n      });\n    }\n\n    if (dm.sorted) {\n      dm.sorted.filter(function (e) {\n        return query.sortBy(e.name, e.direction);\n      });\n    }\n\n    if (dm.skip) {\n      query.skip(dm.skip);\n    }\n\n    if (dm.take) {\n      query.take(dm.take);\n    }\n\n    if (dm.group) {\n      dm.group.filter(function (grp) {\n        return query.group(grp);\n      });\n    }\n\n    return query;\n  };\n\n  DataUtil.getPredicate = function (pred) {\n    var mainPred = [];\n\n    for (var i = 0; i < pred.length; i++) {\n      var e = pred[i];\n\n      if (e.field) {\n        mainPred.push(new Predicate(e.field, e.operator, e.value, e.ignoreCase, e.ignoreAccent));\n      } else {\n        var childPred = [];\n        var cpre = this.getPredicate(e.predicates);\n\n        for (var _i = 0, _a = Object.keys(cpre); _i < _a.length; _i++) {\n          var prop = _a[_i];\n          childPred.push(cpre[prop]);\n        }\n\n        mainPred.push(e.condition == 'or' ? Predicate.or(childPred) : Predicate.and(childPred));\n      }\n    }\n\n    return mainPred;\n  };\n  /**\n   * Specifies the value which will be used to adjust the date value to server timezone.\n   * @default null\n   */\n\n\n  DataUtil.serverTimezoneOffset = null;\n  /**\n   * Species whether are not to be parsed with serverTimezoneOffset value.\n   * @hidden\n   */\n\n  DataUtil.timeZoneHandling = true;\n  /**\n   * Throw error with the given string as message.\n   * @param  {string} er\n   */\n\n  DataUtil.throwError = function (error) {\n    try {\n      throw new Error(error);\n    } catch (e) {\n      throw e.message + '\\n' + e.stack;\n    }\n  };\n\n  DataUtil.aggregates = {\n    /**\n     * Calculate sum of the given field in the data.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    sum: function (ds, field) {\n      var result = 0;\n      var val;\n      var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n\n      for (var i = 0; i < ds.length; i++) {\n        val = DataUtil.getVal(ds, i, field);\n\n        if (!isNaN(val) && val !== null) {\n          if (castRequired) {\n            val = +val;\n          }\n\n          result += val;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Calculate average value of the given field in the data.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    average: function (ds, field) {\n      return DataUtil.aggregates.sum(ds, field) / ds.length;\n    },\n\n    /**\n     * Returns the min value of the data based on the field.\n     * @param  {Object[]} ds\n     * @param  {string|Function} field\n     */\n    min: function (ds, field) {\n      var comparer;\n\n      if (typeof field === 'function') {\n        comparer = field;\n        field = null;\n      }\n\n      return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n    },\n\n    /**\n     * Returns the max value of the data based on the field.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     * @returns number\n     */\n    max: function (ds, field) {\n      var comparer;\n\n      if (typeof field === 'function') {\n        comparer = field;\n        field = null;\n      }\n\n      return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n    },\n\n    /**\n     * Returns the total number of true value present in the data based on the given boolean field name.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    truecount: function (ds, field) {\n      return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n    },\n\n    /**\n     * Returns the total number of false value present in the data based on the given boolean field name.\n     * @param  {Object[]} ds\n     * @param  {string} field\n     */\n    falsecount: function (ds, field) {\n      return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n    },\n\n    /**\n     * Returns the length of the given data.\n     * @param  {Object[]} ds\n     * @param  {string} field?\n     * @returns number\n     */\n    count: function (ds, field) {\n      return ds.length;\n    }\n  };\n  /**\n   * Specifies the Object with filter operators.\n   */\n\n  DataUtil.operatorSymbols = {\n    '<': 'lessthan',\n    '>': 'greaterthan',\n    '<=': 'lessthanorequal',\n    '>=': 'greaterthanorequal',\n    '==': 'equal',\n    '!=': 'notequal',\n    '*=': 'contains',\n    '$=': 'endswith',\n    '^=': 'startswith'\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for OData filter query generation.\n   * * It will be used for date/number type filter query.\n   */\n\n  DataUtil.odBiOperator = {\n    '<': ' lt ',\n    '>': ' gt ',\n    '<=': ' le ',\n    '>=': ' ge ',\n    '==': ' eq ',\n    '!=': ' ne ',\n    'lessthan': ' lt ',\n    'lessthanorequal': ' le ',\n    'greaterthan': ' gt ',\n    'greaterthanorequal': ' ge ',\n    'equal': ' eq ',\n    'notequal': ' ne '\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for OData filter query generation.\n   * It will be used for string type filter query.\n   */\n\n  DataUtil.odUniOperator = {\n    '$=': 'endswith',\n    '^=': 'startswith',\n    '*=': 'substringof',\n    'endswith': 'endswith',\n    'startswith': 'startswith',\n    'contains': 'substringof'\n  };\n  /**\n   * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n   * It will be used for string type filter query.\n   */\n\n  DataUtil.odv4UniOperator = {\n    '$=': 'endswith',\n    '^=': 'startswith',\n    '*=': 'contains',\n    'endswith': 'endswith',\n    'startswith': 'startswith',\n    'contains': 'contains'\n  };\n  DataUtil.diacritics = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n  };\n  DataUtil.fnOperators = {\n    /**\n     * Returns true when the actual input is equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     * @param  {boolean} ignoreAccent?\n     */\n    equal: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n      }\n\n      return actual === expected;\n    },\n\n    /**\n     * Returns true when the actual input is not equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n    },\n\n    /**\n     * Returns true when the actual input is less than to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    lessthan: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n      }\n\n      if (isNullOrUndefined(actual)) {\n        actual = undefined;\n      }\n\n      return actual < expected;\n    },\n\n    /**\n     * Returns true when the actual input is greater than to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    greaterthan: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n      }\n\n      return actual > expected;\n    },\n\n    /**\n     * Returns true when the actual input is less than or equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    lessthanorequal: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n      }\n\n      if (isNullOrUndefined(actual)) {\n        actual = undefined;\n      }\n\n      return actual <= expected;\n    },\n\n    /**\n     * Returns true when the actual input is greater than or equal to the given input.\n     * @param  {string|number|boolean} actual\n     * @param  {string|number|boolean} expected\n     * @param  {boolean} ignoreCase?\n     */\n    greaterthanorequal: function (actual, expected, ignoreCase) {\n      if (ignoreCase) {\n        return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n      }\n\n      return actual >= expected;\n    },\n\n    /**\n     * Returns true when the actual input contains the given string.\n     * @param  {string|number} actual\n     * @param  {string|number} expected\n     * @param  {boolean} ignoreCase?\n     */\n    contains: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) && DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n      }\n\n      return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) && actual.toString().indexOf(expected) !== -1;\n    },\n\n    /**\n     * Returns true when the given input value is not null.\n     * @param  {string|number} actual\n     * @returns boolean\n     */\n    notnull: function (actual) {\n      return actual !== null;\n    },\n\n    /**\n     * Returns true when the given input value is null.\n     * @param  {string|number} actual\n     * @returns boolean\n     */\n    isnull: function (actual) {\n      return actual === null;\n    },\n\n    /**\n     * Returns true when the actual input starts with the given string\n     * @param  {string} actual\n     * @param  {string} expected\n     * @param  {boolean} ignoreCase?\n     */\n    startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n      }\n\n      return actual && expected && DataUtil.startsWith(actual, expected);\n    },\n\n    /**\n     * Returns true when the actual input ends with the given string.\n     * @param  {string} actual\n     * @param  {string} expected\n     * @param  {boolean} ignoreCase?\n     */\n    endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n      if (ignoreAccent) {\n        actual = DataUtil.ignoreDiacritics(actual);\n        expected = DataUtil.ignoreDiacritics(expected);\n      }\n\n      if (ignoreCase) {\n        return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n      }\n\n      return actual && expected && DataUtil.endsWith(actual, expected);\n    },\n\n    /**\n     * It will return the filter operator based on the filter symbol.\n     * @param  {string} operator\n     * @hidden\n     */\n    processSymbols: function (operator) {\n      var fnName = DataUtil.operatorSymbols[operator];\n\n      if (fnName) {\n        var fn = DataUtil.fnOperators[fnName];\n        return fn;\n      }\n\n      return DataUtil.throwError('Query - Process Operator : Invalid operator');\n    },\n\n    /**\n     * It will return the valid filter operator based on the specified operators.\n     * @param  {string} operator\n     * @hidden\n     */\n    processOperator: function (operator) {\n      var fn = DataUtil.fnOperators[operator];\n\n      if (fn) {\n        return fn;\n      }\n\n      return DataUtil.fnOperators.processSymbols(operator);\n    }\n  };\n  /**\n   * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n   */\n\n  DataUtil.parse = {\n    /**\n     * Parse the given string to the plain JavaScript object.\n     * @param  {string|Object|Object[]} jsonText\n     */\n    parseJson: function (jsonText) {\n      if (typeof jsonText === 'string') {\n        jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n      } else if (jsonText instanceof Array) {\n        DataUtil.parse.iterateAndReviveArray(jsonText);\n      } else if (typeof jsonText === 'object' && jsonText !== null) {\n        DataUtil.parse.iterateAndReviveJson(jsonText);\n      }\n\n      return jsonText;\n    },\n\n    /**\n     * It will perform on array of values.\n     * @param  {string[]|Object[]} array\n     * @hidden\n     */\n    iterateAndReviveArray: function (array) {\n      for (var i = 0; i < array.length; i++) {\n        if (typeof array[i] === 'object' && array[i] !== null) {\n          DataUtil.parse.iterateAndReviveJson(array[i]);\n        } else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n          array[i] = DataUtil.parse.jsonReviver('', array[i]);\n        } else {\n          array[i] = DataUtil.parse.parseJson(array[i]);\n        }\n      }\n    },\n\n    /**\n     * It will perform on JSON values\n     * @param  {JSON} json\n     * @hidden\n     */\n    iterateAndReviveJson: function (json) {\n      var value;\n      var keys = Object.keys(json);\n\n      for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var prop = keys_2[_i];\n\n        if (DataUtil.startsWith(prop, '__')) {\n          continue;\n        }\n\n        value = json[prop];\n\n        if (typeof value === 'object') {\n          if (value instanceof Array) {\n            DataUtil.parse.iterateAndReviveArray(value);\n          } else if (value) {\n            DataUtil.parse.iterateAndReviveJson(value);\n          }\n        } else {\n          json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n        }\n      }\n    },\n\n    /**\n     * It will perform on JSON values\n     * @param  {string} field\n     * @param  {string|Date} value\n     * @hidden\n     */\n    jsonReviver: function (field, value) {\n      if (typeof value === 'string') {\n        var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n        var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n\n        if (ms) {\n          return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n        } else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n          var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n          var arr = value.split(/[^0-9.]/);\n\n          if (isUTC) {\n            if (arr[5].indexOf('.') > -1) {\n              var secondsMs = arr[5].split('.');\n              arr[5] = secondsMs[0];\n              arr[6] = secondsMs[1];\n            } else {\n              arr[6] = '00';\n            }\n\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10), parseInt(arr[6], 10)), DataUtil.serverTimezoneOffset, false);\n          } else {\n            var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n            var hrs = parseInt(arr[6], 10);\n            var mins = parseInt(arr[7], 10);\n\n            if (isNaN(hrs) && isNaN(mins)) {\n              return utcFormat;\n            }\n\n            if (value.indexOf('+') > -1) {\n              utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n            } else {\n              utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n            }\n\n            value = DataUtil.dateParse.toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n          }\n\n          if (DataUtil.serverTimezoneOffset == null) {\n            value = DataUtil.dateParse.addSelfOffset(value);\n          }\n        }\n      }\n\n      return value;\n    },\n\n    /**\n     * Check wheather the given value is JSON or not.\n     * @param  {Object[]} jsonData\n     */\n    isJson: function (jsonData) {\n      if (typeof jsonData[0] === 'string') {\n        return jsonData;\n      }\n\n      return DataUtil.parse.parseJson(jsonData);\n    },\n\n    /**\n     * Checks wheather the given value is GUID or not.\n     * @param  {string} value\n     */\n    isGuid: function (value) {\n      var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n      var match = regex.exec(value);\n      return match != null;\n    },\n\n    /**\n     * The method used to replace the value based on the type.\n     * @param  {Object} value\n     * @param  {boolean} stringify\n     * @hidden\n     */\n    replacer: function (value, stringify) {\n      if (DataUtil.isPlainObject(value)) {\n        return DataUtil.parse.jsonReplacer(value, stringify);\n      }\n\n      if (value instanceof Array) {\n        return DataUtil.parse.arrayReplacer(value);\n      }\n\n      if (value instanceof Date) {\n        return DataUtil.parse.jsonReplacer({\n          val: value\n        }, stringify).val;\n      }\n\n      return value;\n    },\n\n    /**\n     * It will replace the JSON value.\n     * @param  {string} key\n     * @param  {Object} val\n     * @hidden\n     */\n    jsonReplacer: function (val, stringify) {\n      var value;\n      var keys = Object.keys(val);\n\n      for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n        var prop = keys_3[_i];\n        value = val[prop];\n\n        if (!(value instanceof Date)) {\n          continue;\n        }\n\n        var d = value;\n\n        if (DataUtil.serverTimezoneOffset == null) {\n          val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n        } else {\n          d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n          val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n        }\n      }\n\n      return val;\n    },\n\n    /**\n     * It will replace the Array of value.\n     * @param  {string} key\n     * @param  {Object[]} val\n     * @hidden\n     */\n    arrayReplacer: function (val) {\n      for (var i = 0; i < val.length; i++) {\n        if (DataUtil.isPlainObject(val[i])) {\n          val[i] = DataUtil.parse.jsonReplacer(val[i]);\n        } else if (val[i] instanceof Date) {\n          val[i] = DataUtil.parse.jsonReplacer({\n            date: val[i]\n          }).date;\n        }\n      }\n\n      return val;\n    },\n\n    /**\n     * It will replace the Date object with respective to UTC format value.\n     * @param  {string} key\n     * @param  {any} value\n     * @hidden\n     */\n\n    /* tslint:disable-next-line:no-any */\n    jsonDateReplacer: function (key, value) {\n      if (key === 'value' && value) {\n        if (typeof value === 'string') {\n          var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n\n          if (ms) {\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n          } else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n            var arr = value.split(/[^0-9]/);\n            value = DataUtil.dateParse.toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n          }\n        }\n\n        if (value instanceof Date) {\n          value = DataUtil.dateParse.addSelfOffset(value);\n\n          if (DataUtil.serverTimezoneOffset === null) {\n            return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n          } else {\n            value = DataUtil.dateParse.toTimeZone(value, value.getTimezoneOffset() / 60 * 2 - DataUtil.serverTimezoneOffset, false);\n            return value.toJSON();\n          }\n        }\n      }\n\n      return value;\n    }\n  };\n  /**\n   * @hidden\n   */\n\n  DataUtil.dateParse = {\n    addSelfOffset: function (input) {\n      return new Date(+input - input.getTimezoneOffset() * 60000);\n    },\n    toUTC: function (input) {\n      return new Date(+input + input.getTimezoneOffset() * 60000);\n    },\n    toTimeZone: function (input, offset, utc) {\n      if (offset === null) {\n        return input;\n      }\n\n      var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n      return new Date(+unix - offset * 3600000);\n    },\n    toLocalTime: function (input) {\n      var datefn = input;\n      var timeZone = -datefn.getTimezoneOffset();\n      var differenceString = timeZone >= 0 ? '+' : '-';\n\n      var localtimefn = function (num) {\n        var norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n      };\n\n      var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) + 'T' + localtimefn(datefn.getHours()) + ':' + localtimefn(datefn.getMinutes()) + ':' + localtimefn(datefn.getSeconds()) + differenceString + localtimefn(timeZone / 60) + ':' + localtimefn(timeZone % 60);\n      return val;\n    }\n  };\n  return DataUtil;\n}();\n\nvar __extends = undefined && undefined.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar consts$1 = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\n\nvar Adaptor =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Constructor for Adaptor class\n   * @param  {DataOptions} ds?\n   * @hidden\n   * @returns aggregates\n   */\n  function Adaptor(ds) {\n    // common options for all the adaptors \n    this.options = {\n      from: 'table',\n      requestType: 'json',\n      sortBy: 'sorted',\n      select: 'select',\n      skip: 'skip',\n      group: 'group',\n      take: 'take',\n      search: 'search',\n      count: 'requiresCounts',\n      where: 'where',\n      aggregates: 'aggregates',\n      expand: 'expand'\n    };\n    /**\n     * Specifies the type of adaptor.\n     * @default Adaptor\n     */\n\n    this.type = Adaptor;\n    this.dataSource = ds;\n    this.pvt = {};\n  }\n  /**\n   * Returns the data from the query processing.\n   * @param  {Object} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @returns Object\n   */\n\n\n  Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n    return data;\n  };\n\n  return Adaptor;\n}();\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\n\n\nvar JsonAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(JsonAdaptor, _super);\n\n  function JsonAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dataManager\n   * @param  {Query} query\n   * @returns Object\n   */\n\n\n  JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n    var result = dataManager.dataSource.json.slice(0);\n    var count = result.length;\n    var countFlg = true;\n    var ret;\n    var key;\n    var lazyLoad = {};\n    var keyCount = 0;\n    var group = [];\n    var page;\n\n    for (var i = 0; i < query.lazyLoad.length; i++) {\n      keyCount++;\n      lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n    }\n\n    var agg = {};\n\n    for (var i = 0; i < query.queries.length; i++) {\n      key = query.queries[i];\n\n      if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n        if (key.fn === 'onGroup') {\n          group.push(key.e);\n        }\n\n        if (key.fn === 'onPage') {\n          page = key.e;\n        }\n\n        continue;\n      }\n\n      ret = this[key.fn].call(this, result, key.e, query);\n\n      if (key.fn === 'onAggregates') {\n        agg[key.e.field + ' - ' + key.e.type] = ret;\n      } else {\n        result = ret !== undefined ? ret : result;\n      }\n\n      if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n        countFlg = false;\n      }\n\n      if (countFlg) {\n        count = result.length;\n      }\n    }\n\n    if (keyCount) {\n      var args = {\n        query: query,\n        lazyLoad: lazyLoad,\n        result: result,\n        group: group,\n        page: page\n      };\n      var lazyLoadData = this.lazyLoadGroup(args);\n      result = lazyLoadData.result;\n      count = lazyLoadData.count;\n    }\n\n    if (query.isCountRequired) {\n      result = {\n        result: result,\n        count: count,\n        aggregates: agg\n      };\n    }\n\n    return result;\n  };\n  /**\n   * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n   * @param  {LazyLoadGroupArgs} args\n   */\n\n\n  JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n    var count = 0;\n    var agg = this.getAggregate(args.query);\n    var result = args.result;\n\n    if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n      var req = args.lazyLoad.onDemandGroupInfo;\n\n      for (var i = req.where.length - 1; i >= 0; i--) {\n        result = this.onWhere(result, req.where[i]);\n      }\n\n      if (args.group.length !== req.level) {\n        var field = args.group[req.level].fieldName;\n        result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n      }\n\n      count = result.length;\n      var data = result;\n      result = result.slice(req.skip);\n      result = result.slice(0, req.take);\n\n      if (args.group.length !== req.level) {\n        this.formGroupResult(result, data);\n      }\n    } else {\n      var field = args.group[0].fieldName;\n      result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n      count = result.length;\n      var data = result;\n\n      if (args.page) {\n        result = this.onPage(result, args.page, args.query);\n      }\n\n      this.formGroupResult(result, data);\n    }\n\n    return {\n      result: result,\n      count: count\n    };\n  };\n\n  JsonAdaptor.prototype.formGroupResult = function (result, data) {\n    if (result.length && data.length) {\n      var uid = 'GroupGuid';\n      var childLevel = 'childLevels';\n      var level = 'level';\n      var records = 'records';\n      result[uid] = data[uid];\n      result[childLevel] = data[childLevel];\n      result[level] = data[level];\n      result[records] = data[records];\n    }\n\n    return result;\n  };\n  /**\n   * Separate the aggregate query from the given queries\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.getAggregate = function (query) {\n    var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n    var agg = [];\n\n    if (aggQuery.length) {\n      var tmp = void 0;\n\n      for (var i = 0; i < aggQuery.length; i++) {\n        tmp = aggQuery[i].e;\n        agg.push({\n          type: tmp.type,\n          field: DataUtil.getValue(tmp.field, query)\n        });\n      }\n    }\n\n    return agg;\n  };\n  /**\n   * Performs batch update in the JSON array which add, remove and update records.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var i;\n    var deletedRecordsLen = changes.deletedRecords.length;\n\n    for (i = 0; i < changes.addedRecords.length; i++) {\n      this.insert(dm, changes.addedRecords[i]);\n    }\n\n    for (i = 0; i < changes.changedRecords.length; i++) {\n      this.update(dm, e.key, changes.changedRecords[i]);\n    }\n\n    for (i = 0; i < deletedRecordsLen; i++) {\n      this.remove(dm, e.key, changes.deletedRecords[i]);\n    }\n\n    return changes;\n  };\n  /**\n   * Performs filter operation with the given data and where query.\n   * @param  {Object[]} ds\n   * @param  {{validate:Function}} e\n   */\n\n\n  JsonAdaptor.prototype.onWhere = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.filter(function (obj) {\n      if (e) {\n        return e.validate(obj);\n      }\n    });\n  };\n  /**\n   * Returns aggregate function based on the aggregate type.\n   * @param  {Object[]} ds\n   * @param  {{field:string} e\n   * @param  {string}} type\n   */\n\n\n  JsonAdaptor.prototype.onAggregates = function (ds, e) {\n    var fn = DataUtil.aggregates[e.type];\n\n    if (!ds || !fn || ds.length === 0) {\n      return null;\n    }\n\n    return fn(ds, e.field);\n  };\n  /**\n   * Performs search operation based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   */\n\n\n  JsonAdaptor.prototype.onSearch = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    if (e.fieldNames.length === 0) {\n      DataUtil.getFieldList(ds[0], e.fieldNames);\n    }\n\n    return ds.filter(function (obj) {\n      for (var j = 0; j < e.fieldNames.length; j++) {\n        if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n  /**\n   * Sort the data with given direction and field.\n   * @param  {Object[]} ds\n   * @param  {{comparer:(a:Object} e\n   * @param  {Object} b\n   */\n\n\n  JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    var fnCompare;\n    var field = DataUtil.getValue(e.fieldName, query);\n\n    if (!field) {\n      return ds.sort(e.comparer);\n    }\n\n    if (field instanceof Array) {\n      field = field.slice(0);\n\n      for (var i = field.length - 1; i >= 0; i--) {\n        if (!field[i]) {\n          continue;\n        }\n\n        fnCompare = e.comparer;\n\n        if (DataUtil.endsWith(field[i], ' desc')) {\n          fnCompare = DataUtil.fnSort('descending');\n          field[i] = field[i].replace(' desc', '');\n        }\n\n        ds = DataUtil.sort(ds, field[i], fnCompare);\n      }\n\n      return ds;\n    }\n\n    return DataUtil.sort(ds, field, e.comparer);\n  };\n  /**\n   * Group the data based on the given query.\n   * @param  {Object[]} ds\n   * @param  {QueryOptions} e\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    var agg = this.getAggregate(query);\n    return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n  };\n  /**\n   * Retrieves records based on the given page index and size.\n   * @param  {Object[]} ds\n   * @param  {{pageSize:number} e\n   * @param  {number}} pageIndex\n   * @param  {Query} query\n   */\n\n\n  JsonAdaptor.prototype.onPage = function (ds, e, query) {\n    var size = DataUtil.getValue(e.pageSize, query);\n    var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n    var end = start + size;\n\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(start, end);\n  };\n  /**\n   * Retrieves records based on the given start and end index from query.\n   * @param  {Object[]} ds\n   * @param  {{start:number} e\n   * @param  {number}} end\n   */\n\n\n  JsonAdaptor.prototype.onRange = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n  };\n  /**\n   * Picks the given count of records from the top of the datasource.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n\n\n  JsonAdaptor.prototype.onTake = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(0, DataUtil.getValue(e.nos));\n  };\n  /**\n   * Skips the given count of records from the data source.\n   * @param  {Object[]} ds\n   * @param  {{nos:number}} e\n   */\n\n\n  JsonAdaptor.prototype.onSkip = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return ds.slice(DataUtil.getValue(e.nos));\n  };\n  /**\n   * Selects specified columns from the data source.\n   * @param  {Object[]} ds\n   * @param  {{fieldNames:string}} e\n   */\n\n\n  JsonAdaptor.prototype.onSelect = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n\n    return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n  };\n  /**\n   * Inserts new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {number} position\n   */\n\n\n  JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    if (isNullOrUndefined(position)) {\n      return dm.dataSource.json.push(data);\n    } else {\n      return dm.dataSource.json.splice(position, 0, data);\n    }\n  };\n  /**\n   * Remove the data from the dataSource based on the key field value.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n\n\n  JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n\n    if (typeof value === 'object' && !(value instanceof Date)) {\n      value = DataUtil.getObject(keyField, value);\n    }\n\n    for (i = 0; i < ds.length; i++) {\n      if (DataUtil.getObject(keyField, ds[i]) === value) {\n        break;\n      }\n    }\n\n    return i !== ds.length ? ds.splice(i, 1) : null;\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns null\n   */\n\n\n  JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    var key;\n\n    if (!isNullOrUndefined(keyField)) {\n      key = getValue(keyField, value);\n    }\n\n    for (i = 0; i < ds.length; i++) {\n      if (!isNullOrUndefined(keyField) && getValue(keyField, ds[i]) === key) {\n        break;\n      }\n    }\n\n    return i < ds.length ? merge(ds[i], value) : null;\n  };\n\n  return JsonAdaptor;\n}(Adaptor);\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\n\n\nvar UrlAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(UrlAdaptor, _super);\n\n  function UrlAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Process the query to generate request body.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns p\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var params = query.params;\n    var url = dm.dataSource.url;\n    var temp;\n    var skip;\n    var take = null;\n    var options = this.options;\n    var request = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    }; // calc Paging & Range\n\n    if ('onPage' in singles) {\n      temp = singles.onPage;\n      skip = DataUtil.getValue(temp.pageIndex, query);\n      take = DataUtil.getValue(temp.pageSize, query);\n      skip = (skip - 1) * take;\n    } else if ('onRange' in singles) {\n      temp = singles.onRange;\n      skip = temp.start;\n      take = temp.end - temp.start;\n    } // Sorting\n\n\n    for (var i = 0; i < queries.sorts.length; i++) {\n      temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n      request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', {\n        name: temp,\n        direction: queries.sorts[i].e.direction\n      }, query));\n    } // hierarchy\n\n\n    if (hierarchyFilters) {\n      temp = this.getFiltersFrom(hierarchyFilters, query);\n\n      if (temp) {\n        request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n      }\n    } // Filters\n\n\n    for (var i = 0; i < queries.filters.length; i++) {\n      var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n\n      if (this.getModuleName && this.getModuleName() === 'ODataV4Adaptor' && !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n        res = \"(\" + res + \")\";\n      }\n\n      request.filters.push(res);\n      var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n\n      for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n\n        if (DataUtil.isNull(request[prop])) {\n          delete request[prop];\n        }\n      }\n    } // Searches\n\n\n    for (var i = 0; i < queries.searches.length; i++) {\n      temp = queries.searches[i].e;\n      request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n        fields: temp.fieldNames,\n        operator: temp.operator,\n        key: temp.searchKey,\n        ignoreCase: temp.ignoreCase\n      }, query));\n    } // Grouping\n\n\n    for (var i = 0; i < queries.groups.length; i++) {\n      request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n    } // aggregates\n\n\n    for (var i = 0; i < queries.aggregates.length; i++) {\n      temp = queries.aggregates[i].e;\n      request.aggregates.push({\n        type: temp.type,\n        field: DataUtil.getValue(temp.field, query)\n      });\n    }\n\n    var req = {};\n    this.getRequestQuery(options, query, singles, request, req); // Params\n\n    DataUtil.callAdaptorFunction(this, 'addParams', {\n      dm: dm,\n      query: query,\n      params: params,\n      reqParams: req\n    });\n\n    if (query.lazyLoad.length) {\n      for (var i = 0; i < query.lazyLoad.length; i++) {\n        req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n      }\n    } // cleanup\n\n\n    var keys = Object.keys(req);\n\n    for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n      var prop = keys_2[_a];\n\n      if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n        delete req[prop];\n      }\n    }\n\n    if (!(options.skip in req && options.take in req) && take !== null) {\n      req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n      req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n    }\n\n    var p = this.pvt;\n    this.pvt = {};\n\n    if (this.options.requestType === 'json') {\n      return {\n        data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n        url: url,\n        pvtData: p,\n        type: 'POST',\n        contentType: 'application/json; charset=utf-8'\n      };\n    }\n\n    temp = this.convertToQueryString(req, query, dm);\n    temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n    return {\n      type: 'GET',\n      url: temp.length ? url.replace(/\\/*$/, temp) : url,\n      pvtData: p\n    };\n  };\n\n  UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n    var param = 'param';\n    var req = request1;\n    req[options.from] = query.fromTable;\n\n    if (options.apply && query.distincts.length) {\n      req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n    }\n\n    if (!query.distincts.length && options.expand) {\n      req[options.expand] = 'onExpand' in this && 'onSelect' in singles ? DataUtil.callAdaptorFunction(this, 'onExpand', {\n        selects: DataUtil.getValue(singles.onSelect.fieldNames, query),\n        expands: query.expands\n      }, query) : query.expands;\n    }\n\n    req[options.select] = 'onSelect' in singles && !query.distincts.length ? DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n    req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n    req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n    req[options.skip] = 'onSkip' in singles ? DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n    req[options.take] = 'onTake' in singles ? DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n    req[options.where] = request.filters.length || request.searches.length ? DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n    req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n    req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n    req[options.aggregates] = request.aggregates.length ? DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n    req[param] = [];\n  };\n  /**\n   * Convert the object from processQuery to string which can be added query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   */\n\n\n  UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    return ''; // this needs to be overridden\n  };\n  /**\n   * Return the data from the data manager processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @param  {CrudOptions} changes?\n   */\n\n\n  UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n      var handleTimeZone = DataUtil.timeZoneHandling;\n\n      if (ds && !ds.timeZoneHandling) {\n        DataUtil.timeZoneHandling = false;\n      }\n\n      data = DataUtil.parse.parseJson(data);\n      DataUtil.timeZoneHandling = handleTimeZone;\n    }\n\n    var requests = request;\n    var pvt = requests.pvtData || {};\n    var groupDs = data ? data.groupDs : [];\n\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n\n    var d = JSON.parse(requests.data);\n\n    if (d && d.action === 'batch' && data && data.addedRecords) {\n      changes.addedRecords = data.addedRecords;\n      return changes;\n    }\n\n    if (data && data.d) {\n      data = data.d;\n    }\n\n    var args = {};\n\n    if (data && 'count' in data) {\n      args.count = data.count;\n    }\n\n    args.result = data && data.result ? data.result : data;\n    var isExpand = false;\n\n    if (Array.isArray(data.result) && data.result.length) {\n      var key = 'key';\n      var val = 'value';\n      var level = 'level';\n\n      if (!isNullOrUndefined(data.result[0][key])) {\n        args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n      }\n\n      if (query && query.lazyLoad.length && pvt.groups.length) {\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n          if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n            var value = query.lazyLoad[i][val][level];\n\n            if (pvt.groups.length === value) {\n              isExpand = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (!isExpand) {\n      this.getAggregateResult(pvt, data, args, groupDs, query);\n    }\n\n    return DataUtil.isNull(args.count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n\n  UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n        this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n      }\n    }\n\n    var uid = 'GroupGuid';\n    var childLvl = 'childLevels';\n    var lvl = 'level';\n    var records = 'records';\n    data[uid] = consts$1[uid];\n    data[lvl] = level;\n    data[childLvl] = childLevel;\n    data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n    return data;\n  };\n\n  UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n    var childGroupedRecords = [];\n    var records = 'records';\n\n    for (var i = 0; i < data.length; i++) {\n      if (!hasRecords) {\n        for (var j = 0; j < data[i].items.length; j++) {\n          childGroupedRecords.push(data[i].items[j]);\n        }\n      } else {\n        childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n      }\n    }\n\n    return childGroupedRecords;\n  };\n  /**\n   * Add the group query to the adaptor`s option.\n   * @param  {Object[]} e\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return e;\n  };\n  /**\n   * Add the aggregate query to the adaptor`s option.\n   * @param  {Aggregates[]} e\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   */\n\n\n  UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var url;\n    var key;\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e[url],\n        key: e[key]\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @returns void\n   */\n\n\n  UrlAdaptor.prototype.beforeSend = function (dm, request) {// need to extend this method\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number|string} value\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: value,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n\n\n  UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: value,\n        action: 'update',\n        keyColumn: keyField,\n        key: DataUtil.getObject(keyField, value),\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\n   * To generate the predicate based on the filtered query.\n   * @param  {Object[]|string[]|number[]} data\n   * @param  {Query} query\n   * @hidden\n   */\n\n\n  UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n    var key = query.fKey;\n    var value;\n    var prop = key;\n    var pKey = query.key;\n    var predicats = [];\n\n    if (typeof data[0] !== 'object') {\n      prop = null;\n    }\n\n    for (var i = 0; i < data.length; i++) {\n      if (typeof data[0] === 'object') {\n        value = DataUtil.getObject(pKey || prop, data[i]);\n      } else {\n        value = data[i];\n      }\n\n      predicats.push(new Predicate(key, 'equal', value));\n    }\n\n    return Predicate.or(predicats);\n  };\n\n  UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n    var pData = data;\n\n    if (data && data.result) {\n      pData = data.result;\n    }\n\n    if (pvt && pvt.aggregates && pvt.aggregates.length) {\n      var agg = pvt.aggregates;\n      var fn = void 0;\n      var aggregateData = pData;\n      var res = {};\n\n      if (data.aggregate) {\n        aggregateData = data.aggregate;\n      }\n\n      for (var i = 0; i < agg.length; i++) {\n        fn = DataUtil.aggregates[agg[i].type];\n\n        if (fn) {\n          res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n        }\n      }\n\n      args.aggregates = res;\n    }\n\n    var key = 'key';\n    var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n\n    if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n      var groups = pvt.groups;\n\n      for (var i = 0; i < groups.length; i++) {\n        var level = null;\n\n        if (!isNullOrUndefined(groupDs)) {\n          groupDs = DataUtil.group(groupDs, groups[i]);\n        }\n\n        var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n        pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n      }\n\n      args.result = pData;\n    }\n\n    return args;\n  };\n\n  UrlAdaptor.prototype.getQueryRequest = function (query) {\n    var req = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n    req.groups = Query.filterQueries(query.queries, 'onGroup');\n    req.filters = Query.filterQueries(query.queries, 'onWhere');\n    req.searches = Query.filterQueries(query.queries, 'onSearch');\n    req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n    return req;\n  };\n\n  UrlAdaptor.prototype.addParams = function (options) {\n    var req = options.reqParams;\n\n    if (options.params.length) {\n      req.params = {};\n    }\n\n    for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n      var tmp = _a[_i];\n\n      if (req[tmp.key]) {\n        throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n      }\n\n      req[tmp.key] = tmp.value;\n\n      if (tmp.fn) {\n        req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n      }\n\n      req.params[tmp.key] = req[tmp.key];\n    }\n  };\n\n  return UrlAdaptor;\n}(Adaptor);\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\n\n\nvar ODataAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(ODataAdaptor, _super);\n\n  function ODataAdaptor(props) {\n    var _this = _super.call(this) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$inlinecount',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PUT'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n\n  ODataAdaptor.prototype.getModuleName = function () {\n    return 'ODataAdaptor';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var operator;\n    var guid;\n    var val = predicate.value;\n    var type = typeof val;\n    var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n\n    if (val instanceof Date) {\n      val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n    }\n\n    if (type === 'string') {\n      val = val.replace(/'/g, \"''\");\n\n      if (predicate.ignoreCase) {\n        val = val.toLowerCase();\n      }\n\n      val = encodeURIComponent(val);\n      val = '\\'' + val + '\\'';\n\n      if (requiresCast) {\n        field = 'cast(' + field + ', \\'Edm.String\\')';\n      }\n\n      if (DataUtil.parse.isGuid(val)) {\n        guid = 'guid';\n      }\n\n      if (predicate.ignoreCase) {\n        if (!guid) {\n          field = 'tolower(' + field + ')';\n        }\n\n        val = val.toLowerCase();\n      }\n    }\n\n    operator = DataUtil.odBiOperator[predicate.operator];\n\n    if (operator) {\n      returnValue += field;\n      returnValue += operator;\n\n      if (guid) {\n        returnValue += guid;\n      }\n\n      return returnValue + val;\n    }\n\n    if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n      operator = DataUtil.odv4UniOperator[predicate.operator];\n    } else {\n      operator = DataUtil.odUniOperator[predicate.operator];\n    }\n\n    if (operator === 'substringof') {\n      var temp = val;\n      val = field;\n      field = temp;\n    }\n\n    returnValue += operator + '(';\n    returnValue += field + ',';\n\n    if (guid) {\n      returnValue += guid;\n    }\n\n    returnValue += val + ')';\n    return returnValue;\n  };\n\n  ODataAdaptor.prototype.addParams = function (options) {\n    _super.prototype.addParams.call(this, options);\n\n    delete options.reqParams.params;\n  };\n  /**\n   * Generate request string based on the multiple filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n    var res = [];\n\n    for (var i = 0; i < predicate.predicates.length; i++) {\n      res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n    }\n\n    return res.join(' ' + predicate.condition + ' ');\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {Predicate} filter\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n    return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n  };\n  /**\n   * Generate query string based on the multiple filter criteria from query.\n   * @param  {string[]} filters\n   */\n\n\n  ODataAdaptor.prototype.onWhere = function (filters) {\n    if (this.pvt.search) {\n      filters.push(this.onEachWhere(this.pvt.search, null, true));\n    }\n\n    return filters.join(' and ');\n  };\n  /**\n   * Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n\n\n  ODataAdaptor.prototype.onEachSearch = function (e) {\n    if (e.fields && e.fields.length === 0) {\n      DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n    }\n\n    var filter = this.pvt.search || [];\n\n    for (var i = 0; i < e.fields.length; i++) {\n      filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n    }\n\n    this.pvt.search = filter;\n  };\n  /**\n   * Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n\n\n  ODataAdaptor.prototype.onSearch = function (e) {\n    this.pvt.search = Predicate.or(this.pvt.search);\n    return '';\n  };\n  /**\n   * Generate query string based on multiple sort criteria from query.\n   * @param  {QueryOptions} e\n   */\n\n\n  ODataAdaptor.prototype.onEachSort = function (e) {\n    var res = [];\n\n    if (e.name instanceof Array) {\n      for (var i = 0; i < e.name.length; i++) {\n        res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n      }\n    } else {\n      res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n    }\n\n    return res.join(',');\n  };\n  /**\n   * Returns sort query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataAdaptor.prototype.onSortBy = function (e) {\n    return e.reverse().join(',');\n  };\n  /**\n   * Adds the group query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return [];\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataAdaptor.prototype.onSelect = function (e) {\n    for (var i = 0; i < e.length; i++) {\n      e[i] = ODataAdaptor.getField(e[i]);\n    }\n\n    return e.join(',');\n  };\n  /**\n   * Add the aggregate query to the adaptor option.\n   * @param  {Object[]} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n    return '';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n\n\n  ODataAdaptor.prototype.onCount = function (e) {\n    return e === true ? 'allpages' : '';\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n\n\n  ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.options.multipartAccept);\n      request.setRequestHeader('DataServiceVersion', '2.0');\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n    } else {\n      request.setRequestHeader('Accept', this.options.accept);\n    }\n\n    request.setRequestHeader('DataServiceVersion', '2.0');\n    request.setRequestHeader('MaxDataServiceVersion', '2.0');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaCheck = 'odata.metadata';\n\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaCheck]) {\n      var dataUrls = data[metaCheck].split('/$metadata#');\n      this.rootUrl = dataUrls[0];\n      this.resourceTableName = dataUrls[1];\n    }\n\n    var pvtData = 'pvtData';\n\n    if (!isNullOrUndefined(data.d)) {\n      var dataCopy = query && query.isCountRequired ? data.d.results : data.d;\n      var metaData = '__metadata';\n\n      if (!isNullOrUndefined(dataCopy)) {\n        for (var i = 0; i < dataCopy.length; i++) {\n          if (!isNullOrUndefined(dataCopy[i][metaData])) {\n            delete dataCopy[i][metaData];\n          }\n        }\n      }\n    }\n\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n\n    var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n    var count = null;\n    var version = versionCheck && parseInt(versionCheck, 10) || 2;\n\n    if (query && query.isCountRequired) {\n      var oDataCount = '__count';\n\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n\n      if (data.d) {\n        data = data.d;\n      }\n\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n    }\n\n    if (version === 3 && data.value) {\n      data = data.value;\n    }\n\n    if (data.d) {\n      data = data.d;\n    }\n\n    if (version < 3 && data.results) {\n      data = data.results;\n    }\n\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  /**\n   * Converts the request object to query string.\n   * @param  {Object} req\n   * @param  {Query} query\n   * @param  {DataManager} dm\n   * @returns tableName\n   */\n\n\n  ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    var res = [];\n    var table = 'table';\n    var tableName = request[table] || '';\n    var format = '$format';\n    delete request[table];\n\n    if (dm.dataSource.requiresFormat) {\n      request[format] = 'json';\n    }\n\n    var keys = Object.keys(request);\n\n    for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n      var prop = keys_4[_i];\n      res.push(prop + '=' + request[prop]);\n    }\n\n    res = res.join('&');\n\n    if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n      return res;\n    }\n\n    return res.length ? tableName + '?' + res : tableName || '';\n  };\n\n  ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n    for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      if (convertObj[prop] instanceof Date) {\n        convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n      }\n    }\n\n    return convertObj;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n      data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n\n\n  ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var url;\n\n    if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n      url = \"('\" + value + \"')\";\n    } else {\n      url = \"(\" + value + \")\";\n    }\n\n    return {\n      type: 'DELETE',\n      url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n    };\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   * @returns this\n   */\n\n\n  ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n    if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n      value = this.compareAndRemove(value, original, keyField);\n    }\n\n    var url;\n\n    if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n      url = \"('\" + value[keyField] + \"')\";\n    } else {\n      url = \"(\" + value[keyField] + \")\";\n    }\n\n    return {\n      type: this.options.updateType,\n      url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n      data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n      accept: this.options.accept\n    };\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   * @returns {Object}\n   */\n\n\n  ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch : dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var args = {\n      url: e.url,\n      key: e.key,\n      cid: 1,\n      cSet: DataUtil.getGuid(this.options.changeSet)\n    };\n    var req = '--' + initialGuid + '\\n';\n    req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n    this.pvt.changeSet = 0;\n    req += this.generateInsertRequest(changes.addedRecords, args, dm);\n    req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n    req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n    req += args.cSet + '--\\n';\n    req += '--' + initialGuid + '--';\n    return {\n      type: 'POST',\n      url: url,\n      dataType: 'json',\n      contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n      data: req\n    };\n  };\n  /**\n   * Generate the string content from the removed records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   * @returns this\n   */\n\n\n  ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    var stat = {\n      'method': 'DELETE ',\n      'url': function (data, i, key) {\n        var url = DataUtil.getObject(key, data[i]);\n\n        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n          return '(' + url + ')';\n        } else if (url instanceof Date) {\n          var dateTime = data[i][key];\n          return '(' + dateTime.toJSON() + ')';\n        } else {\n          return \"('\" + url + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return '';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req + '\\n';\n  };\n  /**\n   * Generate the string content from the inserted records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n\n\n  ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    var stat = {\n      'method': 'POST ',\n      'url': function (data, i, key) {\n        return '';\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  /**\n   * Generate the string content from the updated records.\n   * The result will be send during batch update.\n   * @param  {Object[]} arr\n   * @param  {RemoteArgs} e\n   */\n\n\n  ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n    var _this = this;\n\n    if (!arr) {\n      return '';\n    }\n\n    var req = '';\n    arr.forEach(function (change) {\n      return change = _this.compareAndRemove(change, org.filter(function (o) {\n        return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change);\n      })[0], e.key);\n    });\n    var stat = {\n      'method': this.options.updateType + ' ',\n      'url': function (data, i, key) {\n        if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n          return '(' + data[i][key] + ')';\n        } else if (data[i][key] instanceof Date) {\n          var date = data[i][key];\n          return '(' + date.toJSON() + ')';\n        } else {\n          return \"('\" + data[i][key] + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n\n  ODataAdaptor.getField = function (prop) {\n    return prop.replace(/\\./g, '/');\n  };\n\n  ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n    var req = '';\n\n    for (var i = 0; i < arr.length; i++) {\n      req += '\\n' + e.cSet + '\\n';\n      req += this.options.changeSetContent + '\\n\\n';\n      req += stat.method;\n\n      if (stat.method === 'POST ') {\n        req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n        req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'DELETE ') {\n        req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      }\n\n      req += 'Accept: ' + this.options.accept + '\\n';\n      req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n      req += this.options.batchChangeSetContentType + '\\n';\n\n      if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n        req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n        delete arr[i]['@odata.etag'];\n      } else {\n        req += '\\n';\n      }\n\n      req += stat.data(arr, i);\n    }\n\n    return req;\n  };\n\n  ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n    if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n\n    if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n      var guid = xhr.getResponseHeader('Content-Type');\n      var cIdx = void 0;\n      var jsonObj = void 0;\n      var d = data + '';\n      guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n      d = d.split(guid);\n\n      if (d.length < 2) {\n        return {};\n      }\n\n      d = d[1];\n      var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n\n      if (exVal) {\n        d.replace(exVal[0], '');\n      }\n\n      var changeGuid = exVal ? exVal[1] : '';\n      d = d.split(changeGuid);\n\n      for (var i = d.length; i > -1; i--) {\n        if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n          continue;\n        }\n\n        cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n\n        if (changes.addedRecords[cIdx]) {\n          jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n          extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n        }\n      }\n\n      return changes;\n    }\n\n    return null;\n  };\n\n  ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n    var _this = this;\n\n    if (isNullOrUndefined(original)) {\n      return data;\n    }\n\n    Object.keys(data).forEach(function (prop) {\n      if (prop !== key && prop !== '@odata.etag') {\n        if (DataUtil.isPlainObject(data[prop])) {\n          _this.compareAndRemove(data[prop], original[prop]);\n\n          var final = Object.keys(data[prop]).filter(function (data) {\n            return data !== '@odata.etag';\n          });\n\n          if (final.length === 0) {\n            delete data[prop];\n          }\n        } else if (data[prop] === original[prop]) {\n          delete data[prop];\n        } else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n          delete data[prop];\n        }\n      }\n    });\n    return data;\n  };\n\n  return ODataAdaptor;\n}(UrlAdaptor);\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\n\n\nvar ODataV4Adaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(ODataV4Adaptor, _super);\n\n  function ODataV4Adaptor(props) {\n    var _this = _super.call(this, props) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json, text/javascript, */*; q=0.01',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$count',\n      search: '$search',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PATCH',\n      localTime: false,\n      apply: '$apply'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  ODataV4Adaptor.prototype.getModuleName = function () {\n    return 'ODataV4Adaptor';\n  };\n  /**\n   * Returns the query string which requests total count from the data source.\n   * @param  {boolean} e\n   * @returns string\n   */\n\n\n  ODataV4Adaptor.prototype.onCount = function (e) {\n    return e === true ? 'true' : '';\n  };\n  /**\n   * Generate request string based on the filter criteria from query.\n   * @param  {Predicate} pred\n   * @param  {boolean} requiresCast?\n   */\n\n\n  ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var val = predicate.value;\n    var isDate = val instanceof Date;\n\n    if (query instanceof Query) {\n      var queries = this.getQueryRequest(query);\n\n      for (var i = 0; i < queries.filters.length; i++) {\n        if (queries.filters[i].e.key === predicate.value) {\n          requiresCast = true;\n        }\n      }\n    }\n\n    returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n\n    if (isDate) {\n      returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n    }\n\n    if (DataUtil.parse.isGuid(val)) {\n      returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n    }\n\n    return returnValue;\n  };\n  /**\n   *  Generate query string based on the multiple search criteria from query.\n   * @param  {{fields:string[]} e\n   * @param  {string} operator\n   * @param  {string} key\n   * @param  {boolean}} ignoreCase\n   */\n\n\n  ODataV4Adaptor.prototype.onEachSearch = function (e) {\n    var search = this.pvt.searches || [];\n    search.push(e.key);\n    this.pvt.searches = search;\n  };\n  /**\n   *  Generate query string based on the search criteria from query.\n   * @param  {Object} e\n   */\n\n\n  ODataV4Adaptor.prototype.onSearch = function (e) {\n    return this.pvt.searches.join(' OR ');\n  };\n  /**\n   * Returns the expand query string.\n   * @param  {string} e\n   */\n\n\n  ODataV4Adaptor.prototype.onExpand = function (e) {\n    var _this = this;\n\n    var selected = {};\n    var expanded = {};\n    var expands = e.expands.slice();\n    var exArr = [];\n    var selects = e.selects.filter(function (item) {\n      return item.indexOf('.') > -1;\n    });\n    selects.forEach(function (select) {\n      var splits = select.split('.');\n\n      if (!(splits[0] in selected)) {\n        selected[splits[0]] = [];\n      }\n\n      if (splits.length == 2) {\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n          if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n            selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n          } else {\n            selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n          }\n        } else {\n          selected[splits[0]].push('$select=' + splits[1]);\n        }\n      } else {\n        var sel = '$select=' + splits[splits.length - 1];\n        var exp = '';\n        var close_1 = '';\n\n        for (var i = 1; i < splits.length - 1; i++) {\n          exp = exp + '$expand=' + splits[i] + '(';\n          close_1 = close_1 + ')';\n        }\n\n        var combineVal = exp + sel + close_1;\n\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 && _this.expandQueryIndex(selected[splits[0]], true)) {\n          var idx = _this.expandQueryIndex(selected[splits[0]]);\n\n          selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n        } else {\n          selected[splits[0]].push(combineVal);\n        }\n      }\n    }); //Auto expand from select query\n\n    Object.keys(selected).forEach(function (expand) {\n      if (expands.indexOf(expand) === -1) {\n        expands.push(expand);\n      }\n    });\n    expands.forEach(function (expand) {\n      expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n    });\n    Object.keys(expanded).forEach(function (ex) {\n      return exArr.push(expanded[ex]);\n    });\n    return exArr.join(',');\n  };\n\n  ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n    for (var i = 0; i < query.length; i++) {\n      if (query[i].indexOf('$expand') !== -1) {\n        return isExpand ? true : i;\n      }\n    }\n\n    return isExpand ? false : 0;\n  };\n  /**\n   * Returns the groupby query string.\n   * @param  {string} e\n   */\n\n\n  ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n    var fields = distinctFields.map(function (field) {\n      return ODataAdaptor.getField(field);\n    }).join(',');\n    return \"groupby((\" + fields + \"))\";\n  };\n  /**\n   * Returns the select query string.\n   * @param  {string[]} e\n   */\n\n\n  ODataV4Adaptor.prototype.onSelect = function (e) {\n    return _super.prototype.onSelect.call(this, e.filter(function (item) {\n      return item.indexOf('.') === -1;\n    }));\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n\n\n  ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n      request.setRequestHeader('Prefer', 'return=representation');\n    }\n\n    request.setRequestHeader('Accept', this.options.accept);\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaName = '@odata.context';\n\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaName]) {\n      var dataUrl = data[metaName].split('/$metadata#');\n      this.rootUrl = dataUrl[0];\n      this.resourceTableName = dataUrl[1];\n    }\n\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n\n    var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n\n    var count = null;\n    var dataCount = '@odata.count';\n\n    if (query && query.isCountRequired) {\n      if (dataCount in data) {\n        count = data[dataCount];\n      }\n    }\n\n    data = !isNullOrUndefined(data.value) ? data.value : data;\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: count,\n      aggregates: args.aggregates\n    };\n  };\n\n  return ODataV4Adaptor;\n}(ODataAdaptor);\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\n\n\nvar WebApiAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(WebApiAdaptor, _super);\n\n  function WebApiAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WebApiAdaptor.prototype.getModuleName = function () {\n    return 'WebApiAdaptor';\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.url,\n      data: JSON.stringify(data)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {number} value\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    return {\n      type: 'DELETE',\n      url: dm.dataSource.url + '/' + value,\n      data: JSON.stringify(value)\n    };\n  };\n  /**\n   * Prepare and return request body which is used to update record.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n\n\n  WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    return {\n      type: 'PUT',\n      url: dm.dataSource.url,\n      data: JSON.stringify(value)\n    };\n  };\n\n  WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var _this = this;\n\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var req = [];\n\n    var _loop_1 = function (i, x) {\n      changes.addedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': 'POST ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //insertion\n\n\n    for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n      _loop_1(i, x);\n    }\n\n    var _loop_2 = function (i, x) {\n      changes.changedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': _this.options.updateType + ' ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //updation \n\n\n    for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n      _loop_2(i, x);\n    }\n\n    var _loop_3 = function (i, x) {\n      changes.deletedRecords.forEach(function (j, d) {\n        var state = {\n          'mtd': 'DELETE ',\n          'url': function (data, i, key) {\n            var url = DataUtil.getObject(key, data[i]);\n\n            if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n              return '/' + url;\n            } else if (url instanceof Date) {\n              var datTime = data[i][key];\n              return '/' + datTime.toJSON();\n            } else {\n              return \"/'\" + url + \"'\";\n            }\n          },\n          'data': function (data, i) {\n            return '';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    }; //deletion\n\n\n    for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n      _loop_3(i, x);\n    }\n\n    req.push('--' + initialGuid + '--', '');\n    return {\n      type: 'POST',\n      url: url,\n      contentType: 'multipart/mixed; boundary=' + initialGuid,\n      data: req.join('\\r\\n')\n    };\n  };\n  /**\n   * Method will trigger before send the request to server side.\n   * Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings\n   * @returns void\n   */\n\n\n  WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n  };\n  /**\n   * Returns the data from the query processing.\n   * @param  {DataResult} data\n   * @param  {DataOptions} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   * @returns aggregateResult\n   */\n\n\n  WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var count = null;\n    var args = {};\n\n    if (request && request.type.toLowerCase() !== 'post') {\n      var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n      var version = versionCheck && parseInt(versionCheck, 10) || 2;\n\n      if (query && query.isCountRequired) {\n        if (!DataUtil.isNull(data.Count)) {\n          count = data.Count;\n        }\n      }\n\n      if (version < 3 && data.Items) {\n        data = data.Items;\n      }\n\n      args.count = count;\n      args.result = data;\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n\n    args.result = args.result || data;\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n\n  return WebApiAdaptor;\n}(ODataAdaptor);\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\n\n\nvar WebMethodAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(WebMethodAdaptor, _super);\n\n  function WebMethodAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Prepare the request body based on the query.\n   * The query information can be accessed at the WebMethod using variable named `value`.\n   * @param  {DataManager} dm\n   * @param  {Query} query\n   * @param  {Object[]} hierarchyFilters?\n   * @returns application\n   */\n\n\n  WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n    var getData = 'data';\n    var data = DataUtil.parse.parseJson(obj[getData]);\n    var result = {};\n    var value = 'value';\n\n    if (data.param) {\n      for (var i = 0; i < data.param.length; i++) {\n        var param = data.param[i];\n        var key = Object.keys(param)[0];\n        result[key] = param[key];\n      }\n    }\n\n    result[value] = data;\n    var pvtData = 'pvtData';\n    var url = 'url';\n    return {\n      data: JSON.stringify(result),\n      url: obj[url],\n      pvtData: obj[pvtData],\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8'\n    };\n  };\n\n  return WebMethodAdaptor;\n}(UrlAdaptor);\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\n\n\nvar RemoteSaveAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(RemoteSaveAdaptor, _super);\n  /**\n   * @hidden\n   */\n\n\n  function RemoteSaveAdaptor() {\n    var _this = _super.call(this) || this;\n\n    setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n    return _this;\n  }\n\n  RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    this.pvt.position = position;\n    this.updateType = 'add';\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n    _super.prototype.remove.call(this, dm, keyField, val);\n\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: val,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n    this.updateType = 'update';\n    this.updateKey = keyField;\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: val,\n        action: 'update',\n        keyColumn: keyField,\n        key: val[keyField],\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n    var i;\n    var newData = request ? JSON.parse(request.data) : data;\n    data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n\n    if (this.updateType === 'add') {\n      _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n    }\n\n    if (this.updateType === 'update') {\n      _super.prototype.update.call(this, ds, this.updateKey, data);\n    }\n\n    this.updateType = undefined;\n\n    if (data.added) {\n      for (i = 0; i < data.added.length; i++) {\n        _super.prototype.insert.call(this, ds, data.added[i]);\n      }\n    }\n\n    if (data.changed) {\n      for (i = 0; i < data.changed.length; i++) {\n        _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n      }\n    }\n\n    if (data.deleted) {\n      for (i = 0; i < data.deleted.length; i++) {\n        _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n      }\n    }\n\n    return data;\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * Also perform the changes in the locally cached data to sync with the remote data.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e.url,\n        key: e.key\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n\n  RemoteSaveAdaptor.prototype.addParams = function (options) {\n    var urlParams = new UrlAdaptor();\n    urlParams.addParams(options);\n  };\n\n  return RemoteSaveAdaptor;\n}(JsonAdaptor);\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\n\n\nvar CustomDataAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(CustomDataAdaptor, _super);\n\n  function CustomDataAdaptor(props) {\n    var _this = _super.call(this) || this; // options replaced the default adaptor options\n\n\n    _this.options = extend({}, _this.options, {\n      getData: new Function(),\n      addRecord: new Function(),\n      updateRecord: new Function(),\n      deleteRecord: new Function(),\n      batchUpdate: new Function()\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n\n  CustomDataAdaptor.prototype.getModuleName = function () {\n    return 'CustomDataAdaptor';\n  };\n\n  return CustomDataAdaptor;\n}(UrlAdaptor);\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\n\n\nvar GraphQLAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(GraphQLAdaptor, _super);\n\n  function GraphQLAdaptor(options) {\n    var _this = _super.call(this) || this;\n\n    _this.opt = options;\n    _this.schema = _this.opt.response;\n    _this.query = _this.opt.query;\n    _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () {};\n\n    _this.getQuery = function () {\n      return _this.query;\n    };\n\n    return _this;\n  }\n\n  GraphQLAdaptor.prototype.getModuleName = function () {\n    return 'GraphQLAdaptor';\n  };\n  /**\n   * Process the JSON data based on the provided queries.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   */\n\n\n  GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n    var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n\n    var dm = JSON.parse(urlQuery.data); // constructing GraphQL parameters\n\n    var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where', 'search', 'requiresCounts', 'aggregates', 'params'];\n    var temp = {};\n    var str = 'searchwhereparams';\n    keys.filter(function (e) {\n      temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n    });\n    var vars = this.getVariables() || {};\n    vars['datamanager'] = temp;\n    var data = JSON.stringify({\n      query: this.getQuery(),\n      variables: vars\n    });\n    urlQuery.data = data;\n    return urlQuery;\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Object} request?\n   * @returns DataResult\n   */\n\n\n  GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n    var res = resData;\n    var count;\n    var aggregates;\n    var result = getValue(this.schema.result, res.data);\n\n    if (this.schema.count) {\n      count = getValue(this.schema.count, res.data);\n    }\n\n    if (this.schema.aggregates) {\n      aggregates = getValue(this.schema.aggregates, res.data);\n      aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n    }\n\n    var pvt = request.pvtData || {};\n    var args = {\n      result: result,\n      aggregates: aggregates\n    };\n    var data = args;\n\n    if (pvt && pvt.groups && pvt.groups.length) {\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n\n    return !isNullOrUndefined(count) ? {\n      result: args.result,\n      count: count,\n      aggregates: aggregates\n    } : args.result;\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.insert = function () {\n    var inserted = _super.prototype.insert.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'insert');\n  };\n  /**\n   * Prepare and returns request body which is used to update a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.update = function () {\n    var inserted = _super.prototype.update.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'update');\n  };\n  /**\n   * Prepare and returns request body which is used to remove a new record in the table.\n   */\n\n\n  GraphQLAdaptor.prototype.remove = function () {\n    var inserted = _super.prototype.remove.apply(this, arguments);\n\n    return this.generateCrudData(inserted, 'remove');\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {Object} e\n   * @param  {Query} query\n   * @param  {Object} original\n   */\n\n\n  GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var batch = _super.prototype.batchRequest.apply(this, arguments);\n\n    var bData = JSON.parse(batch.data);\n    bData.key = e.key;\n    batch.data = JSON.stringify(bData);\n    return this.generateCrudData(batch, 'batch');\n  };\n\n  GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n    var parsed = JSON.parse(crudData.data);\n    crudData.data = JSON.stringify({\n      query: this.opt.getMutation(action),\n      variables: parsed\n    });\n    return crudData;\n  };\n\n  return GraphQLAdaptor;\n}(UrlAdaptor);\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\n\n\nvar CacheAdaptor =\n/** @__PURE__ @class */\nfunction (_super) {\n  __extends(CacheAdaptor, _super);\n  /**\n   * Constructor for CacheAdaptor class.\n   * @param  {CacheAdaptor} adaptor?\n   * @param  {number} timeStamp?\n   * @param  {number} pageSize?\n   * @hidden\n   */\n\n\n  function CacheAdaptor(adaptor, timeStamp, pageSize) {\n    var _this = _super.call(this) || this;\n\n    _this.isCrudAction = false;\n    _this.isInsertAction = false;\n\n    if (!isNullOrUndefined(adaptor)) {\n      _this.cacheAdaptor = adaptor;\n    }\n\n    _this.pageSize = pageSize;\n    _this.guidId = DataUtil.getGuid('cacheAdaptor');\n    var obj = {\n      keys: [],\n      results: []\n    };\n    window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n    var guid = _this.guidId;\n\n    if (!isNullOrUndefined(timeStamp)) {\n      setInterval(function () {\n        var data;\n        data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n        var forDel = [];\n\n        for (var i = 0; i < data.results.length; i++) {\n          var currentTime = +new Date();\n          var requestTime = +new Date(data.results[i].timeStamp);\n          data.results[i].timeStamp = currentTime - requestTime;\n\n          if (currentTime - requestTime > timeStamp) {\n            forDel.push(i);\n          }\n        }\n\n        for (var i = 0; i < forDel.length; i++) {\n          data.results.splice(forDel[i], 1);\n          data.keys.splice(forDel[i], 1);\n        }\n\n        window.localStorage.removeItem(guid);\n        window.localStorage.setItem(guid, JSON.stringify(data));\n      }, timeStamp);\n    }\n\n    return _this;\n  }\n  /**\n   * It will generate the key based on the URL when we send a request to server.\n   * @param  {string} url\n   * @param  {Query} query?\n   * @hidden\n   */\n\n\n  CacheAdaptor.prototype.generateKey = function (url, query) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var key = url;\n    var page = 'onPage';\n\n    if (page in singles) {\n      key += singles[page].pageIndex;\n    }\n\n    queries.sorts.forEach(function (obj) {\n      key += obj.e.direction + obj.e.fieldName;\n    });\n    queries.groups.forEach(function (obj) {\n      key += obj.e.fieldName;\n    });\n    queries.searches.forEach(function (obj) {\n      key += obj.e.searchKey;\n    });\n\n    for (var filter = 0; filter < queries.filters.length; filter++) {\n      var currentFilter = queries.filters[filter];\n\n      if (currentFilter.e.isComplex) {\n        var newQuery = query.clone();\n        newQuery.queries = [];\n\n        for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n          newQuery.queries.push({\n            fn: 'onWhere',\n            e: currentFilter.e.predicates[i],\n            filter: query.queries.filter\n          });\n        }\n\n        key += currentFilter.e.condition + this.generateKey(url, newQuery);\n      } else {\n        key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n      }\n    }\n\n    return key;\n  };\n  /**\n   * Process the query to generate request body.\n   * If the data is already cached, it will return the cached data.\n   * @param  {DataManager} dm\n   * @param  {Query} query?\n   * @param  {Object[]} hierarchyFilters?\n   */\n\n\n  CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var key = this.generateKey(dm.dataSource.url, query);\n    var cachedItems;\n    cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n\n    if (data != null && !this.isCrudAction && !this.isInsertAction) {\n      return data;\n    }\n\n    this.isCrudAction = null;\n    this.isInsertAction = null;\n    return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n  };\n  /**\n   * Returns the data from the query processing.\n   * It will also cache the data for later usage.\n   * @param  {DataResult} data\n   * @param  {DataManager} ds?\n   * @param  {Query} query?\n   * @param  {XMLHttpRequest} xhr?\n   * @param  {Ajax} request?\n   * @param  {CrudOptions} changes?\n   */\n\n\n  CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (this.isInsertAction || request && this.cacheAdaptor.options.batch && DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post') {\n      return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n    }\n\n    data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n    var obj = {};\n    obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var index = obj.keys.indexOf(key);\n\n    if (index !== -1) {\n      obj.results.splice(index, 1);\n      obj.keys.splice(index, 1);\n    }\n\n    obj.results[obj.keys.push(key) - 1] = {\n      keys: key,\n      result: data.result,\n      timeStamp: new Date(),\n      count: data.count\n    };\n\n    while (obj.results.length > this.pageSize) {\n      obj.results.splice(0, 1);\n      obj.keys.splice(0, 1);\n    }\n\n    window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n    return data;\n  };\n  /**\n   * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n   * @param  {DataManager} dm\n   * @param  {XMLHttpRequest} request\n   * @param  {Ajax} settings?\n   */\n\n\n  CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n    }\n\n    if (!dm.dataSource.crossDomain) {\n      request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n    }\n  };\n  /**\n   * Updates existing record and saves the changes to the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName\n   */\n\n\n  CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.update(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare and returns request body which is used to insert a new record in the table.\n   * @param  {DataManager} dm\n   * @param  {Object} data\n   * @param  {string} tableName?\n   */\n\n\n  CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n    this.isInsertAction = true;\n    return this.cacheAdaptor.insert(dm, data, tableName);\n  };\n  /**\n   * Prepare and return request body which is used to remove record from the table.\n   * @param  {DataManager} dm\n   * @param  {string} keyField\n   * @param  {Object} value\n   * @param  {string} tableName?\n   */\n\n\n  CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n  };\n  /**\n   * Prepare the request body based on the newly added, removed and updated records.\n   * The result is used by the batch request.\n   * @param  {DataManager} dm\n   * @param  {CrudOptions} changes\n   * @param  {RemoteArgs} e\n   */\n\n\n  CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    return this.cacheAdaptor.batchRequest(dm, changes, e);\n  };\n\n  return CacheAdaptor;\n}(UrlAdaptor);\n/**\n * DataManager is used to manage and manipulate relational data.\n */\n\n\nvar DataManager =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Constructor for DataManager class\n   * @param  {DataOptions|JSON[]} dataSource?\n   * @param  {Query} query?\n   * @param  {AdaptorOptions|string} adaptor?\n   * @hidden\n   */\n  function DataManager(dataSource, query, adaptor) {\n    var _this = this;\n    /** @hidden */\n\n\n    this.dateParse = true;\n    /** @hidden */\n\n    this.timeZoneHandling = true;\n    this.requests = [];\n\n    if (!dataSource && !this.dataSource) {\n      dataSource = [];\n    }\n\n    adaptor = adaptor || dataSource.adaptor;\n\n    if (dataSource && dataSource.timeZoneHandling === false) {\n      this.timeZoneHandling = dataSource.timeZoneHandling;\n    }\n\n    var data;\n\n    if (dataSource instanceof Array) {\n      data = {\n        json: dataSource,\n        offline: true\n      };\n    } else if (typeof dataSource === 'object') {\n      if (!dataSource.json) {\n        dataSource.json = [];\n      }\n\n      data = {\n        url: dataSource.url,\n        insertUrl: dataSource.insertUrl,\n        removeUrl: dataSource.removeUrl,\n        updateUrl: dataSource.updateUrl,\n        crudUrl: dataSource.crudUrl,\n        batchUrl: dataSource.batchUrl,\n        json: dataSource.json,\n        headers: dataSource.headers,\n        accept: dataSource.accept,\n        data: dataSource.data,\n        timeTillExpiration: dataSource.timeTillExpiration,\n        cachingPageSize: dataSource.cachingPageSize,\n        enableCaching: dataSource.enableCaching,\n        requestType: dataSource.requestType,\n        key: dataSource.key,\n        crossDomain: dataSource.crossDomain,\n        jsonp: dataSource.jsonp,\n        dataType: dataSource.dataType,\n        offline: dataSource.offline !== undefined ? dataSource.offline : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ? false : dataSource.url ? false : true,\n        requiresFormat: dataSource.requiresFormat\n      };\n    } else {\n      DataUtil.throwError('DataManager: Invalid arguments');\n    }\n\n    if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n      data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n    }\n\n    if (data.dataType === undefined) {\n      data.dataType = 'json';\n    }\n\n    this.dataSource = data;\n    this.defaultQuery = query;\n\n    if (data.url && data.offline && !data.json.length) {\n      this.isDataAvailable = false;\n      this.adaptor = adaptor || new ODataAdaptor();\n      this.dataSource.offline = false;\n      this.ready = this.executeQuery(query || new Query());\n      this.ready.then(function (e) {\n        _this.dataSource.offline = true;\n        _this.isDataAvailable = true;\n        data.json = e.result;\n        _this.adaptor = new JsonAdaptor();\n      });\n    } else {\n      this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n    }\n\n    if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n      data.jsonp = 'callback';\n    }\n\n    this.adaptor = adaptor || this.adaptor;\n\n    if (data.enableCaching) {\n      this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n    }\n\n    return this;\n  }\n  /**\n   * Overrides DataManager's default query with given query.\n   * @param  {Query} query - Defines the new default query.\n   */\n\n\n  DataManager.prototype.setDefaultQuery = function (query) {\n    this.defaultQuery = query;\n    return this;\n  };\n  /**\n   * Executes the given query with local data source.\n   * @param  {Query} query - Defines the query to retrieve data.\n   */\n\n\n  DataManager.prototype.executeLocal = function (query) {\n    if (!this.defaultQuery && !(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n    }\n\n    if (!this.dataSource.json) {\n      DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n    }\n\n    query = query || this.defaultQuery;\n    var result = this.adaptor.processQuery(this, query);\n\n    if (query.subQuery) {\n      var from = query.subQuery.fromTable;\n      var lookup = query.subQuery.lookups;\n      var res = query.isCountRequired ? result.result : result;\n\n      if (lookup && lookup instanceof Array) {\n        DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n      }\n\n      for (var j = 0; j < res.length; j++) {\n        if (res[j][from] instanceof Array) {\n          res[j] = extend({}, {}, res[j]);\n          res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n        }\n      }\n    }\n\n    return this.adaptor.processResponse(result, this, query);\n  };\n  /**\n   * Executes the given query with either local or remote data source.\n   * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n   * @param  {Query|Function} query - Defines the query to retrieve data.\n   * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n   * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n   * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n   */\n\n\n  DataManager.prototype.executeQuery = function (query, done, fail, always) {\n    var _this = this;\n\n    var makeRequest = 'makeRequest';\n\n    if (typeof query === 'function') {\n      always = fail;\n      fail = done;\n      done = query;\n      query = null;\n    }\n\n    if (!query) {\n      query = this.defaultQuery;\n    }\n\n    if (!(query instanceof Query)) {\n      DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n    }\n\n    var deffered = new Deferred();\n    var args = {\n      query: query\n    };\n\n    if (!this.dataSource.offline && this.dataSource.url !== undefined && this.dataSource.url !== '' || !isNullOrUndefined(this.adaptor[makeRequest]) || this.isCustomDataAdaptor(this.adaptor)) {\n      var result = this.adaptor.processQuery(this, query);\n\n      if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n        this.adaptor[makeRequest](result, deffered, args, query);\n      } else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n        this.requests = [];\n        this.makeRequest(result, deffered, args, query);\n      } else {\n        args = DataManager.getDeferedArgs(query, result, args);\n        deffered.resolve(args);\n      }\n    } else {\n      DataManager.nextTick(function () {\n        var res = _this.executeLocal(query);\n\n        args = DataManager.getDeferedArgs(query, res, args);\n        deffered.resolve(args);\n      });\n    }\n\n    if (done || fail) {\n      deffered.promise.then(done, fail);\n    }\n\n    if (always) {\n      deffered.promise.then(always, always);\n    }\n\n    return deffered.promise;\n  };\n\n  DataManager.getDeferedArgs = function (query, result, args) {\n    if (query.isCountRequired) {\n      args.result = result.result;\n      args.count = result.count;\n      args.aggregates = result.aggregates;\n    } else {\n      args.result = result;\n    }\n\n    return args;\n  };\n\n  DataManager.nextTick = function (fn) {\n    (window.setImmediate || window.setTimeout)(fn, 0);\n  };\n\n  DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n    return extend({}, {\n      type: 'GET',\n      dataType: this.dataSource.dataType,\n      crossDomain: this.dataSource.crossDomain,\n      jsonp: this.dataSource.jsonp,\n      cache: true,\n      processData: false,\n      onSuccess: fnSuccess,\n      onFailure: fnFail\n    }, url);\n  }; // tslint:disable-next-line:max-func-body-length\n\n\n  DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n    var _this = this;\n\n    var isSelector = !!query.subQuerySelector;\n\n    var fnFail = function (e) {\n      args.error = e;\n      deffered.reject(args);\n    };\n\n    var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n      args.xhr = xhr;\n      args.count = count ? parseInt(count.toString(), 10) : 0;\n      args.result = data;\n      args.request = request;\n      args.aggregates = aggregates;\n      args.actual = actual;\n      args.virtualSelectRecords = virtualSelectRecords;\n      deffered.resolve(args);\n    };\n\n    var fnQueryChild = function (data, selector) {\n      var subDeffer = new Deferred();\n      var childArgs = {\n        parent: args\n      };\n      query.subQuery.isChild = true;\n\n      var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n\n      var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n\n      if (!isSelector) {\n        subDeffer.then(function (subData) {\n          if (data) {\n            DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n            process(data, subData.count, subData.xhr);\n          }\n        }, fnFail);\n      }\n\n      return childReq;\n    };\n\n    var fnSuccess = function (data, request) {\n      if (_this.isGraphQLAdaptor(_this.adaptor)) {\n        if (!isNullOrUndefined(data['errors'])) {\n          return fnFail(data['errors'], request);\n        }\n      }\n\n      if (_this.isCustomDataAdaptor(_this.adaptor)) {\n        request = extend({}, _this.ajaxReqOption, request);\n      }\n\n      if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n        data = DataUtil.parse.parseJson(data);\n      }\n\n      var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n\n      var count = 0;\n      var aggregates = null;\n      var virtualSelectRecords = 'virtualSelectRecords';\n      var virtualRecords = data[virtualSelectRecords];\n\n      if (query.isCountRequired) {\n        count = result.count;\n        aggregates = result.aggregates;\n        result = result.result;\n      }\n\n      if (!query.subQuery) {\n        process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n        return;\n      }\n\n      if (!isSelector) {\n        fnQueryChild(result, request);\n      }\n    };\n\n    var req = this.extendRequest(url, fnSuccess, fnFail);\n\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var ajax_1 = new Ajax(req);\n\n      ajax_1.beforeSend = function () {\n        _this.beforeSend(ajax_1.httpRequest, ajax_1);\n      };\n\n      req = ajax_1.send();\n      req.catch(function (e) {\n        return true;\n      }); // to handle failure remote requests.        \n\n      this.requests.push(ajax_1);\n    } else {\n      this.ajaxReqOption = req;\n      var request = req;\n      this.adaptor.options.getData({\n        data: request.data,\n        onSuccess: request.onSuccess,\n        onFailure: request.onFailure\n      });\n    }\n\n    if (isSelector) {\n      var promise = void 0;\n      var res = query.subQuerySelector.call(this, {\n        query: query.subQuery,\n        parent: query\n      });\n\n      if (res && res.length) {\n        promise = Promise.all([req, fnQueryChild(null, res)]);\n        promise.then(function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          var result = args[0];\n\n          var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n\n          var count = 0;\n\n          if (query.isCountRequired) {\n            count = pResult.count;\n            pResult = pResult.result;\n          }\n\n          var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n\n          count = 0;\n\n          if (query.subQuery.isCountRequired) {\n            count = cResult.count;\n            cResult = cResult.result;\n          }\n\n          DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n          isSelector = false;\n          process(pResult, count, _this.requests[0].httpRequest);\n        });\n      } else {\n        isSelector = false;\n      }\n    }\n\n    return req;\n  };\n\n  DataManager.prototype.beforeSend = function (request, settings) {\n    this.adaptor.beforeSend(this, request, settings);\n    var headers = this.dataSource.headers;\n    var props;\n\n    for (var i = 0; headers && i < headers.length; i++) {\n      props = [];\n      var keys = Object.keys(headers[i]);\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n        props.push(prop);\n        request.setRequestHeader(prop, headers[i][prop]);\n      }\n    }\n  };\n  /**\n   * Save bulk changes to the given table name.\n   * User can add a new record, edit an existing record, and delete a record at the same time.\n   * If the datasource from remote, then updated in a single post.\n   * @param  {Object} changes - Defines the CrudOptions.\n   * @param  {string} key - Defines the column field.\n   * @param  {string|Query} tableName - Defines the table name.\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n    var _this = this;\n\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var args = {\n      url: tableName,\n      key: key || this.dataSource.key\n    };\n    var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return req;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](req);\n    } else if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var deff_1 = new Deferred();\n      var ajax_2 = new Ajax(req);\n\n      ajax_2.beforeSend = function () {\n        _this.beforeSend(ajax_2.httpRequest, ajax_2);\n      };\n\n      ajax_2.onSuccess = function (data, request) {\n        if (_this.isGraphQLAdaptor(_this.adaptor)) {\n          if (!isNullOrUndefined(data['errors'])) {\n            ajax_2.onFailure(JSON.stringify(data['errors']));\n          }\n        }\n\n        deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n      };\n\n      ajax_2.onFailure = function (e) {\n        deff_1.reject([{\n          error: e\n        }]);\n      };\n\n      ajax_2.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.        \n\n      return deff_1.promise;\n    } else {\n      return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n    }\n  };\n  /**\n   * Inserts new record in the given table.\n   * @param  {Object} data - Defines the data to insert.\n   * @param  {string|Query} tableName - Defines the table name.\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.insert = function (data, tableName, query, position) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var req = this.adaptor.insert(this, data, tableName, query, position);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return req;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](req);\n    } else {\n      return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n    }\n  };\n  /**\n   * Removes data from the table with the given key.\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.remove = function (keyField, value, tableName, query) {\n    if (typeof value === 'object') {\n      value = DataUtil.getObject(keyField, value);\n    }\n\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var res = this.adaptor.remove(this, keyField, value, tableName, query);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return res;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](res);\n    } else {\n      var remove = this.adaptor.options.deleteRecord;\n      return this.doAjaxRequest(res, remove);\n    }\n  };\n  /**\n   * Updates existing record in the given table.\n   * @param  {string} keyField - Defines the column field.\n   * @param  {Object} value - Defines the value to find the data in the specified column.\n   * @param  {string|Query} tableName - Defines the table name\n   * @param  {Query} query - Sets default query for the DataManager.\n   */\n\n\n  DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n    if (tableName instanceof Query) {\n      query = tableName;\n      tableName = null;\n    }\n\n    var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n    var doAjaxRequest = 'doAjaxRequest';\n\n    if (this.dataSource.offline) {\n      return res;\n    }\n\n    if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n      return this.adaptor[doAjaxRequest](res);\n    } else {\n      var update = this.adaptor.options.updateRecord;\n      return this.doAjaxRequest(res, update);\n    }\n  };\n\n  DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'CustomDataAdaptor';\n  };\n\n  DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n    return this.adaptor.getModuleName && this.adaptor.getModuleName() === 'GraphQLAdaptor';\n  };\n\n  DataManager.prototype.successFunc = function (record, request) {\n    if (this.isGraphQLAdaptor(this.adaptor)) {\n      var data = JSON.parse(record);\n\n      if (!isNullOrUndefined(data['errors'])) {\n        this.failureFunc(JSON.stringify(data['errors']));\n      }\n    }\n\n    if (this.isCustomDataAdaptor(this.adaptor)) {\n      request = extend({}, this.ajaxReqOption, request);\n    }\n\n    try {\n      DataUtil.parse.parseJson(record);\n    } catch (e) {\n      record = [];\n    }\n\n    record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n    this.ajaxDeffered.resolve(record);\n  };\n\n  DataManager.prototype.failureFunc = function (e) {\n    this.ajaxDeffered.reject([{\n      error: e\n    }]);\n  };\n\n  DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n    var _this = this;\n\n    res = extend({}, {\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8',\n      processData: false\n    }, res);\n    this.ajaxDeffered = new Deferred();\n\n    if (!this.isCustomDataAdaptor(this.adaptor)) {\n      var ajax_3 = new Ajax(res);\n\n      ajax_3.beforeSend = function () {\n        _this.beforeSend(ajax_3.httpRequest, ajax_3);\n      };\n\n      ajax_3.onSuccess = this.successFunc.bind(this);\n      ajax_3.onFailure = this.failureFunc.bind(this);\n      ajax_3.send().catch(function (e) {\n        return true;\n      }); // to handle the failure requests.\n    } else {\n      this.ajaxReqOption = res;\n      ajaxFunc.call(this, {\n        data: res.data,\n        onSuccess: this.successFunc.bind(this),\n        onFailure: this.failureFunc.bind(this)\n      });\n    }\n\n    return this.ajaxDeffered.promise;\n  };\n\n  return DataManager;\n}();\n/**\n * Deferred is used to handle asynchronous operation.\n */\n\n\nvar Deferred =\n/** @__PURE__ @class */\nfunction () {\n  function Deferred() {\n    var _this = this;\n    /**\n     * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n     */\n\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    /**\n     * Defines the callback function triggers when the Deferred object is resolved.\n     */\n\n    this.then = this.promise.then.bind(this.promise);\n    /**\n     * Defines the callback function triggers when the Deferred object is rejected.\n     */\n\n    this.catch = this.promise.catch.bind(this.promise);\n  }\n\n  return Deferred;\n}();\n/**\n * Data modules\n */\n\n\nexport { DataManager, Deferred, Query, Predicate, Adaptor, JsonAdaptor, UrlAdaptor, ODataAdaptor, ODataV4Adaptor, WebApiAdaptor, WebMethodAdaptor, RemoteSaveAdaptor, CustomDataAdaptor, GraphQLAdaptor, CacheAdaptor, DataUtil }; //# sourceMappingURL=ej2-data.es5.js.map","map":{"version":3,"sources":["/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/node_modules/@syncfusion/ej2-data/dist/es6/ej2-data.es5.js"],"names":["Ajax","extend","getValue","isNullOrUndefined","merge","setValue","Query","from","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","lazyLoad","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","matchCase","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sortByForeignKey","direction","order","sorts","temp","endsWith","replace","fnSort","filterQueries","i","length","j","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","preds","result","consts","GroupGuid","inst","input","substr","startsWith","fnAscending","fnDescending","x","y","undefined","localeCompare","extractFields","obj","newObj","jsonArray","newData","aggregates","level","groupDs","isLazyLoad","jsonData","guid","_loop_1","indx","items","this_1","count","childLevels","grouped","groupedArray","records","_loop_2","val","this_2","getVal","tempObj","_loop_3","aggs","buildHierarchy","source","lookup","pKey","grp","fKeyData","getFieldList","prefix","copyObj","keys","Object","keys_1","prop","nameSpace","splits","split","toString","fromObj","sort","ds","middle","parseInt","left","right","ignoreDiacritics","newValue","map","diacritics","join","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","req","reqParams","isPlainObject","constructor","isCors","xhr","request","window","getGuid","hexs","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","tmp","forEach","data","processData","prepareQuery","sampledata","DataManager","requiresCounts","returnValue","JSON","stringify","_this","parse","parseJson","predicateList","concat","getPredicate","sorted","mainPred","childPred","cpre","_a","serverTimezoneOffset","timeZoneHandling","error","Error","message","stack","sum","isNaN","average","min","max","truecount","falsecount","operatorSymbols","odBiOperator","odUniOperator","odv4UniOperator","equal","actual","expected","notequal","lessthan","greaterthan","lessthanorequal","greaterthanorequal","contains","notnull","isnull","startswith","endswith","processSymbols","jsonText","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","ms","exec","offSet","dateParse","toTimeZone","Date","isUTC","secondsMs","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","isGuid","regex","match","replacer","jsonReplacer","arrayReplacer","keys_3","d","toJSON","date","jsonDateReplacer","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","consts$1","Adaptor","options","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","keyCount","agg","lazyLoadData","lazyLoadGroup","getAggregate","onDemandGroupInfo","onWhere","formGroupResult","onPage","uid","childLevel","aggQuery","batchRequest","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onAggregates","onSearch","onSortBy","fnCompare","onGroup","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","groups","filters","searches","getFiltersFrom","getModuleName","getRequestQuery","pvtData","contentType","convertToQueryString","request1","param","selects","getResponseHeader","handleTimeZone","requests","action","isExpand","isArray","formRemoteGroupedData","getAggregateResult","childLvl","lvl","getGroupedRecords","hasRecords","childGroupedRecords","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","beforeSend","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","isServerGrouping","groupQuery","ODataAdaptor","props","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","requiresCast","getField","encodeURIComponent","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","version","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","dateTime","generateBodyContent","org","change","o","method","cIdx","jsonObj","substring","exVal","changeGuid","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","sel","exp","close_1","combineVal","expandQueryIndex","idx","ex","onDistinct","distinctFields","metaName","dataUrl","dataCount","WebApiAdaptor","location","host","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","urlParams","CustomDataAdaptor","Function","addRecord","updateRecord","deleteRecord","batchUpdate","GraphQLAdaptor","opt","schema","response","getVariables","getQuery","datamanager","urlQuery","str","vars","variables","resData","inserted","generateCrudData","bData","crudData","parsed","getMutation","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","makeRequest","deffered","Deferred","isCustomDataAdaptor","getDeferedArgs","resolve","nextTick","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","isGraphQLAdaptor","ajaxReqOption","httpRequest","virtualRecords","ajax_1","send","catch","Promise","all","pResult","cResult","saveChanges","doAjaxRequest","deff_1","ajax_2","successFunc","failureFunc","ajaxDeffered","ajaxFunc","ajax_3","bind"],"mappings":"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","sourcesContent":["import { Ajax, extend, getValue, isNullOrUndefined, merge, setValue } from '@syncfusion/ej2-base';\n\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @__PURE__ @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        this.lazyLoad = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        cloned.lazyLoad = this.lazyLoad.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent, matchCase) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent, matchCase);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        if (!operator || operator === 'none') {\n            operator = 'contains';\n        }\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        return this.sortByForeignKey(fieldName, comparer, isFromGroup);\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     * @param  {string} direction - Defines the sort direction .\n     */\n    Query.prototype.sortByForeignKey = function (fieldName, comparer, isFromGroup, direction) {\n        var order = !isNullOrUndefined(direction) ? direction : 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @__PURE__ @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @param  {boolean} matchCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent, matchCase) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.matchCase = matchCase;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            this.matchCase = field.matchCase;\n            this.ignoreCase = field.ignoreCase;\n            this.ignoreAccent = field.ignoreAccent;\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates,\n            matchCase: this.matchCase\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\n\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @__PURE__ @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice && input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            if (!isLazyLoad || (isLazyLoad && aggregates.length)) {\n                grouped[val].items.push(jsonData[i]);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        if (isLazyLoad && groupedArray.length && aggregates.length) {\n            for (var i = 0; i < groupedArray.length; i++) {\n                groupedArray[i].items = [];\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = typeof (json[index]) === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Process the given records based on the datamanager string.\n     * @param  {string} datamanager\n     * @param  {Object[]} records\n     */\n    DataUtil.processData = function (dm, records) {\n        var query = this.prepareQuery(dm);\n        var sampledata = new DataManager(records);\n        if (dm.requiresCounts) {\n            query.requiresCount();\n        }\n        var result = sampledata.executeLocal(query);\n        var returnValue = {\n            result: dm.requiresCounts ? result.result : result,\n            count: result.count,\n            aggregates: JSON.stringify(result.aggregates)\n        };\n        return dm.requiresCounts ? returnValue : result;\n    };\n    DataUtil.prepareQuery = function (dm) {\n        var _this = this;\n        var query = new Query();\n        if (dm.select) {\n            query.select(dm.select);\n        }\n        if (dm.where) {\n            var where = DataUtil.parse.parseJson(dm.where);\n            where.filter(function (pred) {\n                if (isNullOrUndefined(pred.condition)) {\n                    query.where(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent);\n                }\n                else {\n                    var predicateList = [];\n                    if (pred.field) {\n                        predicateList.push(new Predicate(pred.field, pred.operator, pred.value, pred.ignoreCase, pred.ignoreAccent));\n                    }\n                    else {\n                        predicateList = predicateList.concat(_this.getPredicate(pred.predicates));\n                    }\n                    if (pred.condition == 'or') {\n                        query.where(Predicate.or(predicateList));\n                    }\n                    else if (pred.condition == 'and') {\n                        query.where(Predicate.and(predicateList));\n                    }\n                }\n            });\n        }\n        if (dm.search) {\n            var search = DataUtil.parse.parseJson(dm.search);\n            search.filter(function (e) { return query.search(e.key, e.fields, e['operator'], e['ignoreCase'], e['ignoreAccent']); });\n        }\n        if (dm.aggregates) {\n            dm.aggregates.filter(function (e) { return query.aggregate(e.type, e.field); });\n        }\n        if (dm.sorted) {\n            dm.sorted.filter(function (e) { return query.sortBy(e.name, e.direction); });\n        }\n        if (dm.skip) {\n            query.skip(dm.skip);\n        }\n        if (dm.take) {\n            query.take(dm.take);\n        }\n        if (dm.group) {\n            dm.group.filter(function (grp) { return query.group(grp); });\n        }\n        return query;\n    };\n    DataUtil.getPredicate = function (pred) {\n        var mainPred = [];\n        for (var i = 0; i < pred.length; i++) {\n            var e = pred[i];\n            if (e.field) {\n                mainPred.push(new Predicate(e.field, e.operator, e.value, e.ignoreCase, e.ignoreAccent));\n            }\n            else {\n                var childPred = [];\n                var cpre = this.getPredicate(e.predicates);\n                for (var _i = 0, _a = Object.keys(cpre); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    childPred.push(cpre[prop]);\n                }\n                mainPred.push(e.condition == 'or' ? Predicate.or(childPred) : Predicate.and(childPred));\n            }\n        }\n        return mainPred;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        if (arr[5].indexOf('.') > -1) {\n                            var secondsMs = arr[5].split('.');\n                            arr[5] = secondsMs[0];\n                            arr[6] = secondsMs[1];\n                        }\n                        else {\n                            arr[6] = '00';\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10), parseInt(arr[6], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar consts$1 = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @__PURE__ @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field = args.group[0].fieldName;\n            result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            if (args.page) {\n                result = this.onPage(result, args.page, args.query);\n            }\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n            if ((this.getModuleName &&\n                this.getModuleName() === 'ODataV4Adaptor') &&\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n                res = \"(\" + res + \")\";\n            }\n            request.filters.push(res);\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query && query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts$1[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = val.replace(/'/g, \"''\");\n            if (predicate.ignoreCase) {\n                val = val.toLowerCase();\n            }\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            if (splits.length == 2) {\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n                    if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n                    }\n                    else {\n                        selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n                    }\n                }\n                else {\n                    selected[splits[0]].push('$select=' + splits[1]);\n                }\n            }\n            else {\n                var sel = '$select=' + splits[splits.length - 1];\n                var exp = '';\n                var close_1 = '';\n                for (var i = 1; i < splits.length - 1; i++) {\n                    exp = exp + '$expand=' + splits[i] + '(';\n                    close_1 = close_1 + ')';\n                }\n                var combineVal = exp + sel + close_1;\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 &&\n                    _this.expandQueryIndex(selected[splits[0]], true)) {\n                    var idx = _this.expandQueryIndex(selected[splits[0]]);\n                    selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n                }\n                else {\n                    selected[splits[0]].push(combineVal);\n                }\n            }\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n        for (var i = 0; i < query.length; i++) {\n            if (query[i].indexOf('$expand') !== -1) {\n                return isExpand ? true : i;\n            }\n        }\n        return isExpand ? false : 0;\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        var newData = request ? JSON.parse(request.data) : data;\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\nvar CustomDataAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(CustomDataAdaptor, _super);\n    function CustomDataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            getData: new Function(),\n            addRecord: new Function(),\n            updateRecord: new Function(),\n            deleteRecord: new Function(),\n            batchUpdate: new Function()\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    CustomDataAdaptor.prototype.getModuleName = function () {\n        return 'CustomDataAdaptor';\n    };\n    return CustomDataAdaptor;\n}(UrlAdaptor));\n/**\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\n * @hidden\n */\nvar GraphQLAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(GraphQLAdaptor, _super);\n    function GraphQLAdaptor(options) {\n        var _this = _super.call(this) || this;\n        _this.opt = options;\n        _this.schema = _this.opt.response;\n        _this.query = _this.opt.query;\n        _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () { };\n        _this.getQuery = function () { return _this.query; };\n        return _this;\n    }\n    GraphQLAdaptor.prototype.getModuleName = function () {\n        return 'GraphQLAdaptor';\n    };\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     */\n    GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n        var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n        var dm = JSON.parse(urlQuery.data);\n        // constructing GraphQL parameters\n        var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where',\n            'search', 'requiresCounts', 'aggregates', 'params'];\n        var temp = {};\n        var str = 'searchwhereparams';\n        keys.filter(function (e) {\n            temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n        });\n        var vars = this.getVariables() || {};\n        vars['datamanager'] = temp;\n        var data = JSON.stringify({\n            query: this.getQuery(),\n            variables: vars\n        });\n        urlQuery.data = data;\n        return urlQuery;\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @returns DataResult\n     */\n    GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n        var res = resData;\n        var count;\n        var aggregates;\n        var result = getValue(this.schema.result, res.data);\n        if (this.schema.count) {\n            count = getValue(this.schema.count, res.data);\n        }\n        if (this.schema.aggregates) {\n            aggregates = getValue(this.schema.aggregates, res.data);\n            aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n        }\n        var pvt = request.pvtData || {};\n        var args = { result: result, aggregates: aggregates };\n        var data = args;\n        if (pvt && pvt.groups && pvt.groups.length) {\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        return !isNullOrUndefined(count) ? { result: args.result, count: count, aggregates: aggregates } : args.result;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     */\n    GraphQLAdaptor.prototype.insert = function () {\n        var inserted = _super.prototype.insert.apply(this, arguments);\n        return this.generateCrudData(inserted, 'insert');\n    };\n    /**\n     * Prepare and returns request body which is used to update a new record in the table.\n     */\n    GraphQLAdaptor.prototype.update = function () {\n        var inserted = _super.prototype.update.apply(this, arguments);\n        return this.generateCrudData(inserted, 'update');\n    };\n    /**\n     * Prepare and returns request body which is used to remove a new record in the table.\n     */\n    GraphQLAdaptor.prototype.remove = function () {\n        var inserted = _super.prototype.remove.apply(this, arguments);\n        return this.generateCrudData(inserted, 'remove');\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     * @param  {Query} query\n     * @param  {Object} original\n     */\n    GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var batch = _super.prototype.batchRequest.apply(this, arguments);\n        var bData = JSON.parse(batch.data);\n        bData.key = e.key;\n        batch.data = JSON.stringify(bData);\n        return this.generateCrudData(batch, 'batch');\n    };\n    GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n        var parsed = JSON.parse(crudData.data);\n        crudData.data = JSON.stringify({\n            query: this.opt.getMutation(action),\n            variables: parsed\n        });\n        return crudData;\n    };\n    return GraphQLAdaptor;\n}(UrlAdaptor));\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @__PURE__ @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\n\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @__PURE__ @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ?\n                        false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest])) || this.isCustomDataAdaptor(this.adaptor)) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n                this.requests = [];\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                if (!isNullOrUndefined(data['errors'])) {\n                    return fnFail(data['errors'], request);\n                }\n            }\n            if (_this.isCustomDataAdaptor(_this.adaptor)) {\n                request = extend({}, _this.ajaxReqOption, request);\n            }\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            req = ajax_1.send();\n            req.catch(function (e) { return true; }); // to handle failure remote requests.        \n            this.requests.push(ajax_1);\n        }\n        else {\n            this.ajaxReqOption = req;\n            var request = req;\n            this.adaptor.options.getData({\n                data: request.data,\n                onSuccess: request.onSuccess, onFailure: request.onFailure\n            });\n        }\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var deff_1 = new Deferred();\n            var ajax_2 = new Ajax(req);\n            ajax_2.beforeSend = function () {\n                _this.beforeSend(ajax_2.httpRequest, ajax_2);\n            };\n            ajax_2.onSuccess = function (data, request) {\n                if (_this.isGraphQLAdaptor(_this.adaptor)) {\n                    if (!isNullOrUndefined(data['errors'])) {\n                        ajax_2.onFailure(JSON.stringify(data['errors']));\n                    }\n                }\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_2.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_2.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var remove = this.adaptor.options.deleteRecord;\n            return this.doAjaxRequest(res, remove);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var update = this.adaptor.options.updateRecord;\n            return this.doAjaxRequest(res, update);\n        }\n    };\n    DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'CustomDataAdaptor';\n    };\n    DataManager.prototype.isGraphQLAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'GraphQLAdaptor';\n    };\n    DataManager.prototype.successFunc = function (record, request) {\n        if (this.isGraphQLAdaptor(this.adaptor)) {\n            var data = JSON.parse(record);\n            if (!isNullOrUndefined(data['errors'])) {\n                this.failureFunc(JSON.stringify(data['errors']));\n            }\n        }\n        if (this.isCustomDataAdaptor(this.adaptor)) {\n            request = extend({}, this.ajaxReqOption, request);\n        }\n        try {\n            DataUtil.parse.parseJson(record);\n        }\n        catch (e) {\n            record = [];\n        }\n        record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n        this.ajaxDeffered.resolve(record);\n    };\n    \n    DataManager.prototype.failureFunc = function (e) {\n        this.ajaxDeffered.reject([{ error: e }]);\n    };\n    \n    DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n        var _this = this;\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        this.ajaxDeffered = new Deferred();\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_3 = new Ajax(res);\n            ajax_3.beforeSend = function () {\n                _this.beforeSend(ajax_3.httpRequest, ajax_3);\n            };\n            ajax_3.onSuccess = this.successFunc.bind(this);\n            ajax_3.onFailure = this.failureFunc.bind(this);\n            ajax_3.send().catch(function (e) { return true; }); // to handle the failure requests.\n        }\n        else {\n            this.ajaxReqOption = res;\n            ajaxFunc.call(this, {\n                data: res.data, onSuccess: this.successFunc.bind(this),\n                onFailure: this.failureFunc.bind(this)\n            });\n        }\n        return this.ajaxDeffered.promise;\n    };\n    return DataManager;\n}());\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @__PURE__ @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\n\n/**\n * Data modules\n */\n\nexport { DataManager, Deferred, Query, Predicate, Adaptor, JsonAdaptor, UrlAdaptor, ODataAdaptor, ODataV4Adaptor, WebApiAdaptor, WebMethodAdaptor, RemoteSaveAdaptor, CustomDataAdaptor, GraphQLAdaptor, CacheAdaptor, DataUtil };\n//# sourceMappingURL=ej2-data.es5.js.map\n"]},"metadata":{},"sourceType":"module"}