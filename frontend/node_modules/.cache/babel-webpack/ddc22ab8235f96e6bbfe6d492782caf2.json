{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../environments/environment';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../service/opciones-informes/opciones-informes.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/cdk/scrolling\";\nimport * as i9 from \"angular-datatables\";\nconst _c0 = [\"formFileSmRegistroFotos\"];\n\nfunction OpcionesInformesComponent_div_7_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelementStart(4, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function OpcionesInformesComponent_div_7_tr_23_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const op_r5 = restoredCtx.$implicit;\n      const parametro_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onDeleteOpcion(parametro_r3._id, op_r5);\n    });\n    i0.ɵɵelement(5, \"i\", 34);\n    i0.ɵɵtext(6, \" \\u00A0 \");\n    i0.ɵɵelementStart(7, \"strong\");\n    i0.ɵɵtext(8, \"Eliminar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const op_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(op_r5);\n  }\n}\n\nfunction OpcionesInformesComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵelementStart(2, \"div\", 29);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"div\", 30);\n    i0.ɵɵelementStart(5, \"h6\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 31);\n    i0.ɵɵelementStart(8, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function OpcionesInformesComponent_div_7_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const parametro_r3 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.clickOpciones(parametro_r3._id);\n    });\n    i0.ɵɵelement(9, \"i\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function OpcionesInformesComponent_div_7_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const parametro_r3 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onDeleteConfiguracion(parametro_r3._id);\n    });\n    i0.ɵɵelement(11, \"i\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 35);\n    i0.ɵɵelementStart(13, \"cdk-virtual-scroll-viewport\", 36);\n    i0.ɵɵelementStart(14, \"table\", 37);\n    i0.ɵɵelementStart(15, \"thead\");\n    i0.ɵɵelementStart(16, \"tr\");\n    i0.ɵɵelementStart(17, \"th\");\n    i0.ɵɵelementStart(18, \"strong\");\n    i0.ɵɵtext(19, \"Nombre de opci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"th\");\n    i0.ɵɵtext(21, \"Acciones\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"tbody\");\n    i0.ɵɵtemplate(23, OpcionesInformesComponent_div_7_tr_23_Template, 9, 1, \"tr\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const parametro_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", parametro_r3.name, \" \");\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r0.dtOptions)(\"dtTrigger\", ctx_r0.dtTrigger);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", parametro_r3.data);\n  }\n}\n\nfunction OpcionesInformesComponent_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function OpcionesInformesComponent_button_29_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.cancelarEditParametros();\n    });\n    i0.ɵɵtext(1, \" Cancela \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction OpcionesInformesComponent_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelementStart(4, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function OpcionesInformesComponent_tr_34_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const itemPar_r14 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onClickDeleteParametros(itemPar_r14);\n    });\n    i0.ɵɵelement(5, \"i\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemPar_r14 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemPar_r14);\n  }\n}\n\nexport let OpcionesInformesComponent = /*#__PURE__*/(() => {\n  class OpcionesInformesComponent {\n    constructor(_formBuilder, _route, _activatedRoute, _opcionesInformes) {\n      this._formBuilder = _formBuilder;\n      this._route = _route;\n      this._activatedRoute = _activatedRoute;\n      this._opcionesInformes = _opcionesInformes;\n      this.dtOptions = {};\n      this.dtTrigger = new Subject();\n      this.isDtInitialized = false;\n      this.quillModules = {\n        toolbar: [['bold', 'italic', 'underline'], [{\n          align: []\n        }, {\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], ['clean']]\n      };\n      this.isLinear = false;\n      this.ParametrosBtnSave = true;\n      this.ParametrosStatus = false;\n      this.OpcionesInfomes = [];\n      this.dataOpciones = [];\n      this.url = environment.url;\n    }\n\n    ngOnInit() {\n      this.onDtOptions();\n      this.forms();\n      this.onGetOpciones();\n    }\n\n    forms() {\n      this.Parametros = this._formBuilder.group({\n        name: ['', [Validators.required]],\n        data: ['']\n      });\n      this.dataOpcionesForm = this._formBuilder.group({\n        data: ['', [Validators.required]]\n      });\n    }\n\n    onDtOptions() {\n      this.dtOptions = {\n        processing: true,\n        order: [[0, \"desc\"]],\n        language: {\n          emptyTable: \"No hay datos disponibles\",\n          info: \"Mostrando desde _START_ al _END_ de _TOTAL_ elementos\",\n          infoEmpty: \"Mostrando ningún dato\",\n          infoFiltered: \"(filtrado _MAX_ datos totales)\",\n          infoPostFix: \"\",\n          lengthMenu: \"Mostrar _MENU_ elementos\",\n          loadingRecords: \"Cargando...\",\n          processing: \"Procesando...\",\n          search: \"Buscar:\",\n          zeroRecords: \"Sin resultados encontrados\",\n          paginate: {\n            first: \"Primero\",\n            last: \"Último\",\n            next: \"Siguiente\",\n            previous: \"Anterior\"\n          },\n          aria: {\n            sortAscending: \": Activar para ordenar en orden ascendente\",\n            sortDescending: \": Activar para ordenar en orden descendente\"\n          }\n        }\n      };\n    }\n\n    onGetOpciones() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          ruta_id\n        } = params;\n\n        this._opcionesInformes.getOpciones(ruta_id).subscribe(res => {\n          this.OpcionesInfomes = res.body;\n        }, error => {\n          console.log(error);\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n              this.OpcionesInfomes = [];\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onSubmitOpciones() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          ruta_id\n        } = params;\n        let data = {\n          name: this.Parametros.value.name,\n          data: this.dataOpciones,\n          informe: ruta_id\n        };\n\n        this._opcionesInformes.addOpciones(data).subscribe(res => {\n          this.onGetOpciones();\n          this.Parametros.reset();\n          this.dataOpciones = [];\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onClickDeleteParametros(data) {\n      this.dataOpciones.splice(data, 1);\n    }\n\n    cancelarEditParametros() {\n      this.onGetOpciones();\n      this.Parametros.reset();\n      this.ParametrosStatus = false;\n    }\n\n    onSubmitOpcionesInformes() {\n      this.dataOpciones.push(this.Parametros.value.data);\n      this.Parametros.patchValue({\n        data: ''\n      });\n    }\n\n    onDeleteOpcion(id_ruta, opcion) {\n      Swal.fire({\n        title: \"¿Está seguro de eliminar la opción?\",\n        text: \"¡Si no lo está puede cancelar la acción!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        cancelButtonText: 'Cancelar',\n        confirmButtonText: 'Si, eliminar la opción!'\n      }).then(result => {\n        if (result.value) {\n          this._opcionesInformes.deleteOpciones(id_ruta, opcion).subscribe(res => {\n            if (res.status === 200) {\n              Swal.fire({\n                title: '¡La opción se ha eliminado correctamente!',\n                icon: 'success',\n                confirmButtonText: 'Cerrar'\n              });\n              this.onGetOpciones();\n            }\n          }, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar'\n                });\n              }\n\n              if (error.status == 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n                });\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n\n    onDeleteConfiguracion(_id) {\n      Swal.fire({\n        title: \"¿Está seguro de eliminar la configuración?\",\n        text: \"¡Si no lo está puede cancelar la acción!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        cancelButtonText: 'Cancelar',\n        confirmButtonText: 'Si, eliminar la configuración!'\n      }).then(result => {\n        if (result.value) {\n          this._opcionesInformes.deleteConfiguracion(_id).subscribe(res => {\n            if (res.status === 200) {\n              Swal.fire({\n                title: '¡La configuración se ha eliminado correctamente!',\n                icon: 'success',\n                confirmButtonText: 'Cerrar'\n              });\n              this.onGetOpciones();\n            }\n          }, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar'\n                });\n              }\n\n              if (error.status == 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n                });\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        }\n      });\n    }\n\n    clickOpciones(id) {\n      this.idOpcion = id;\n    }\n\n    onSubmitOpcion() {\n      let data = {\n        _id: this.idOpcion,\n        data: this.dataOpcionesForm.value.data\n      };\n\n      this._opcionesInformes.addOpcionesConfig(data).subscribe(res => {\n        this.onGetOpciones();\n        this.dataOpcionesForm.reset();\n      }, error => {\n        console.log(error);\n        var errorMessage = error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status === 404) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'info',\n              title: body.message\n            });\n          } else if (error.status === 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: body.message\n            });\n          } else if (error.status === 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n            });\n          }\n        }\n      });\n    }\n\n  }\n\n  OpcionesInformesComponent.ɵfac = function OpcionesInformesComponent_Factory(t) {\n    return new (t || OpcionesInformesComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.OpcionesInformesService));\n  };\n\n  OpcionesInformesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OpcionesInformesComponent,\n    selectors: [[\"app-opciones-informes\"]],\n    viewQuery: function OpcionesInformesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myInputVariableRegistroFotos = _t.first);\n      }\n    },\n    decls: 60,\n    vars: 15,\n    consts: [[1, \"projects-section-header\"], [1, \"title_opt\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#Addconfiguracion\", 1, \"btn\", \"btn-dark\"], [1, \"fas\", \"fa-plus\"], [1, \"row\"], [\"class\", \"col-md-5\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"Addconfiguracion\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"flex\"], [\"appearance\", \"outline\", 1, \"flex-auto\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"required\", \"\", 3, \"placeholder\", \"formControlName\"], [\"matInput\", \"\", \"autocomplete\", \"off\", 3, \"placeholder\", \"formControlName\"], [1, \"flex\", \"justify-end\"], [\"class\", \"mat-focus-indicator mat-stepper-next px-8 mat-flat-button mat-button-base mat-primary back mr-2\", \"mat-flat-button\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"mat-flat-button\", \"\", \"type\", \"button\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 2, \"margin-right\", \"20px\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"fas\", \"fa-save\"], [\"id\", \"AddOpcion\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"col-md-5\"], [1, \"card\", \"cardtabla\"], [1, \"card-header\"], [1, \"col-sm-7\"], [1, \"col-sm-5\", \"float-end\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#AddOpcion\", 1, \"btn\", \"float-end\", 3, \"click\"], [1, \"btn\", \"float-end\", 3, \"click\"], [1, \"fas\", \"fa-trash\", 2, \"color\", \"rgb(148, 21, 21)\"], [1, \"card-body\"], [\"itemSize\", \"60\", 1, \"example-viewport\"], [\"datatable\", \"\", 1, \"table\", \"table-hover\", 3, \"dtOptions\", \"dtTrigger\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [1, \"btn\", 3, \"click\"], [\"mat-flat-button\", \"\", \"type\", \"button\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"back\", \"mr-2\", 3, \"click\"]],\n    template: function OpcionesInformesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Opciones de configuraci\\u00F3n: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵtext(4, \"A\\u00F1adir configuraci\\u00F3n \");\n        i0.ɵɵelement(5, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵtemplate(7, OpcionesInformesComponent_div_7_Template, 24, 4, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"h5\", 10);\n        i0.ɵɵelementStart(13, \"strong\");\n        i0.ɵɵtext(14, \"Agregar par\\u00E1metro de configuraci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"button\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵelementStart(17, \"form\", 13);\n        i0.ɵɵelementStart(18, \"div\", 14);\n        i0.ɵɵelementStart(19, \"mat-form-field\", 15);\n        i0.ɵɵelementStart(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Nombre de par\\u00E1metro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 14);\n        i0.ɵɵelementStart(24, \"mat-form-field\", 15);\n        i0.ɵɵelementStart(25, \"mat-label\");\n        i0.ɵɵtext(26, \"Opciones de configuraci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 18);\n        i0.ɵɵtemplate(29, OpcionesInformesComponent_button_29_Template, 2, 0, \"button\", 19);\n        i0.ɵɵelementStart(30, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function OpcionesInformesComponent_Template_button_click_30_listener() {\n          return ctx.onSubmitOpcionesInformes();\n        });\n        i0.ɵɵtext(31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"table\", 21);\n        i0.ɵɵelementStart(33, \"tbody\");\n        i0.ɵɵtemplate(34, OpcionesInformesComponent_tr_34_Template, 6, 1, \"tr\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 23);\n        i0.ɵɵtext(36, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function OpcionesInformesComponent_Template_button_click_37_listener() {\n          return ctx.onSubmitOpciones();\n        });\n        i0.ɵɵtext(38, \"Guardar \");\n        i0.ɵɵelement(39, \"i\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 26);\n        i0.ɵɵelementStart(41, \"div\", 7);\n        i0.ɵɵelementStart(42, \"div\", 8);\n        i0.ɵɵelementStart(43, \"div\", 9);\n        i0.ɵɵelementStart(44, \"h5\", 10);\n        i0.ɵɵelementStart(45, \"strong\");\n        i0.ɵɵtext(46, \"Agregar par\\u00E1metro de configuraci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"button\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"div\", 12);\n        i0.ɵɵelementStart(49, \"form\", 13);\n        i0.ɵɵelementStart(50, \"div\", 14);\n        i0.ɵɵelementStart(51, \"mat-form-field\", 15);\n        i0.ɵɵelementStart(52, \"mat-label\");\n        i0.ɵɵtext(53, \"Opciones de configuraci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"button\", 23);\n        i0.ɵɵtext(56, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function OpcionesInformesComponent_Template_button_click_57_listener() {\n          return ctx.onSubmitOpcion();\n        });\n        i0.ɵɵtext(58, \"Guardar \");\n        i0.ɵɵelement(59, \"i\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.OpcionesInfomes);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.Parametros);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"placeholder\", \"nombre de par\\u00E1metro\")(\"formControlName\", \"name\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"placeholder\", \"nombre de par\\u00E1metro\")(\"formControlName\", \"data\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.ParametrosStatus);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.Parametros.get(\"data\").value == \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.ParametrosStatus == false ? \"A\\u00F1adir\" : \"Editar\", \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dataOpciones);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.Parametros.invalid || ctx.dataOpciones.length == 0);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formGroup\", ctx.dataOpcionesForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"placeholder\", \"nombre de la opci\\u00F3n\")(\"formControlName\", \"data\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.dataOpcionesForm.invalid);\n      }\n    },\n    directives: [i4.NgForOf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i4.NgIf, i7.MatButton, i8.CdkVirtualScrollViewport, i8.CdkFixedSizeVirtualScroll, i9.DataTableDirective, i8.CdkVirtualForOf],\n    styles: [\".card[_ngcontent-%COMP%] {\\n    box-shadow: 1px 1px 16px rgb(202, 202, 202);\\n    z-index: 100 !important;\\n}\\n\\n.projects-section-header[_ngcontent-%COMP%] {\\n    margin-top: -20px;\\n    margin-bottom: 50px;\\n}\\n\\n.btn-close[_ngcontent-%COMP%] {\\n    width: 5px !important;\\n    height: 5px !important;\\n    background-color: rgb(233, 65, 61);\\n    border-radius: 50%;\\n}\\n\\n.alert-danger[_ngcontent-%COMP%] {\\n    margin-top: 15px;\\n    padding: 10px;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n    flex: 2;\\n    background-color: #fff;\\n    border-radius: 32px;\\n    padding: 32px 32px 10px 32px;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n@media (max-width: 767px) {\\n    div.dataTables_wrapper[_ngcontent-%COMP%]   div.dataTables_paginate[_ngcontent-%COMP%]   ul.pagination[_ngcontent-%COMP%] {\\n        justify-content: center !important;\\n        margin-top: 1rem;\\n    }\\n    .table-responsive[_ngcontent-%COMP%] {\\n        overflow-x: auto !important;\\n    }\\n}\\n\\n@media (min-width: 767px) {\\n    .table-responsive[_ngcontent-%COMP%] {\\n        overflow-x: initial !important;\\n    }\\n}\\n\\n@media (max-width: 420px) {\\n    .projects-section-header[_ngcontent-%COMP%] {\\n        margin-top: 10px !important;\\n        margin-bottom: 50px;\\n    }\\n}\\n\\n.title_opt[_ngcontent-%COMP%]{\\n    font-weight: bold;\\n}\\n\\n.tit_opcion[_ngcontent-%COMP%]{\\n    height: 40px;\\n    font-size: 15px;\\n    font-weight: bold;\\n}\\n\\n.cardtabla[_ngcontent-%COMP%]{\\n    padding: 8px;\\n    border-radius: 15px;\\n    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\\n}\\n\\ntr[_ngcontent-%COMP%]:nth-child(even){\\n    background-color: #e9e9e9;\\n}\\n\\ncdk-virtual-scroll-viewport[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 400px;\\n}\"]\n  });\n  return OpcionesInformesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}