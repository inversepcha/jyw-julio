{"ast":null,"code":"import 'rxjs/add/operator/map';\nimport { environment } from '../../../environments/environment';\nimport { download } from \"../dowload.service\";\nimport { SAVER } from '../saver.provider';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let InformesRutasService = /*#__PURE__*/(() => {\n  class InformesRutasService {\n    constructor(_http, save) {\n      this._http = _http;\n      this.save = save;\n      this.url = environment.url;\n    }\n\n    getConsecutivo(data) {\n      return this._http.post(`${this.url}/api/v1/get-consecutivo-informe`, data).map(res => res);\n    }\n\n    getRutasInformes() {\n      return this._http.get(`${this.url}/api/v1/get-informes-router`).map(res => res);\n    }\n\n    postInformeOrden(data) {\n      return this._http.post(`${this.url}/api/v1/post-informes-orden`, data).map(res => res);\n    }\n\n    putInformeOrden(data) {\n      return this._http.put(`${this.url}/api/v1/put-informe-orden`, data).map(res => res);\n    }\n\n    deleteInformeOrden(id) {\n      return this._http.delete(`${this.url}/api/v1/delete-informe-orden/${id}`).map(res => res);\n    }\n\n    getInformesOrden(orden_id) {\n      return this._http.get(`${this.url}/api/v1/get-informes-ordenes/${orden_id}`);\n    }\n\n    postAutoSaveStepper(data) {\n      return this._http.post(`${this.url}/api/v1/post-auto-save-stepper/`, data).map(res => res);\n    }\n\n    getAutoSaveStepper(orden_id, informe_id) {\n      return this._http.get(`${this.url}/api/v1/get-auto-save-stepper/${orden_id}/${informe_id}`);\n    }\n\n    putAutoSaveStepper(data, id) {\n      return this._http.put(`${this.url}/api/v1/put-auto-save-stepper/${id}`, data).map(res => res);\n    }\n\n    GETdocumentExportPdf(id_orden, informe_id, rutaname, filename) {\n      return this._http.get(`${this.url}/api/v1/get-pdf${rutaname}/${id_orden}/${informe_id}`, {\n        reportProgress: true,\n        observe: 'events',\n        responseType: 'blob'\n      }).pipe(download(blob => this.save(blob, filename)));\n    }\n\n  }\n\n  InformesRutasService.ɵfac = function InformesRutasService_Factory(t) {\n    return new (t || InformesRutasService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(SAVER));\n  };\n\n  InformesRutasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InformesRutasService,\n    factory: InformesRutasService.ɵfac,\n    providedIn: 'root'\n  });\n  return InformesRutasService;\n})();","map":null,"metadata":{},"sourceType":"module"}