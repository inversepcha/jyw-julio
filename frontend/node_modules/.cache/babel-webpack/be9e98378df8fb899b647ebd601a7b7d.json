{"ast":null,"code":"import _asyncToGenerator from \"/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { environment } from '../../../environments/environment';\nimport { NuevaOrden, EditarOrden, AddUsuario, AddImplemento } from '../../models/ordenes';\nimport Swal from 'sweetalert2';\nimport * as moment from 'moment';\nlet OrdenesComponent = class OrdenesComponent {\n  constructor(_http, _socketService, _serviceOrdenes, _serviceUsuarios, _proyectosService, _subproyectosService, _serviceImplemento) {\n    this._http = _http;\n    this._socketService = _socketService;\n    this._serviceOrdenes = _serviceOrdenes;\n    this._serviceUsuarios = _serviceUsuarios;\n    this._proyectosService = _proyectosService;\n    this._subproyectosService = _subproyectosService;\n    this._serviceImplemento = _serviceImplemento;\n    /* ORDENES */\n\n    this.ordenes = [];\n    this.proyectos = [];\n    this.subProyectos = [];\n    this.usuariosOrdenesDetalles = [];\n    /* USUARIOS */\n\n    this.usuariosOrdenes = [];\n    this.usuariosOrdenesHistorial = [];\n    this.usuarios = [];\n    this.usuariosTable = [];\n    this.usuariosModal = [];\n    this.newUsuario = {\n      fecha_inicial: '',\n      fecha_final: '',\n      Usuario_id: ''\n    };\n    this.statusEditAndSubmit = false;\n    /* IMPLEMENTOS */\n\n    this.implementosOrdenesHistorial = [];\n    this.implementosOrdenes = [];\n    this.newImplemento = {\n      implemento_id: ''\n    };\n    this.implementosTable = [];\n    this.implementosOrdenesModal = [];\n\n    this.templateResult = state => {\n      if (!state.id) {\n        return state.text;\n      }\n\n      return jQuery(\"<div class='select2-result-repository clearfix'>\" + `\n        <div class='select2-result-repository__meta'>\n        <div class='select2-result-repository__title' style='color: black; font-weight: 700; word-wrap: break-word; line-height: 1.1; margin-bottom: 4px;'>${state.text}</div>\n        <div class='select2-result-repository__description'></div>\n        <div class='select2-result-repository__statistics'>\n        <div class='select2-result-repository__forks' style='display: inline-block; color: #777; font-size: 15px;'>Codigo N: ${state.codigo_n} </div>\n        <div class='select2-result-repository__stargazers' style='display: inline-block; color: #777;  font-size: 15px;'>Serial: ${state.serial}</div>\n        </div>\n        </div>\n        </div>`);\n    };\n\n    this.templateResultProyecto = state => {\n      if (!state.id) {\n        return state.text;\n      }\n\n      return jQuery(\"<div class='select2-result-repository clearfix'>\" + `\n        <div class='select2-result-repository__meta'>\n        <div class='select2-result-repository__title' style='color: black; font-weight: 700; word-wrap: break-word; line-height: 1.1; margin-bottom: 4px;'>${state.text}</div>\n        <div class='select2-result-repository__description'></div>\n        <div class='select2-result-repository__statistics'>\n        <div class='select2-result-repository__forks' style='display: inline-block; color: #777; font-size: 15px;'>Cliente: ${state.cliente} </div>\n        </div>\n        </div>\n        </div>`);\n    };\n\n    this.url = environment.url;\n    this.NuevaOrden = new NuevaOrden('', '', new Date(), '', '');\n    this.EditarOrden = new EditarOrden('', '', '', new Date(), '', 0);\n    this.addUsuario = new AddUsuario('', '', '', '');\n    this.addImplemento = new AddImplemento('', '');\n    this.identity = _serviceUsuarios.getIdentity();\n    this.token = localStorage.getItem('token');\n  }\n\n  ngOnInit() {\n    this.WindowsOnLoad();\n    this.getOrdenes();\n    this.getContadorOrdenes();\n    this.event();\n  }\n\n  WindowsOnLoad() {\n    let options = {\n      minimumInputLength: 2,\n      ajax: {\n        url: `${this.url}/api/v1/getImplementosSelect`,\n        headers: {\n          'Authorization': this.token\n        },\n        type: 'GET',\n        dataType: 'json',\n        data: params => {\n          return {\n            implemento: params.term,\n            pagina: params.page || 0\n          };\n        },\n        processResults: (data, params) => {\n          params.page = params.page || 0;\n          return {\n            results: data.body.data,\n            pagination: {\n              more: 30 <= data.body.total_count\n            }\n          };\n        },\n        cache: true\n      },\n      templateResult: this.templateResult,\n      escapeMarkup: function (markup) {\n        return markup;\n      }\n    };\n    this.optionsAdd = Object.assign(Object.assign({}, options), {\n      dropdownParent: $('#exampleModal1'),\n      width: '100%'\n    });\n    this.optionsAddProyecto = {\n      minimumInputLength: 2,\n      dropdownParent: $('#exampleModal1'),\n      width: '100%',\n      ajax: {\n        url: `${this.url}/api/v1/getProyectosSelect`,\n        headers: {\n          'Authorization': this.token\n        },\n        type: 'GET',\n        dataType: 'json',\n        data: params => {\n          return {\n            proyecto: params.term,\n            pagina: params.page || 0\n          };\n        },\n        processResults: (data, params) => {\n          params.page = params.page || 0;\n          return {\n            results: data.body.data,\n            pagination: {\n              more: 30 <= data.body.numeroPaginas\n            }\n          };\n        },\n        cache: true\n      },\n      templateResult: this.templateResultProyecto,\n      escapeMarkup: function (markup) {\n        return markup;\n      }\n    };\n    this.optionsAddImplemento = Object.assign(Object.assign({}, options), {\n      dropdownParent: $('#implementosModal'),\n      width: '100%'\n    });\n  }\n\n  event() {\n    this._socketService.socketEvent('server:ordenes').subscribe(res => {\n      if (res.status == 200 && res.event == 'server:ordenes') {\n        this.getOrdenes();\n        this.getContadorOrdenes();\n      }\n    });\n  }\n\n  getContadorOrdenes() {\n    this._serviceOrdenes.getContadorOrdenes().subscribe(res => {\n      this.contadorOrdenes = res.body[0];\n    });\n  }\n\n  getOrdenes() {\n    if (this.identity.perfil == \"Operador\") {\n      var id = this.identity.id;\n    } else {\n      var id = null;\n    }\n\n    this._serviceOrdenes.getOrdenes(id).subscribe(res => {\n      if (res.status === 200) {\n        this.ordenes = res.body;\n      }\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 401) {\n          this.message = body.body.message;\n        }\n\n        if (error.status === 404) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'info',\n            title: body.body.message\n          });\n          this.ordenes = [];\n        } else if (error.status === 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status === 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  getProyectos() {\n    this._proyectosService.getProyectos().subscribe(res => {\n      this.proyectos = res.body;\n    });\n  }\n\n  getSubProyectos(idProyecto) {\n    this._subproyectosService.getSubproyectos(idProyecto).subscribe(res => {\n      this.subProyectos = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 404) {\n          this.subProyectos = [];\n          Swal.fire({\n            title: `¡No hay subproyectos vinculados a este proyecto! <a href=\"/sub-proyectos/${idProyecto}\">Agregar uno</a>`,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        } else if (error.status === 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status === 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  } //\n\n\n  getUsuariosSelect() {\n    this._serviceUsuarios.getUsuariosSelect().subscribe(res => {\n      this.usuarios = res.body;\n    });\n  }\n\n  getUsuarioOrdenes(id) {\n    this.addUsuario.orden_id = id;\n\n    this._serviceOrdenes.getUsuariosOrdenes(id).subscribe(res => {\n      this.usuariosOrdenes = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 404) {\n          this.usuariosOrdenes = [];\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  getImplementosOrdenes(id) {\n    this.addImplemento.orden_id = id;\n\n    this._serviceOrdenes.getImplementosOrdenes(id).subscribe(res => {\n      this.implementosOrdenes = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 404) {\n          this.implementosOrdenes = [];\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  getImplementoSelect() {\n    this._serviceImplemento.getImplementoSelect().subscribe(res => {\n      this.implementosOrdenes = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  getOrden(id) {\n    this._serviceOrdenes.getOrden(id).subscribe(res => {\n      if (res.status === 200) {\n        this.getSubProyectosEditar(res.body[0].proyecto_id);\n        this.EditarOrden = res.body[0];\n      }\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  agregar_implemento() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const name_implemento = $('#implementoSelect option:selected').text();\n\n      if (_this.newImplemento.implemento_id == '') {\n        _this.errorImplementoAdd = 'Ingrese un Implemento válido';\n      } else {\n        if (_this.implementosTable.filter(element => element.id === _this.newImplemento.implemento_id) != 0) {\n          _this.errorImplementoAdd = 'Ya hay un implemento registrado';\n        } else {\n          let data = {\n            implemento_name: name_implemento,\n            id: _this.newImplemento.implemento_id\n          };\n          yield _this.implementosTable.push(data);\n          _this.errorImplementoAdd = null;\n          _this.newImplemento = {\n            implemento_id: ''\n          };\n        }\n      }\n    })();\n  }\n\n  remover_implemento(idImplemento) {\n    this.implementosTable.splice(idImplemento, 1);\n  }\n\n  SelectedValue(event) {\n    this.eventSelectedUser = event.source.triggerValue;\n  }\n\n  agregar_usuario() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.newUsuario.Usuario_id == '' || _this2.newUsuario.fecha_inicial == '' && _this2.newUsuario.fecha_final == '') {\n        _this2.errorUsuarioAdd = 'Ingrese un usuario válido y una fecha valida';\n      } else {\n        if (_this2.usuariosTable.filter(element => element.id === _this2.newUsuario.Usuario_id) != 0) {\n          _this2.errorUsuarioAdd = 'Ya hay un usuario registrado';\n        } else {\n          let data = {\n            usuario_name: _this2.eventSelectedUser,\n            fecha_inicial: _this2.newUsuario.fecha_inicial,\n            fecha_final: _this2.newUsuario.fecha_final,\n            id: _this2.newUsuario.Usuario_id\n          };\n          yield _this2.usuariosTable.push(data);\n          _this2.errorUsuarioAdd = null;\n          _this2.errorFechaAdd = null;\n          _this2.newUsuario.fecha_inicial = '';\n          _this2.newUsuario.fecha_final = '';\n          _this2.newUsuario.Usuario_id = '';\n        }\n      }\n    })();\n  }\n\n  remover_usuario(idUsuario) {\n    this.usuariosTable.splice(idUsuario, 1);\n  }\n\n  addOrden() {\n    let data = Object.assign(Object.assign({}, this.NuevaOrden), {\n      usuarios_id: this.usuariosTable,\n      implementos_id: this.implementosTable\n    });\n    console.log(data);\n\n    this._serviceOrdenes.addOrdenes(data).subscribe(res => {\n      if (res.status === 200) {\n        Swal.fire({\n          title: '¡La Orden se ha guardado correctamente!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar'\n        });\n        this.message = null;\n        let element = document.getElementsByClassName('btn-close-add')[0];\n        element.click();\n        this.getOrdenes();\n        this.NuevaOrden = new NuevaOrden('', '', new Date(), '', '');\n        this.message = false;\n        this.implementosTable = [];\n        this.usuariosTable = [];\n      }\n    }, error => {\n      var message = error;\n\n      if (message != null) {\n        var body = error.error;\n\n        if (error.status === 401) {\n          this.message = body.body.message;\n        }\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  calculateDiff(fecha) {\n    let date = moment(new Date(fecha).toISOString().slice(0, 10));\n    let currentDate = moment(new Date().toISOString().slice(0, 10));\n    let dias = date.diff(currentDate, 'days');\n\n    if (dias <= 1) {\n      var dia = `Falta ${dias} Dia`;\n\n      if (dias < 1) {\n        var dia = `Faltan 0 Dias`;\n      }\n    } else {\n      var dia = `Faltan ${dias} Dias`;\n    }\n\n    return dia;\n  }\n\n  deleteOrden(id) {\n    Swal.fire({\n      title: \"¿Está seguro de eliminar la Orden?\",\n      text: \"¡Si no lo está puede cancelar la accíon!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: 'Si, eliminar orden!'\n    }).then(result => {\n      if (result.value) {\n        this._serviceOrdenes.deleteOrden(id).subscribe(res => {\n          if (res.status === 200) {\n            Swal.fire({\n              title: '¡La orden se ha eliminado correctamente!',\n              icon: 'success',\n              confirmButtonText: 'Cerrar'\n            });\n            this.getProyectos();\n          }\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status == 404) {\n              Swal.fire({\n                title: body.body.message,\n                icon: 'warning',\n                confirmButtonText: 'Cerrar'\n              });\n            }\n\n            if (error.status == 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.body.message\n              });\n            } else if (error.status == 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n\n  getUsuariosSelectModal() {\n    this._serviceUsuarios.getUsuariosSelect().subscribe(res => {\n      this.usuariosModal = res.body;\n    });\n  }\n\n  addUsuarioOrden() {\n    this._serviceOrdenes.addUsuarioOrdenes(this.addUsuario).subscribe(res => {\n      if (res.status === 200) {\n        Swal.fire({\n          title: 'El Usuario se ha guardado correctamente!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar'\n        });\n        this.message = null;\n        let element = document.getElementsByClassName('btn-close-add')[0];\n        element.click();\n        this.getUsuarioOrdenes(this.addUsuario.orden_id);\n        this.addUsuario.usuario_id, this.addUsuario.fecha_visita = '';\n        this.message = false;\n      }\n    }, error => {\n      var message = error;\n\n      if (message != null) {\n        var body = error.error;\n\n        if (error.status === 401) {\n          this.messageAddUsuario = body.body.message;\n        }\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  deleteUsuarioOrden(id) {\n    Swal.fire({\n      title: \"¿Está seguro de eliminar el Usuario?\",\n      text: \"¡Si no lo está puede cancelar la accíon!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: 'Si, eliminar Usuario!'\n    }).then(result => {\n      if (result.value) {\n        this._serviceOrdenes.deleteUsuarioOrden(id).subscribe(res => {\n          if (res.status === 200) {\n            Swal.fire({\n              title: '¡El usuario se ha eliminado correctamente!',\n              icon: 'success',\n              confirmButtonText: 'Cerrar'\n            });\n            this.getUsuarioOrdenes(id);\n          }\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status == 404) {\n              Swal.fire({\n                title: body.body.message,\n                icon: 'warning',\n                confirmButtonText: 'Cerrar'\n              });\n            }\n\n            if (error.status == 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.body.message\n              });\n            } else if (error.status == 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n\n  getUsuariosOrdenHistorial(id) {\n    this._serviceOrdenes.getUsuariosOrdenesHistorial(id).subscribe(res => {\n      this.usuariosOrdenesHistorial = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status == 404) {\n          this.usuariosOrdenesHistorial = [];\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  getImplementosOrdenHistorial(id) {\n    this._serviceOrdenes.getImplemntosOrdenesHistorial(id).subscribe(res => {\n      this.implementosOrdenesHistorial = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status == 404) {\n          this.implementosOrdenesHistorial = [];\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  saveImplemento() {\n    if (this.addImplemento.implemento_id == '') {\n      this.errorImplemento = 'Seleccione una opción válida.';\n    } else {\n      this.errorImplemento = null;\n\n      this._serviceOrdenes.addImplementoOrdenes(this.addImplemento).subscribe(res => {\n        if (res.status === 200) {\n          Swal.fire({\n            title: 'El Implemento se ha guardado correctamente!',\n            icon: 'success',\n            confirmButtonText: 'Cerrar'\n          });\n          this.getImplementosOrdenes(this.addImplemento.orden_id);\n          this.messageAddImplemento = false;\n        }\n      }, error => {\n        var message = error;\n\n        if (message != null) {\n          var body = error.error;\n\n          if (error.status === 401) {\n            this.messageAddImplemento = body.body.message;\n          }\n\n          if (error.status === 404) {\n            Swal.fire({\n              title: body.body.message,\n              icon: 'warning',\n              confirmButtonText: 'Cerrar'\n            });\n          }\n\n          if (error.status == 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message\n            });\n          } else if (error.status == 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            });\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n            });\n          }\n        }\n      });\n    }\n  }\n\n  deleteImplementoOrden(id) {\n    Swal.fire({\n      title: \"¿Está seguro de eliminar el implmento?\",\n      text: \"¡Si no lo está puede cancelar la accíon!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: 'Si, eliminar Implemento!'\n    }).then(result => {\n      if (result.value) {\n        this._serviceOrdenes.deleteImplemento(id).subscribe(res => {\n          if (res.status === 200) {\n            Swal.fire({\n              title: '¡El implemento se ha eliminado correctamente!',\n              icon: 'success',\n              confirmButtonText: 'Cerrar'\n            });\n            this.getImplementosOrdenes(this.addImplemento.orden_id);\n          }\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status == 404) {\n              Swal.fire({\n                title: body.body.message,\n                icon: 'warning',\n                confirmButtonText: 'Cerrar'\n              });\n            }\n\n            if (error.status == 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.body.message\n              });\n            } else if (error.status == 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n\n  getSubProyectosEditar(idProyecto) {\n    this._subproyectosService.getSubproyectos(idProyecto).subscribe(res => {\n      this.subProyectosEditar = res.body;\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 404) {\n          this.subProyectos = [];\n          Swal.fire({\n            title: `¡No hay subproyectos vinculados a este proyecto! <a href=\"/sub-proyectos/${idProyecto}\">Agregar uno</a>`,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        } else if (error.status === 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status === 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  updateOrden() {\n    this._serviceOrdenes.updateOrden(this.EditarOrden).subscribe(res => {\n      if (res.status === 200) {\n        Swal.fire({\n          title: '¡La Orden se ha modificado correctamente!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar'\n        });\n        let element = document.getElementsByClassName('btn-close-edit')[0];\n        element.click();\n        this.getOrdenes();\n        this.EditarOrden = new EditarOrden('', '', '', new Date(), '', 0);\n      }\n    }, error => {\n      var errorMessage = error;\n\n      if (errorMessage != null) {\n        var body = error.error;\n\n        if (error.status === 401) {\n          this.message = body.body.message;\n        }\n\n        if (error.status === 404) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'info',\n            title: body.body.message\n          });\n        }\n\n        if (error.status === 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        }\n\n        if (error.status === 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n  getDetallesOrden(id) {\n    this._serviceOrdenes.getDetallesOrdenes(id).subscribe(res => {\n      this.detallesOrdenes = res.body[0];\n      this.usuariosOrdenesDetalles = res.body[0].Usuarios_Json;\n    });\n  }\n\n  onEventClickUsuario(data) {\n    this.addUsuario = data;\n    this.statusEditAndSubmit = true;\n  }\n\n  onEventClickUsuarioCancelar() {\n    this.statusEditAndSubmit = false;\n    this.addUsuario = new AddUsuario('', '', '', '');\n  }\n\n  onSubmitEditUsuario() {\n    const {\n      usuario_id,\n      fecha_inicial,\n      fecha_final,\n      id\n    } = this.addUsuario;\n    let data = {\n      usuario_id,\n      fecha_final,\n      fecha_inicial,\n      id\n    };\n    console.log(data);\n\n    this._serviceOrdenes.updateUsuarioOrdenes(data).subscribe(res => {\n      if (res.status === 200) {\n        Swal.fire({\n          title: 'El Usuario se ha modificado correctamente!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar'\n        });\n        this.statusEditAndSubmit = false;\n        this.getUsuarioOrdenes(this.addUsuario.orden_id);\n        this.addUsuario = {};\n        this.addUsuario = new AddUsuario('', '', '', '');\n      }\n    }, error => {\n      var message = error;\n\n      if (message != null) {\n        var body = error.error;\n\n        if (error.status === 401) {\n          this.messageAddUsuario = body.body.message;\n        }\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n\n        if (error.status == 500) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n          });\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          });\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          });\n        }\n      }\n    });\n  }\n\n};\nOrdenesComponent = __decorate([Component({\n  selector: 'app-ordenes',\n  templateUrl: './ordenes.component.html',\n  styleUrls: ['./ordenes.component.css']\n})], OrdenesComponent);\nexport { OrdenesComponent };","map":{"version":3,"sources":["/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/src/app/components/ordenes/ordenes.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { Select2OptionData } from \"ng-select2\";\nimport { Options } from \"select2\";\n\nimport { SocketService } from '../../service/sockets/socket.service';\n\n\nimport { OrdenesService } from '../../service/ordenes/ordenes.service';\nimport { ProyectosService } from '../../service/proyectos/proyectos.service';\nimport { SubproyectosService } from \"../../service/subproyectos/subproyectos.service\";\nimport { UsuariosService } from 'src/app/service/usuarios/usuarios.service';\nimport { ImplementosService } from 'src/app/service/implementos/implementos.service';\n\nimport { HttpClient } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport { environment } from '../../../environments/environment';\n\nimport {\n  NuevaOrden,\n  EditarOrden,\n  AddUsuario,\n  AddImplemento\n} from '../../models/ordenes';\n\nimport Swal from 'sweetalert2';\n\nimport * as moment from 'moment'\nimport { formatDate } from '@angular/common';\n\ndeclare let $: any;\n\n@Component({\n  selector: 'app-ordenes',\n  templateUrl: './ordenes.component.html',\n  styleUrls: ['./ordenes.component.css']\n})\nexport class OrdenesComponent implements OnInit {\n\n  public optionsAdd!: Options\n  public optionsAddImplemento !: Options\n\n  public optionsAddProyecto!: Options\n  public optionsEditProyecto !: Options\n\n  /* ORDENES */\n\n  public ordenes: any = [];\n  public proyectos: any = []\n  public subProyectos: any = []\n  public NuevaOrden: any;\n  public EditarOrden: any;\n  public contadorOrdenes: any\n  public detallesOrdenes: any\n  public usuariosOrdenesDetalles: any = []\n\n  /* USUARIOS */\n\n  public usuariosOrdenes: any = []\n  public usuariosOrdenesHistorial: any = []\n  public usuarios: any = []\n  public addUsuario: any\n  public messageAddUsuario: any\n  public usuariosTable: any = []\n  public usuariosModal: any = []\n  public newUsuario = {\n    fecha_inicial: '',\n    fecha_final: '',\n    Usuario_id: ''\n  }\n  public errorUsuarioAdd: any\n  public errorFechaAdd: any\n  public subProyectosEditar: any;\n  startDate :any\n  endDate : any\n  public statusEditAndSubmit : boolean = false\n  public eventSelectedUser : any\n\n\n  /* IMPLEMENTOS */\n\n  public implementosOrdenesHistorial: any = []\n  public implementosOrdenes: any = []\n  public message: any;\n  public errorSerialMessage: any;\n  public newImplemento = {\n    implemento_id: ''\n  }\n  public implementosTable: any = []\n  public addImplemento: any\n  public implementosOrdenesModal: any = []\n  public errorImplementoAdd: any\n  public messageAddImplemento: any\n  public errorImplemento: any\n\n  public identity: any\n  public token: any\n  public url: string;\n\n  constructor(\n    private _http: HttpClient,\n    private _socketService: SocketService,\n    private _serviceOrdenes: OrdenesService,\n    private _serviceUsuarios: UsuariosService,\n    private _proyectosService: ProyectosService,\n    private _subproyectosService: SubproyectosService,\n    private _serviceImplemento: ImplementosService\n  ) {\n    this.url = environment.url;\n    this.NuevaOrden = new NuevaOrden('', '', new Date(), '', '');\n    this.EditarOrden = new EditarOrden('', '', '', new Date(), '', 0);\n    this.addUsuario = new AddUsuario('', '', '', '');\n    this.addImplemento = new AddImplemento('', '')\n    this.identity = _serviceUsuarios.getIdentity();\n    this.token = localStorage.getItem('token');\n  }\n\n  ngOnInit(): void {\n    this.WindowsOnLoad();\n    this.getOrdenes()\n    this.getContadorOrdenes()\n    this.event()\n\n  }\n\n  WindowsOnLoad() {\n\n    let options = {\n      minimumInputLength: 2,\n      ajax: {\n        url: `${this.url}/api/v1/getImplementosSelect`,\n        headers: { 'Authorization': this.token },\n        type: 'GET',\n        dataType: 'json',\n        data: (params: any) => {\n\n          return {\n            implemento: params.term, //search term\n            pagina: params.page || 0\n          }\n        },\n        processResults: (data: any, params: any) => {\n\n          params.page = params.page || 0;\n\n          return {\n            results: data.body.data,\n            pagination: {\n              more: 30 <= data.body.total_count\n            }\n          };\n        },\n        cache: true\n      },\n      templateResult: this.templateResult,\n      escapeMarkup: function (markup: any) {\n        return markup;\n      },\n\n    }\n\n    this.optionsAdd = {\n      ...options,\n      dropdownParent: $('#exampleModal1'),\n      width: '100%'\n    }\n\n    this.optionsAddProyecto = {\n      minimumInputLength: 2,\n      dropdownParent: $('#exampleModal1'),\n      width: '100%',\n      ajax: {\n        url: `${this.url}/api/v1/getProyectosSelect`,\n        headers: { 'Authorization': this.token },\n        type: 'GET',\n        dataType: 'json',\n        data: (params: any) => {\n\n          return {\n            proyecto: params.term,\n            pagina: params.page || 0\n          }\n        },\n        processResults: (data: any, params: any) => {\n\n          params.page = params.page || 0;\n\n          return {\n            results: data.body.data,\n            pagination: {\n              more: 30 <= data.body.numeroPaginas\n            }\n          };\n        },\n        cache: true\n      },\n      templateResult: this.templateResultProyecto,\n      escapeMarkup: function (markup: any) {\n        return markup;\n      },\n\n    }\n\n    this.optionsAddImplemento = {\n      ...options,\n      dropdownParent: $('#implementosModal'),\n      width: '100%'\n    }\n  }\n\n  public templateResult = (state: any): JQuery | string => {\n\n    if (!state.id) {\n      return state.text;\n    }\n\n    return jQuery(\"<div class='select2-result-repository clearfix'>\" +\n      `\n        <div class='select2-result-repository__meta'>\n        <div class='select2-result-repository__title' style='color: black; font-weight: 700; word-wrap: break-word; line-height: 1.1; margin-bottom: 4px;'>${state.text}</div>\n        <div class='select2-result-repository__description'></div>\n        <div class='select2-result-repository__statistics'>\n        <div class='select2-result-repository__forks' style='display: inline-block; color: #777; font-size: 15px;'>Codigo N: ${state.codigo_n} </div>\n        <div class='select2-result-repository__stargazers' style='display: inline-block; color: #777;  font-size: 15px;'>Serial: ${state.serial}</div>\n        </div>\n        </div>\n        </div>`)\n  }\n\n  public templateResultProyecto = (state: any): JQuery | string => {\n\n    if (!state.id) {\n      return state.text;\n    }\n\n    return jQuery(\"<div class='select2-result-repository clearfix'>\" +\n      `\n        <div class='select2-result-repository__meta'>\n        <div class='select2-result-repository__title' style='color: black; font-weight: 700; word-wrap: break-word; line-height: 1.1; margin-bottom: 4px;'>${state.text}</div>\n        <div class='select2-result-repository__description'></div>\n        <div class='select2-result-repository__statistics'>\n        <div class='select2-result-repository__forks' style='display: inline-block; color: #777; font-size: 15px;'>Cliente: ${state.cliente} </div>\n        </div>\n        </div>\n        </div>`)\n  }\n\n  event() {\n\n    this._socketService.socketEvent('server:ordenes').subscribe((res: any) => {\n\n      if (res.status == 200 && res.event == 'server:ordenes') {\n        this.getOrdenes();\n        this.getContadorOrdenes();\n      }\n    })\n  }\n\n  getContadorOrdenes() {\n    this._serviceOrdenes.getContadorOrdenes().subscribe((res: any) => {\n\n      this.contadorOrdenes = res.body[0]\n    })\n\n\n\n  }\n\n  getOrdenes() {\n\n    if (this.identity.perfil == \"Operador\") {\n      var id = this.identity.id\n    }\n    else {\n      var id = null;\n    }\n\n    this._serviceOrdenes.getOrdenes(id).subscribe(\n      (res: any) => {\n        if (res.status === 200) {\n          this.ordenes = res.body;\n        }\n      },\n      (error) => {\n        var errorMessage = <any>error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status === 401) {\n            this.message = body.body.message\n          }\n\n          if (error.status === 404) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'info',\n              title: body.body.message,\n            });\n\n            this.ordenes = []\n\n          } else if (error.status === 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message,\n            });\n          } else if (error.status === 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet',\n            });\n          }\n        }\n      }\n    );\n  }\n\n  getProyectos() {\n\n    this._proyectosService.getProyectos().subscribe((res: any) => {\n\n      this.proyectos = res.body\n\n    })\n\n\n\n  }\n\n  getSubProyectos(idProyecto: string) {\n    this._subproyectosService.getSubproyectos(idProyecto).subscribe((res: any) => {\n\n      this.subProyectos = res.body\n\n    },\n      (error) => {\n        var errorMessage = <any>error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status === 404) {\n            this.subProyectos = []\n\n            Swal.fire({\n              title: `¡No hay subproyectos vinculados a este proyecto! <a href=\"/sub-proyectos/${idProyecto}\">Agregar uno</a>`,\n              icon: 'warning',\n              confirmButtonText: 'Cerrar',\n            });\n\n          } else if (error.status === 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message,\n            });\n          } else if (error.status === 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet',\n            });\n          }\n        }\n      })\n  }\n\n  //\n\n  getUsuariosSelect() {\n    this._serviceUsuarios.getUsuariosSelect().subscribe((res: any) => {\n      this.usuarios = res.body\n    })\n  }\n\n  getUsuarioOrdenes(id: any) {\n\n    this.addUsuario.orden_id = id\n\n    this._serviceOrdenes.getUsuariosOrdenes(id).subscribe((res: any) => {\n\n      this.usuariosOrdenes = res.body\n    }, error => {\n      var errorMessage = <any>error;\n\n      if (errorMessage != null) {\n        var body = error.error\n\n        if (error.status === 404) {\n          this.usuariosOrdenes = []\n        }\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          })\n        }\n      }\n    })\n\n  }\n\n  getImplementosOrdenes(id: any) {\n\n    this.addImplemento.orden_id = id\n\n    this._serviceOrdenes.getImplementosOrdenes(id).subscribe((res: any) => {\n\n      this.implementosOrdenes = res.body\n\n    }, error => {\n      var errorMessage = <any>error;\n\n      if (errorMessage != null) {\n        var body = error.error\n\n        if (error.status === 404) {\n          this.implementosOrdenes = []\n        }\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          })\n        }\n      }\n    })\n\n  }\n\n  getImplementoSelect() {\n\n    this._serviceImplemento.getImplementoSelect().subscribe((res: any) => {\n\n      this.implementosOrdenes = res.body\n\n    }, error => {\n      var errorMessage = <any>error;\n\n      if (errorMessage != null) {\n        var body = error.error\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar',\n          });\n        }\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          })\n        }\n      }\n    })\n  }\n\n  getOrden(id: any) {\n\n    this._serviceOrdenes.getOrden(id).subscribe((res: any) => {\n\n      if (res.status === 200) {\n\n        this.getSubProyectosEditar(res.body[0].proyecto_id)\n\n        this.EditarOrden = res.body[0]\n\n\n      }\n    }, error => {\n      var errorMessage = <any>error;\n\n      if (errorMessage != null) {\n        var body = error.error\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar',\n          });\n        }\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n          })\n        }\n      }\n    })\n  }\n\n  async agregar_implemento() {\n\n    const name_implemento = $('#implementoSelect option:selected').text()\n\n    if (this.newImplemento.implemento_id == '') {\n      this.errorImplementoAdd = 'Ingrese un Implemento válido'\n    } else {\n\n      if (this.implementosTable.filter((element: any) => element.id === this.newImplemento.implemento_id) != 0) {\n        this.errorImplementoAdd = 'Ya hay un implemento registrado'\n      } else {\n\n        let data = { implemento_name: name_implemento, id: this.newImplemento.implemento_id }\n\n        await this.implementosTable.push(data);\n        this.errorImplementoAdd = null;\n        this.newImplemento = { implemento_id: '' }\n      }\n    }\n  }\n\n  remover_implemento(idImplemento: any) {\n    this.implementosTable.splice(idImplemento, 1);\n  }\n\n\n  SelectedValue(event: any ){\n\n    this.eventSelectedUser = event.source.triggerValue\n\n  }\n\n  async agregar_usuario() {\n    if (this.newUsuario.Usuario_id == '' || this.newUsuario.fecha_inicial == '' && this.newUsuario.fecha_final == '') {\n      this.errorUsuarioAdd = 'Ingrese un usuario válido y una fecha valida'\n    } else {\n      if (this.usuariosTable.filter((element: any) => element.id === this.newUsuario.Usuario_id) != 0) {\n        this.errorUsuarioAdd = 'Ya hay un usuario registrado'\n      } else {\n        let data = { usuario_name: this.eventSelectedUser, fecha_inicial: this.newUsuario.fecha_inicial, fecha_final: this.newUsuario.fecha_final, id: this.newUsuario.Usuario_id }\n\n        await this.usuariosTable.push(data)\n        this.errorUsuarioAdd = null;\n        this.errorFechaAdd = null;\n        this.newUsuario.fecha_inicial = ''\n        this.newUsuario.fecha_final = ''\n        this.newUsuario.Usuario_id = ''\n      }\n\n    }\n\n\n  }\n\n  remover_usuario(idUsuario: any) {\n    this.usuariosTable.splice(idUsuario, 1);\n  }\n\n  addOrden() {\n\n    let data = { ...this.NuevaOrden, usuarios_id: this.usuariosTable, implementos_id: this.implementosTable }\n\n\n    console.log(data)\n\n    this._serviceOrdenes.addOrdenes(data).subscribe((res: any) => {\n\n      if (res.status === 200) {\n        Swal.fire({\n          title: '¡La Orden se ha guardado correctamente!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar',\n        });\n        this.message = null\n\n        let element: HTMLElement = document.getElementsByClassName(\n          'btn-close-add'\n        )[0] as HTMLElement;\n        element.click();\n\n        this.getOrdenes();\n        this.NuevaOrden = new NuevaOrden('', '', new Date(), '', '')\n\n        this.message = false\n\n        this.implementosTable = [];\n\n        this.usuariosTable = [];\n      }\n    }, error => {\n      var message = <any>error;\n\n      if (message != null) {\n        var body = error.error\n        if (error.status === 401) {\n          this.message = body.body.message\n        }\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar',\n          });\n        }\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n\n          })\n        }\n      }\n    })\n  }\n\n  calculateDiff(fecha: any) {\n\n    let date = moment(new Date(fecha).toISOString().slice(0, 10));\n    let currentDate = moment(new Date().toISOString().slice(0, 10));\n\n    let dias = date.diff(currentDate, 'days');\n\n    if (dias <= 1) {\n\n      var dia = `Falta ${dias} Dia`\n\n      if (dias < 1) {\n        var dia = `Faltan 0 Dias`\n      }\n\n\n    } else {\n      var dia = `Faltan ${dias} Dias`\n    }\n    return dia;\n  }\n\n  deleteOrden(id: any) {\n    Swal.fire({\n\n      title: \"¿Está seguro de eliminar la Orden?\",\n      text: \"¡Si no lo está puede cancelar la accíon!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: 'Si, eliminar orden!'\n\n    }).then((result) => {\n\n      if (result.value) {\n\n        this._serviceOrdenes.deleteOrden(id).subscribe((res: any) => {\n\n          if (res.status === 200) {\n            Swal.fire({\n              title: '¡La orden se ha eliminado correctamente!',\n              icon: 'success',\n              confirmButtonText: 'Cerrar',\n            });\n            this.getProyectos();\n          }\n        },\n          error => {\n            var errorMessage = <any>error;\n\n            if (errorMessage != null) {\n              var body = error.error\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar',\n                });\n              }\n\n              if (error.status == 500) {\n\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                })\n\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n\n                })\n\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                })\n\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n\n                })\n              }\n            }\n          });\n      }\n    })\n  }\n\n  getUsuariosSelectModal() {\n    this._serviceUsuarios.getUsuariosSelect().subscribe((res: any) => {\n      this.usuariosModal = res.body\n    })\n  }\n\n  addUsuarioOrden() {\n\n    this._serviceOrdenes.addUsuarioOrdenes(this.addUsuario).subscribe((res: any) => {\n\n      if (res.status === 200) {\n        Swal.fire({\n          title: 'El Usuario se ha guardado correctamente!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar',\n        });\n        this.message = null\n\n        let element: HTMLElement = document.getElementsByClassName(\n          'btn-close-add'\n        )[0] as HTMLElement;\n        element.click();\n\n        this.getUsuarioOrdenes(this.addUsuario.orden_id);\n        this.addUsuario.usuario_id, this.addUsuario.fecha_visita = ''\n\n        this.message = false\n\n      }\n    }, error => {\n      var message = <any>error;\n\n      if (message != null) {\n        var body = error.error\n        if (error.status === 401) {\n          this.messageAddUsuario = body.body.message\n        }\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar',\n          });\n        }\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n\n          })\n        }\n      }\n    })\n  }\n\n  deleteUsuarioOrden(id: any) {\n    Swal.fire({\n\n      title: \"¿Está seguro de eliminar el Usuario?\",\n      text: \"¡Si no lo está puede cancelar la accíon!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: 'Si, eliminar Usuario!'\n\n    }).then((result) => {\n\n      if (result.value) {\n\n        this._serviceOrdenes.deleteUsuarioOrden(id).subscribe((res: any) => {\n\n          if (res.status === 200) {\n            Swal.fire({\n              title: '¡El usuario se ha eliminado correctamente!',\n              icon: 'success',\n              confirmButtonText: 'Cerrar',\n            });\n            this.getUsuarioOrdenes(id);\n          }\n        },\n          error => {\n            var errorMessage = <any>error;\n\n            if (errorMessage != null) {\n              var body = error.error\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar',\n                });\n              }\n\n              if (error.status == 500) {\n\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                })\n\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n\n                })\n\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                })\n\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n\n                })\n              }\n            }\n          });\n      }\n    })\n  }\n\n  getUsuariosOrdenHistorial(id: any) {\n    this._serviceOrdenes.getUsuariosOrdenesHistorial(id).subscribe((res: any) => {\n\n      this.usuariosOrdenesHistorial = res.body\n    },\n      error => {\n        var errorMessage = <any>error;\n\n        if (errorMessage != null) {\n          var body = error.error\n\n          if (error.status == 404) {\n            this.usuariosOrdenesHistorial = []\n          }\n\n          if (error.status == 500) {\n\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            })\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message\n\n            })\n\n          } else if (error.status == 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            })\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n\n            })\n          }\n        }\n      });\n  }\n\n  getImplementosOrdenHistorial(id: any) {\n    this._serviceOrdenes.getImplemntosOrdenesHistorial(id).subscribe((res: any) => {\n      this.implementosOrdenesHistorial = res.body\n    },\n      error => {\n        var errorMessage = <any>error;\n\n        if (errorMessage != null) {\n          var body = error.error\n\n          if (error.status == 404) {\n            this.implementosOrdenesHistorial = []\n          }\n\n          if (error.status == 500) {\n\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            })\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message\n\n            })\n\n          } else if (error.status == 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            })\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n\n            })\n          }\n        }\n      });\n  }\n\n  saveImplemento() {\n\n    if (this.addImplemento.implemento_id == '') {\n      this.errorImplemento = 'Seleccione una opción válida.'\n    }else{\n      this.errorImplemento = null\n      this._serviceOrdenes.addImplementoOrdenes(this.addImplemento).subscribe((res: any) => {\n\n        if (res.status === 200) {\n          Swal.fire({\n            title: 'El Implemento se ha guardado correctamente!',\n            icon: 'success',\n            confirmButtonText: 'Cerrar',\n          });\n\n          this.getImplementosOrdenes(this.addImplemento.orden_id);\n\n          this.messageAddImplemento = false\n\n        }\n      }, error => {\n        var message = <any>error;\n\n        if (message != null) {\n          var body = error.error\n          if (error.status === 401) {\n            this.messageAddImplemento = body.body.message\n          }\n\n          if (error.status === 404) {\n            Swal.fire({\n              title: body.body.message,\n              icon: 'warning',\n              confirmButtonText: 'Cerrar',\n            });\n          }\n\n          if (error.status == 500) {\n\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            })\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message\n\n            })\n\n          } else if (error.status == 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px'\n            })\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet'\n\n            })\n          }\n        }\n      })\n    }\n\n  }\n\n  deleteImplementoOrden(id: any) {\n    Swal.fire({\n      title: \"¿Está seguro de eliminar el implmento?\",\n      text: \"¡Si no lo está puede cancelar la accíon!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      cancelButtonText: 'Cancelar',\n      confirmButtonText: 'Si, eliminar Implemento!'\n\n    }).then((result) => {\n\n      if (result.value) {\n\n        this._serviceOrdenes.deleteImplemento(id).subscribe((res: any) => {\n\n          if (res.status === 200) {\n            Swal.fire({\n              title: '¡El implemento se ha eliminado correctamente!',\n              icon: 'success',\n              confirmButtonText: 'Cerrar',\n            });\n\n            this.getImplementosOrdenes(this.addImplemento.orden_id);\n\n          }\n        },\n          error => {\n            var errorMessage = <any>error;\n\n            if (errorMessage != null) {\n              var body = error.error\n\n              if (error.status == 404) {\n                Swal.fire({\n                  title: body.body.message,\n                  icon: 'warning',\n                  confirmButtonText: 'Cerrar',\n                });\n              }\n\n              if (error.status == 500) {\n\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                })\n\n                Toast.fire({\n                  icon: 'error',\n                  title: body.body.message\n\n                })\n\n              } else if (error.status == 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                })\n\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n\n                })\n              }\n            }\n          });\n      }\n    })\n  }\n\n  getSubProyectosEditar(idProyecto: string) {\n    this._subproyectosService.getSubproyectos(idProyecto).subscribe((res: any) => {\n\n      this.subProyectosEditar = res.body\n\n    },\n      (error) => {\n        var errorMessage = <any>error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status === 404) {\n            this.subProyectos = []\n\n            Swal.fire({\n              title: `¡No hay subproyectos vinculados a este proyecto! <a href=\"/sub-proyectos/${idProyecto}\">Agregar uno</a>`,\n              icon: 'warning',\n              confirmButtonText: 'Cerrar',\n            });\n\n          } else if (error.status === 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message,\n            });\n          } else if (error.status === 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet',\n            });\n          }\n        }\n      })\n  }\n\n  updateOrden() {\n\n    this._serviceOrdenes.updateOrden(this.EditarOrden).subscribe((res: any) => {\n\n      if (res.status === 200) {\n\n        Swal.fire({\n          title: '¡La Orden se ha modificado correctamente!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar',\n        });\n\n        let element: HTMLElement = document.getElementsByClassName(\n          'btn-close-edit'\n        )[0] as HTMLElement\n        element.click();\n\n        this.getOrdenes()\n        this.EditarOrden = new EditarOrden('', '', '', new Date(), '', 0)\n\n      }\n    },\n      (error) => {\n        var errorMessage = <any>error;\n\n        if (errorMessage != null) {\n          var body = error.error;\n\n          if (error.status === 401) {\n            this.message = body.body.message\n          }\n\n          if (error.status === 404) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'info',\n              title: body.body.message,\n            });\n          }\n\n          if (error.status === 500) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: body.body.message,\n            });\n          }\n\n          if (error.status === 0) {\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'center',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              width: '300px',\n            });\n\n            Toast.fire({\n              icon: 'error',\n              title: 'Por favor compruebe su conexión de internet',\n            });\n          }\n        }\n      })\n  }\n\n  getDetallesOrden(id: any) {\n    this._serviceOrdenes.getDetallesOrdenes(id).subscribe((res: any) => {\n      this.detallesOrdenes = res.body[0]\n      this.usuariosOrdenesDetalles = res.body[0].Usuarios_Json\n    })\n  }\n\n  onEventClickUsuario(data: any){\n\n     this.addUsuario = data\n\n     this.statusEditAndSubmit = true\n\n  }\n\n  onEventClickUsuarioCancelar(){\n    this.statusEditAndSubmit = false\n    this.addUsuario = new AddUsuario('', '', '', '');\n  }\n\n  onSubmitEditUsuario(){\n\n    const {usuario_id, fecha_inicial, fecha_final, id } = this.addUsuario\n\n    let data = {\n        usuario_id,\n        fecha_final,\n        fecha_inicial,\n        id\n    }\n\n    console.log(data)\n\n     this._serviceOrdenes.updateUsuarioOrdenes(data).subscribe((res: any) => {\n\n      if (res.status === 200) {\n        Swal.fire({\n          title: 'El Usuario se ha modificado correctamente!',\n          icon: 'success',\n          confirmButtonText: 'Cerrar',\n        });\n        this.statusEditAndSubmit = false\n        this.getUsuarioOrdenes(this.addUsuario.orden_id);\n        this.addUsuario = {}\n        this.addUsuario = new AddUsuario('', '', '', '');\n      }\n    }, error => {\n      var message = <any>error;\n\n      if (message != null) {\n        var body = error.error\n        if (error.status === 401) {\n          this.messageAddUsuario = body.body.message\n        }\n\n        if (error.status === 404) {\n          Swal.fire({\n            title: body.body.message,\n            icon: 'warning',\n            confirmButtonText: 'Cerrar',\n          });\n        }\n\n        if (error.status == 500) {\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: body.body.message\n\n          })\n\n        } else if (error.status == 0) {\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'center',\n            showConfirmButton: false,\n            timer: 4000,\n            timerProgressBar: true,\n            width: '300px'\n          })\n\n          Toast.fire({\n            icon: 'error',\n            title: 'Por favor compruebe su conexión de internet'\n\n          })\n        }\n      }\n    })\n\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}