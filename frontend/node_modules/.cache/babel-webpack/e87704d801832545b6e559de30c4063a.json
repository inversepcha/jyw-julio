{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"selector\"];\nconst _c1 = [[[\"option\"], [\"optgroup\"]]];\nconst _c2 = [\"option, optgroup\"];\n\nclass NgSelect2Component {\n  // private style = `CSS`;\n  constructor(renderer, zone, _element) {\n    this.renderer = renderer;\n    this.zone = zone;\n    this._element = _element; // value for placeholder\n\n    this.placeholder = '';\n    this.dropdownParent = '';\n    this.allowClear = false; // enable / disable select2\n\n    this.disabled = false; // Specify the select's ID\n\n    this.id = null; // Specify the select's class(es)\n\n    this.class = null; // Specify the select's required attribute\n\n    this.required = null; // emitter when value is changed\n\n    this.valueChanged = new EventEmitter();\n    this.element = undefined;\n    this.check = false;\n\n    this.propagateChange = value => {};\n  }\n\n  ngDoCheck() {\n    if (!this.element) {\n      return;\n    }\n  }\n\n  ngOnInit() {// if (this.cssImport) {\n    //   const head = document.getElementsByTagName('head')[0];\n    //   const link: any = head.children[head.children.length - 1];\n    //   if (!link.version) {\n    //     const newLink = this.renderer.createElement(head, 'style');\n    //     this.renderer.setElementProperty(newLink, 'type', 'text/css');\n    //     this.renderer.setElementProperty(newLink, 'version', 'select2');\n    //     this.renderer.setElementProperty(newLink, 'innerHTML', this.style);\n    //   }\n    // }\n  }\n\n  ngOnChanges(changes) {\n    if (!this.element) {\n      return;\n    }\n\n    if (changes['data'] && JSON.stringify(changes['data'].previousValue) !== JSON.stringify(changes['data'].currentValue)) {\n      this.initPlugin();\n      const newValue = this.value;\n      this.setElementValue(newValue);\n      this.valueChanged.emit(newValue);\n      this.propagateChange(newValue);\n    }\n\n    if (changes['value'] && changes['value'].previousValue !== changes['value'].currentValue) {\n      const newValue = changes['value'].currentValue;\n      this.setElementValue(newValue);\n      this.valueChanged.emit(newValue);\n      this.propagateChange(newValue);\n    }\n\n    if (changes['disabled'] && changes['disabled'].previousValue !== changes['disabled'].currentValue) {\n      this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n    }\n\n    if (changes['placeholder'] && changes['placeholder'].previousValue !== changes['placeholder'].currentValue) {\n      this.element.data('select2').$container.find('.select2-selection__placeholder').text(this.placeholder);\n    }\n\n    if (changes['dropdownParent'] && changes['dropdownParent'].previousValue !== changes['dropdownParent'].currentValue) {\n      this.renderer.setAttribute(this.selector.nativeElement, 'data-dropdownParent', '#' + this.dropdownParent);\n    }\n\n    if (changes['allowClear'] && changes['allowClear'].previousValue !== changes['allowClear'].currentValue) {\n      this.renderer.setAttribute(this.selector.nativeElement, 'data-allow-clear', this.allowClear.toString());\n    }\n  }\n\n  ngAfterViewInit() {\n    this.element = jQuery(this.selector.nativeElement);\n    this.renderer.setAttribute(this.selector.nativeElement, 'data-dropdownParent', '#' + this.dropdownParent);\n    this.renderer.setAttribute(this.selector.nativeElement, 'data-allow-clear', this.allowClear.toString()); // console.log(this.selector.nativeElement);\n\n    this.initPlugin();\n\n    if (this.value !== undefined && this.value !== null) {\n      this.setElementValue(this.value);\n    }\n\n    this.element.on('select2:select select2:unselect change', e => {\n      // const newValue: string = (e.type === 'select2:unselect') ? '' : this.element.val();\n      const newValue = this.element.val();\n      this.valueChanged.emit(newValue);\n\n      if (e.type !== 'change') {\n        this.propagateChange(newValue);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.off('select2:select');\n    }\n  }\n\n  initPlugin() {\n    if (!this.element.select2) {\n      if (!this.check) {\n        this.check = true;\n        console.log('Please add Select2 library (js file) to the project.' + 'You can download it from https://github.com/select2/select2/tree/master/dist/js.');\n      }\n\n      return;\n    } // If select2 already initialized remove him and remove all tags inside\n\n\n    if (this.element.hasClass('select2-hidden-accessible') === true) {\n      this.element.select2('destroy');\n      this.renderer.setProperty(this.selector.nativeElement, 'innerHTML', '');\n    }\n\n    const options = {\n      data: this.data,\n      width: this.width ? this.width : 'resolve',\n      placeholder: this.placeholder\n    };\n\n    if (this.dropdownParent) {\n      options.dropdownParent = jQuery('#' + this.dropdownParent);\n    }\n\n    Object.assign(options, this.options);\n\n    if (options.matcher) {\n      jQuery.fn.select2.amd.require(['select2/compat/matcher'], oldMatcher => {\n        options.matcher = oldMatcher(options.matcher);\n        this.element.select2(options);\n\n        if (typeof this.value !== 'undefined') {\n          this.setElementValue(this.value);\n        }\n      });\n    } else {\n      this.element.select2(options);\n    }\n\n    this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n  }\n\n  setElementValue(newValue) {\n    // this.zone.run(() => {\n    if (Array.isArray(newValue)) {\n      for (const option of this.selector.nativeElement.options) {\n        this.renderer.setProperty(option, 'selected', newValue.indexOf(option.value) > -1);\n      }\n    } else {\n      this.renderer.setProperty(this.selector.nativeElement, 'value', newValue);\n    }\n\n    if (this.element) {\n      this.element.trigger('change.select2');\n    } // });\n\n  }\n\n  writeValue(value) {\n    if (value !== undefined) {\n      this.value = value;\n      this.setElementValue(value);\n    }\n  }\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {}\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\n  }\n\n}\n\nNgSelect2Component.ɵfac = function NgSelect2Component_Factory(t) {\n  return new (t || NgSelect2Component)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgSelect2Component.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgSelect2Component,\n  selectors: [[\"ng-select2\"]],\n  viewQuery: function NgSelect2Component_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selector = _t.first);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    placeholder: \"placeholder\",\n    dropdownParent: \"dropdownParent\",\n    allowClear: \"allowClear\",\n    value: \"value\",\n    width: \"width\",\n    disabled: \"disabled\",\n    id: \"id\",\n    class: \"class\",\n    required: \"required\",\n    options: \"options\"\n  },\n  outputs: {\n    valueChanged: \"valueChanged\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgSelect2Component),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 3,\n  vars: 3,\n  consts: [[\"selector\", \"\"]],\n  template: function NgSelect2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c1);\n      i0.ɵɵelementStart(0, \"select\", null, 0);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", ctx.id)(\"class\", ctx.class)(\"required\", ctx.required);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgSelect2Component, [{\n    type: Component,\n    args: [{\n      selector: 'ng-select2',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgSelect2Component),\n        multi: true\n      }],\n      template: \"<select #selector [attr.id]=\\\"id\\\" [attr.class]=\\\"class\\\" [attr.required]=\\\"required\\\">\\r\\n  <ng-content select=\\\"option, optgroup\\\">\\r\\n  </ng-content>\\r\\n</select>\\r\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    selector: [{\n      type: ViewChild,\n      args: ['selector', {\n        static: true\n      }]\n    }],\n    data: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    dropdownParent: [{\n      type: Input\n    }],\n    allowClear: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    class: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    valueChanged: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgSelect2Module {}\n\nNgSelect2Module.ɵfac = function NgSelect2Module_Factory(t) {\n  return new (t || NgSelect2Module)();\n};\n\nNgSelect2Module.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgSelect2Module\n});\nNgSelect2Module.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgSelect2Module, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgSelect2Component],\n      exports: [NgSelect2Component]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of ng-select2\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NgSelect2Component, NgSelect2Module };","map":{"version":3,"sources":["/home/juancamilo/Documentos/Developer/Api WEB/Projecto JYW/JYW/frontend/jyw/node_modules/ng-select2/fesm2020/ng-select2.mjs"],"names":["i0","EventEmitter","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","Input","Output","NgModule","NG_VALUE_ACCESSOR","CommonModule","NgSelect2Component","constructor","renderer","zone","_element","placeholder","dropdownParent","allowClear","disabled","id","class","required","valueChanged","element","undefined","check","propagateChange","value","ngDoCheck","ngOnInit","ngOnChanges","changes","JSON","stringify","previousValue","currentValue","initPlugin","newValue","setElementValue","emit","setProperty","selector","nativeElement","data","$container","find","text","setAttribute","toString","ngAfterViewInit","jQuery","on","e","val","type","ngOnDestroy","off","select2","console","log","hasClass","options","width","Object","assign","matcher","fn","amd","require","oldMatcher","Array","isArray","option","indexOf","trigger","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","ɵfac","Renderer2","NgZone","ElementRef","ɵcmp","provide","useExisting","multi","args","encapsulation","None","changeDetection","OnPush","providers","template","static","NgSelect2Module","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nclass NgSelect2Component {\r\n    // private style = `CSS`;\r\n    constructor(renderer, zone, _element) {\r\n        this.renderer = renderer;\r\n        this.zone = zone;\r\n        this._element = _element;\r\n        // value for placeholder\r\n        this.placeholder = '';\r\n        this.dropdownParent = '';\r\n        this.allowClear = false;\r\n        // enable / disable select2\r\n        this.disabled = false;\r\n        // Specify the select's ID\r\n        this.id = null;\r\n        // Specify the select's class(es)\r\n        this.class = null;\r\n        // Specify the select's required attribute\r\n        this.required = null;\r\n        // emitter when value is changed\r\n        this.valueChanged = new EventEmitter();\r\n        this.element = undefined;\r\n        this.check = false;\r\n        this.propagateChange = (value) => { };\r\n    }\r\n    ngDoCheck() {\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        // if (this.cssImport) {\r\n        //   const head = document.getElementsByTagName('head')[0];\r\n        //   const link: any = head.children[head.children.length - 1];\r\n        //   if (!link.version) {\r\n        //     const newLink = this.renderer.createElement(head, 'style');\r\n        //     this.renderer.setElementProperty(newLink, 'type', 'text/css');\r\n        //     this.renderer.setElementProperty(newLink, 'version', 'select2');\r\n        //     this.renderer.setElementProperty(newLink, 'innerHTML', this.style);\r\n        //   }\r\n        // }\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        if (changes['data'] && JSON.stringify(changes['data'].previousValue) !== JSON.stringify(changes['data'].currentValue)) {\r\n            this.initPlugin();\r\n            const newValue = this.value;\r\n            this.setElementValue(newValue);\r\n            this.valueChanged.emit(newValue);\r\n            this.propagateChange(newValue);\r\n        }\r\n        if (changes['value'] && changes['value'].previousValue !== changes['value'].currentValue) {\r\n            const newValue = changes['value'].currentValue;\r\n            this.setElementValue(newValue);\r\n            this.valueChanged.emit(newValue);\r\n            this.propagateChange(newValue);\r\n        }\r\n        if (changes['disabled'] && changes['disabled'].previousValue !== changes['disabled'].currentValue) {\r\n            this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\r\n        }\r\n        if (changes['placeholder'] && changes['placeholder'].previousValue !== changes['placeholder'].currentValue) {\r\n            this.element.data('select2').$container.find('.select2-selection__placeholder').text(this.placeholder);\r\n        }\r\n        if (changes['dropdownParent'] && changes['dropdownParent'].previousValue !== changes['dropdownParent'].currentValue) {\r\n            this.renderer.setAttribute(this.selector.nativeElement, 'data-dropdownParent', '#' + this.dropdownParent);\r\n        }\r\n        if (changes['allowClear'] && changes['allowClear'].previousValue !== changes['allowClear'].currentValue) {\r\n            this.renderer.setAttribute(this.selector.nativeElement, 'data-allow-clear', this.allowClear.toString());\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        this.element = jQuery(this.selector.nativeElement);\r\n        this.renderer.setAttribute(this.selector.nativeElement, 'data-dropdownParent', '#' + this.dropdownParent);\r\n        this.renderer.setAttribute(this.selector.nativeElement, 'data-allow-clear', this.allowClear.toString());\r\n        // console.log(this.selector.nativeElement);\r\n        this.initPlugin();\r\n        if (this.value !== undefined && this.value !== null) {\r\n            this.setElementValue(this.value);\r\n        }\r\n        this.element.on('select2:select select2:unselect change', (e) => {\r\n            // const newValue: string = (e.type === 'select2:unselect') ? '' : this.element.val();\r\n            const newValue = this.element.val();\r\n            this.valueChanged.emit(newValue);\r\n            if (e.type !== 'change') {\r\n                this.propagateChange(newValue);\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.element) {\r\n            this.element.off('select2:select');\r\n        }\r\n    }\r\n    initPlugin() {\r\n        if (!this.element.select2) {\r\n            if (!this.check) {\r\n                this.check = true;\r\n                console.log('Please add Select2 library (js file) to the project.' +\r\n                    'You can download it from https://github.com/select2/select2/tree/master/dist/js.');\r\n            }\r\n            return;\r\n        }\r\n        // If select2 already initialized remove him and remove all tags inside\r\n        if (this.element.hasClass('select2-hidden-accessible') === true) {\r\n            this.element.select2('destroy');\r\n            this.renderer.setProperty(this.selector.nativeElement, 'innerHTML', '');\r\n        }\r\n        const options = {\r\n            data: this.data,\r\n            width: (this.width) ? this.width : 'resolve',\r\n            placeholder: this.placeholder\r\n        };\r\n        if (this.dropdownParent) {\r\n            options.dropdownParent = jQuery('#' + this.dropdownParent);\r\n        }\r\n        Object.assign(options, this.options);\r\n        if (options.matcher) {\r\n            jQuery.fn.select2.amd.require(['select2/compat/matcher'], (oldMatcher) => {\r\n                options.matcher = oldMatcher(options.matcher);\r\n                this.element.select2(options);\r\n                if (typeof this.value !== 'undefined') {\r\n                    this.setElementValue(this.value);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.element.select2(options);\r\n        }\r\n        this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\r\n    }\r\n    setElementValue(newValue) {\r\n        // this.zone.run(() => {\r\n        if (Array.isArray(newValue)) {\r\n            for (const option of this.selector.nativeElement.options) {\r\n                this.renderer.setProperty(option, 'selected', (newValue.indexOf(option.value) > -1));\r\n            }\r\n        }\r\n        else {\r\n            this.renderer.setProperty(this.selector.nativeElement, 'value', newValue);\r\n        }\r\n        if (this.element) {\r\n            this.element.trigger('change.select2');\r\n        }\r\n        // });\r\n    }\r\n    writeValue(value) {\r\n        if (value !== undefined) {\r\n            this.value = value;\r\n            this.setElementValue(value);\r\n        }\r\n    }\r\n    registerOnChange(fn) {\r\n        this.propagateChange = fn;\r\n    }\r\n    registerOnTouched() {\r\n    }\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.renderer.setProperty(this.selector.nativeElement, 'disabled', this.disabled);\r\n    }\r\n}\r\nNgSelect2Component.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgSelect2Component, deps: [{ token: i0.Renderer2 }, { token: i0.NgZone }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\r\nNgSelect2Component.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NgSelect2Component, selector: \"ng-select2\", inputs: { data: \"data\", placeholder: \"placeholder\", dropdownParent: \"dropdownParent\", allowClear: \"allowClear\", value: \"value\", width: \"width\", disabled: \"disabled\", id: \"id\", class: \"class\", required: \"required\", options: \"options\" }, outputs: { valueChanged: \"valueChanged\" }, providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => NgSelect2Component),\r\n            multi: true,\r\n        },\r\n    ], viewQueries: [{ propertyName: \"selector\", first: true, predicate: [\"selector\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<select #selector [attr.id]=\\\"id\\\" [attr.class]=\\\"class\\\" [attr.required]=\\\"required\\\">\\r\\n  <ng-content select=\\\"option, optgroup\\\">\\r\\n  </ng-content>\\r\\n</select>\\r\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgSelect2Component, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ng-select2', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            useExisting: forwardRef(() => NgSelect2Component),\r\n                            multi: true,\r\n                        },\r\n                    ], template: \"<select #selector [attr.id]=\\\"id\\\" [attr.class]=\\\"class\\\" [attr.required]=\\\"required\\\">\\r\\n  <ng-content select=\\\"option, optgroup\\\">\\r\\n  </ng-content>\\r\\n</select>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.NgZone }, { type: i0.ElementRef }]; }, propDecorators: { selector: [{\r\n                type: ViewChild,\r\n                args: ['selector', { static: true }]\r\n            }], data: [{\r\n                type: Input\r\n            }], placeholder: [{\r\n                type: Input\r\n            }], dropdownParent: [{\r\n                type: Input\r\n            }], allowClear: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], width: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], id: [{\r\n                type: Input\r\n            }], class: [{\r\n                type: Input\r\n            }], required: [{\r\n                type: Input\r\n            }], options: [{\r\n                type: Input\r\n            }], valueChanged: [{\r\n                type: Output\r\n            }] } });\n\nclass NgSelect2Module {\r\n}\r\nNgSelect2Module.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgSelect2Module, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgSelect2Module.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgSelect2Module, declarations: [NgSelect2Component], imports: [CommonModule], exports: [NgSelect2Component] });\r\nNgSelect2Module.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgSelect2Module, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgSelect2Module, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    declarations: [NgSelect2Component],\r\n                    exports: [NgSelect2Component]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ng-select2\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgSelect2Component, NgSelect2Module };\n"]},"metadata":{},"sourceType":"module"}