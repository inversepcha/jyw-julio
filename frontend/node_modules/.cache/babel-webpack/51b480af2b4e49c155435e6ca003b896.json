{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { environment } from \"../../../environments/environment\";\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../service/ordenes/ordenes.service\";\nimport * as i4 from \"src/app/service/liquidos_penetrantes/liquidos-penetrantes.service\";\nimport * as i5 from \"../../service/rutas-informes/informes-rutas.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/stepper\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"ngx-quill\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"@angular/material/icon\";\nimport * as i15 from \"@angular/material/grid-list\";\nimport * as i16 from \"ng-image-fullscreen-view\";\nimport * as i17 from \"@angular/material/card\";\nconst _c0 = [\"formFileSmRegistroFotos\"];\n\nfunction LiquidosPenetrantesComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtext(2, \"Proyecto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 9);\n    i0.ɵɵtext(6, \"Sub-proyecto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 10);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵtext(10, \"Consecutivo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 10);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 9);\n    i0.ɵɵtext(14, \"Fecha de inicio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 10);\n    i0.ɵɵtext(16);\n    i0.ɵɵpipe(17, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 9);\n    i0.ɵɵtext(19, \"Lugar de inspecci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 10);\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.detallesOrden.proyecto);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.detallesOrden.subProyecto);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.detallesOrden.orden_consecutivo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(17, 5, ctx_r0.detallesOrden.fecha_visita, \"mediumDate\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.detallesOrden.lugar_visita);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Normas\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Materiales utilizados\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_button_59_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_button_59_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.cancelarEditMaterialesUtilizados();\n    });\n    i0.ɵɵtext(1, \" Cancela \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_tr_64_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 55);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_tr_64_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const itemMaterial_r21 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.onClickEditMaterialesUtilizados(itemMaterial_r21);\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemMaterial_r21 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemMaterial_r21.detalles);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemMaterial_r21.fabricante);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemMaterial_r21.ref_comercial);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemMaterial_r21.lotes_n);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Normas para los procedimientos y m\\u00E9todos de aplicaci\\u00F3n\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_104_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Par\\u00E1metros de operaci\\u00F3n\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_button_132_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_button_132_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.cancelarEditMaterialesUtilizados();\n    });\n    i0.ɵɵtext(1, \" Cancela \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_tr_137_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 55);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_tr_137_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r28);\n      const itemParametros_r26 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.onClickEditMaterialesUtilizados(itemParametros_r26);\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemParametros_r26 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r26.actividad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r26.tiempo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r26.temperatura);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r26.aplicacion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemParametros_r26.iluminacion);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_145_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 56);\n    i0.ɵɵtext(1, \" Elementos inspeccionados \");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_157_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Interpretacion y evaluaci\\u00F3n de resultados\");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_button_188_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_button_188_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext(2);\n      return ctx_r29.cancelarEditMaterialesUtilizados();\n    });\n    i0.ɵɵtext(1, \" Cancela \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_tr_193_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 55);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_tr_193_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const itemInter_r31 = restoredCtx.$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return ctx_r32.onClickEditInterpretacionEvaluacion(itemInter_r31);\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const itemInter_r31 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r31.item);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r31.elemento);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r31.indicacion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r31.calificacion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(itemInter_r31.observaciones);\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_201_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 56);\n    i0.ɵɵtext(1, \" Observaciones \");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_ng_template_213_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 57);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_ng_template_213_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.onGetRegistroFotos();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(1, \" Registro Fotogr\\u00E1fico \");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_mat_grid_tile_234_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelementStart(1, \"img\", 58);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_mat_grid_tile_234_Template_img_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r39);\n      const i_r37 = restoredCtx.index;\n      const ctx_r38 = i0.ɵɵnextContext(2);\n      return ctx_r38.showLightboxRegistroFotos(i_r37);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mat-grid-tile-footer\");\n    i0.ɵɵelementStart(3, \"h3\", 59);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 59);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 60);\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"restore_from_trash\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r36 = ctx.$implicit;\n    const i_r37 = ctx.index;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"alt\", item_r36.title);\n    i0.ɵɵproperty(\"src\", ctx_r18.url + \"/img-uploads/\" + item_r36.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Registro Fotogr\\u00E1fico N\\u00B0 \", i_r37 + 1, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r36.title, \" \");\n  }\n}\n\nfunction LiquidosPenetrantesComponent_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 11);\n    i0.ɵɵelementStart(1, \"mat-stepper\", 12, 13);\n    i0.ɵɵlistener(\"selectionChange\", function LiquidosPenetrantesComponent_form_7_Template_mat_stepper_selectionChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.setIndex($event);\n    });\n    i0.ɵɵelementStart(3, \"mat-step\", 14);\n    i0.ɵɵelementStart(4, \"form\", 15);\n    i0.ɵɵtemplate(5, LiquidosPenetrantesComponent_form_7_ng_template_5_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelementStart(6, \"div\", 17);\n    i0.ɵɵelementStart(7, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Normas para el criterio de evaluaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"textarea\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 17);\n    i0.ɵɵelementStart(12, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(13, \"mat-label\");\n    i0.ɵɵtext(14, \"Procedimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"textarea\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 17);\n    i0.ɵɵelementStart(17, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(18, \"mat-label\");\n    i0.ɵɵtext(19, \"Especificaci\\u00F3n material base\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"textarea\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 17);\n    i0.ɵɵelementStart(22, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(23, \"mat-label\");\n    i0.ɵɵtext(24, \"Proceso de soldadura\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"textarea\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 17);\n    i0.ɵɵelementStart(27, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(28, \"mat-label\");\n    i0.ɵɵtext(29, \"Equipos utilizados\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(30, \"textarea\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 20);\n    i0.ɵɵelementStart(32, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_32_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return ctx_r42.NormasId ? ctx_r42.onEditNormas() : ctx_r42.onSubmitNormas();\n    });\n    i0.ɵɵelementStart(33, \"span\", 22);\n    i0.ɵɵtext(34, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(35, \"span\", 23);\n    i0.ɵɵelement(36, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"mat-step\", 14);\n    i0.ɵɵelementStart(38, \"form\", 15);\n    i0.ɵɵtemplate(39, LiquidosPenetrantesComponent_form_7_ng_template_39_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelement(40, \"br\");\n    i0.ɵɵelementStart(41, \"div\", 25);\n    i0.ɵɵelementStart(42, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(43, \"mat-label\");\n    i0.ɵɵtext(44, \"Detalles\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(45, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(47, \"mat-label\");\n    i0.ɵɵtext(48, \"Fabricante\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(49, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(51, \"mat-label\");\n    i0.ɵɵtext(52, \"Referencia comercial\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(53, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(54, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(55, \"mat-label\");\n    i0.ɵɵtext(56, \"Lote N\\u00B0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(57, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"div\", 27);\n    i0.ɵɵtemplate(59, LiquidosPenetrantesComponent_form_7_button_59_Template, 2, 0, \"button\", 28);\n    i0.ɵɵelementStart(60, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_60_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return ctx_r43.MaterialesUtilizadosStatus == false ? ctx_r43.onSubmitMaterialesUtilizados() : ctx_r43.onEditarMaterialesUtilizados();\n    });\n    i0.ɵɵtext(61);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(62, \"table\", 30);\n    i0.ɵɵelementStart(63, \"tbody\");\n    i0.ɵɵtemplate(64, LiquidosPenetrantesComponent_form_7_tr_64_Template, 9, 4, \"tr\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(65, \"div\", 27);\n    i0.ɵɵelementStart(66, \"button\", 32);\n    i0.ɵɵtext(67, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(68, \"button\", 33);\n    i0.ɵɵtext(69, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(70, \"mat-step\", 14);\n    i0.ɵɵelementStart(71, \"form\", 15);\n    i0.ɵɵtemplate(72, LiquidosPenetrantesComponent_form_7_ng_template_72_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelementStart(73, \"div\", 17);\n    i0.ɵɵelementStart(74, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(75, \"mat-label\");\n    i0.ɵɵtext(76, \"Normas para los procedimientos y m\\u00E9todos de aplicaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(77, \"textarea\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(78, \"p\", 34);\n    i0.ɵɵtext(79, \"Tipo y m\\u00E9todo: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(80, \"div\", 25);\n    i0.ɵɵelementStart(81, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(82, \"mat-label\");\n    i0.ɵɵtext(83, \"Tipo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(84, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(85, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(86, \"mat-label\");\n    i0.ɵɵtext(87, \"M\\u00E9todo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(88, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(89, \"div\", 17);\n    i0.ɵɵelementStart(90, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(91, \"mat-label\");\n    i0.ɵɵtext(92, \"Procedimiento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(93, \"textarea\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(94, \"div\", 27);\n    i0.ɵɵelementStart(95, \"button\", 32);\n    i0.ɵɵtext(96, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(97, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_97_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return ctx_r44.NormasProceId ? ctx_r44.onEditNormasProce() : ctx_r44.onSubmitNormasProce();\n    });\n    i0.ɵɵelementStart(98, \"span\", 22);\n    i0.ɵɵtext(99, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(100, \"span\", 23);\n    i0.ɵɵelement(101, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(102, \"mat-step\", 14);\n    i0.ɵɵelementStart(103, \"form\", 15);\n    i0.ɵɵtemplate(104, LiquidosPenetrantesComponent_form_7_ng_template_104_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelement(105, \"br\");\n    i0.ɵɵelementStart(106, \"div\", 17);\n    i0.ɵɵelementStart(107, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(108, \"mat-label\");\n    i0.ɵɵtext(109, \"Actividad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(110, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(111, \"div\", 17);\n    i0.ɵɵelementStart(112, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(113, \"mat-label\");\n    i0.ɵɵtext(114, \"Tiempo de permanencia\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(115, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(116, \"div\", 17);\n    i0.ɵɵelementStart(117, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(118, \"mat-label\");\n    i0.ɵɵtext(119, \"Temperatura\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(120, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(121, \"div\", 17);\n    i0.ɵɵelementStart(122, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(123, \"mat-label\");\n    i0.ɵɵtext(124, \"Aplicaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(125, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(126, \"div\", 17);\n    i0.ɵɵelementStart(127, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(128, \"mat-label\");\n    i0.ɵɵtext(129, \"Iluminaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(130, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(131, \"div\", 27);\n    i0.ɵɵtemplate(132, LiquidosPenetrantesComponent_form_7_button_132_Template, 2, 0, \"button\", 28);\n    i0.ɵɵelementStart(133, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_133_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return ctx_r45.ParametrosOpStatus == false ? ctx_r45.onSubmitParametrosOp() : ctx_r45.onEditarParametrosOp();\n    });\n    i0.ɵɵtext(134);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(135, \"table\", 30);\n    i0.ɵɵelementStart(136, \"tbody\");\n    i0.ɵɵtemplate(137, LiquidosPenetrantesComponent_form_7_tr_137_Template, 11, 5, \"tr\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(138, \"div\", 27);\n    i0.ɵɵelementStart(139, \"button\", 32);\n    i0.ɵɵtext(140, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(141, \"button\", 33);\n    i0.ɵɵtext(142, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(143, \"mat-step\", 14);\n    i0.ɵɵelementStart(144, \"form\", 15);\n    i0.ɵɵtemplate(145, LiquidosPenetrantesComponent_form_7_ng_template_145_Template, 2, 0, \"ng-template\", 16);\n    i0.ɵɵelement(146, \"quill-editor\", 36);\n    i0.ɵɵelementStart(147, \"div\", 37);\n    i0.ɵɵelementStart(148, \"button\", 32);\n    i0.ɵɵtext(149, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(150, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_150_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return ctx_r46.ElementosInspeccionadosId ? ctx_r46.onEditarElementosInspeccionados() : ctx_r46.onSubmitElementosInspeccionados();\n    });\n    i0.ɵɵelementStart(151, \"span\", 22);\n    i0.ɵɵtext(152, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(153, \"span\", 23);\n    i0.ɵɵelement(154, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(155, \"mat-step\", 14);\n    i0.ɵɵelementStart(156, \"form\", 15);\n    i0.ɵɵtemplate(157, LiquidosPenetrantesComponent_form_7_ng_template_157_Template, 1, 0, \"ng-template\", 16);\n    i0.ɵɵelement(158, \"br\");\n    i0.ɵɵelementStart(159, \"div\", 17);\n    i0.ɵɵelementStart(160, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(161, \"mat-label\");\n    i0.ɵɵtext(162, \"Elemento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(163, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(164, \"div\", 17);\n    i0.ɵɵelementStart(165, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(166, \"mat-label\");\n    i0.ɵɵtext(167, \"Indicaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(168, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(169, \"div\", 17);\n    i0.ɵɵelementStart(170, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(171, \"mat-label\");\n    i0.ɵɵtext(172, \"Calificaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(173, \"mat-select\", 38);\n    i0.ɵɵelementStart(174, \"mat-option\", 39);\n    i0.ɵɵtext(175, \"Conforme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(176, \"mat-option\", 39);\n    i0.ɵɵtext(177, \"Conforme luego x Reparaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(178, \"mat-option\", 39);\n    i0.ɵɵtext(179, \"No conforme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(180, \"mat-option\", 39);\n    i0.ɵɵtext(181, \"Inspeccionar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(182, \"div\", 17);\n    i0.ɵɵelementStart(183, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(184, \"mat-label\");\n    i0.ɵɵtext(185, \"Observaciones\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(186, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(187, \"div\", 27);\n    i0.ɵɵtemplate(188, LiquidosPenetrantesComponent_form_7_button_188_Template, 2, 0, \"button\", 28);\n    i0.ɵɵelementStart(189, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_189_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return ctx_r47.InterpretacionEvaluacionStatus == false ? ctx_r47.onSubmitInterpretacion() : ctx_r47.onEditarInterpretacion();\n    });\n    i0.ɵɵtext(190);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(191, \"table\", 30);\n    i0.ɵɵelementStart(192, \"tbody\");\n    i0.ɵɵtemplate(193, LiquidosPenetrantesComponent_form_7_tr_193_Template, 11, 5, \"tr\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(194, \"div\", 27);\n    i0.ɵɵelementStart(195, \"button\", 32);\n    i0.ɵɵtext(196, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(197, \"button\", 33);\n    i0.ɵɵtext(198, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(199, \"mat-step\", 14);\n    i0.ɵɵelementStart(200, \"form\", 15);\n    i0.ɵɵtemplate(201, LiquidosPenetrantesComponent_form_7_ng_template_201_Template, 2, 0, \"ng-template\", 16);\n    i0.ɵɵelement(202, \"quill-editor\", 40);\n    i0.ɵɵelementStart(203, \"div\", 37);\n    i0.ɵɵelementStart(204, \"button\", 32);\n    i0.ɵɵtext(205, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(206, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_206_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return ctx_r48.ObservacionesId ? ctx_r48.onEditarObservaciones() : ctx_r48.onSubmitObservaciones();\n    });\n    i0.ɵɵelementStart(207, \"span\", 22);\n    i0.ɵɵtext(208, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(209, \"span\", 23);\n    i0.ɵɵelement(210, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(211, \"mat-step\", 14);\n    i0.ɵɵelementStart(212, \"form\", 15);\n    i0.ɵɵtemplate(213, LiquidosPenetrantesComponent_form_7_ng_template_213_Template, 2, 0, \"ng-template\", 16);\n    i0.ɵɵelement(214, \"br\");\n    i0.ɵɵelementStart(215, \"div\", 17);\n    i0.ɵɵelementStart(216, \"mat-form-field\", 18);\n    i0.ɵɵelementStart(217, \"mat-label\");\n    i0.ɵɵtext(218, \"Titulo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(219, \"input\", 26);\n    i0.ɵɵelementStart(220, \"mat-icon\", 41);\n    i0.ɵɵtext(221, \"title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(222, \"div\", 42);\n    i0.ɵɵelementStart(223, \"div\", 43);\n    i0.ɵɵelementStart(224, \"label\", 44);\n    i0.ɵɵtext(225, \"Seleccion las imagenes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(226, \"input\", 45, 46);\n    i0.ɵɵlistener(\"change\", function LiquidosPenetrantesComponent_form_7_Template_input_change_226_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.onPhotoSelectedRegistroFotos($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(228, \"div\", 47);\n    i0.ɵɵelementStart(229, \"button\", 48);\n    i0.ɵɵlistener(\"click\", function LiquidosPenetrantesComponent_form_7_Template_button_click_229_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return ctx_r50.onSubmitRegistroFotos();\n    });\n    i0.ɵɵtext(230, \" A\\u00F1adir \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(231, \"div\", 49);\n    i0.ɵɵelementStart(232, \"div\", 50);\n    i0.ɵɵelementStart(233, \"mat-grid-list\", 51);\n    i0.ɵɵtemplate(234, LiquidosPenetrantesComponent_form_7_mat_grid_tile_234_Template, 10, 4, \"mat-grid-tile\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(235, \"ng-image-fullscreen-view\", 53);\n    i0.ɵɵlistener(\"close\", function LiquidosPenetrantesComponent_form_7_Template_ng_image_fullscreen_view_close_235_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return ctx_r51.closeEventHandlerRegistroFotos();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(236, \"div\", 27);\n    i0.ɵɵelementStart(237, \"button\", 32);\n    i0.ɵɵtext(238, \" Atras \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(239, \"button\", 33);\n    i0.ɵɵtext(240, \" Siguiente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Normas);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"selectedIndex\", ctx_r1.autoSaveIndex.indexStepper);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Normas);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Normas);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"placeholder\", \"Normas para el criterio de evaluaci\\u00F3n\")(\"formControlName\", \"norma\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"placeholder\", \"Procedimiento\")(\"formControlName\", \"procedimiento\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"placeholder\", \"Especificaci\\u00F3n material base\")(\"formControlName\", \"esp_material_base\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"placeholder\", \"Proceso de soldadura\")(\"formControlName\", \"process_soldadura\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"placeholder\", \"Equipos utilizados\")(\"formControlName\", \"equipos_utilizados\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Normas.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Materiales_Utilizados);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Materiales_Utilizados);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"detalles\")(\"placeholder\", \"Detalles\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"fabricante\")(\"placeholder\", \"Fabricante\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"ref_comercial\")(\"placeholder\", \"Referencia comercial\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", \"lotes_n\")(\"placeholder\", \"Lote N\\u00B0\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.MaterialesUtilizadosStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Materiales_Utilizados.status != \"VALID\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.MaterialesUtilizadosStatus == false ? \"A\\u00F1adir\" : \"Editar\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.MaterialesUtilizados);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Normas_ProcessModel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Normas_ProcessModel);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"placeholder\", \"Normas para los procedimientos y m\\u00E9todos de aplicaci\\u00F3n\")(\"formControlName\", \"normas_process\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"placeholder\", \"Tipo\")(\"formControlName\", \"tipo\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"placeholder\", \"M\\u00E9todo\")(\"formControlName\", \"metodo\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"placeholder\", \"Procedimiento\")(\"formControlName\", \"procedimiento\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Normas_ProcessModel.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Parametros_operacion);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Parametros_operacion);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"actividad\")(\"placeholder\", \"Actividad\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"tiempo\")(\"placeholder\", \"Tiempo de permanencia\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"temperatura\")(\"placeholder\", \"Temperatura\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"aplicacion\")(\"placeholder\", \"Aplicaci\\u00F3n\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"iluminacion\")(\"placeholder\", \"Iluminaci\\u00F3n\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.MaterialesUtilizadosStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Parametros_operacion.status != \"VALID\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.ParametrosOpStatus == false ? \"A\\u00F1adir\" : \"Editar\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.ParametrosOp);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.ElementosInspeccionados);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.ElementosInspeccionados);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"elementos_inspeccionados\")(\"modules\", ctx_r1.quillModules);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.ElementosInspeccionados.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Interpretacion_evaluacion);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Interpretacion_evaluacion);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"elemento\")(\"placeholder\", \"Elemento\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"indicacion\")(\"placeholder\", \"Indicaci\\u00F3n\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControlName\", \"calificacion\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", \"C\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"C(xR)\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"NC\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", \"I\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControlName\", \"observaciones\")(\"placeholder\", \"Observaciones\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.MaterialesUtilizadosStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Interpretacion_evaluacion.status != \"VALID\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.InterpretacionEvaluacionStatus == false ? \"A\\u00F1adir\" : \"Editar\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.InterpretacionEvaluacion);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.Observaciones);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.Observaciones);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", \"observaciones\")(\"modules\", ctx_r1.quillModules);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.Observaciones.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"stepControl\", ctx_r1.RegistroFotosForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.RegistroFotosForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formControlName\", \"title\")(\"placeholder\", \"Titulo\");\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.RegistroFotos);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"images\", ctx_r1.imageObjectRegistroFotos)(\"imageIndex\", ctx_r1.selectedImageIndexRegistroFotos)(\"show\", ctx_r1.showFlagRegistroFotos);\n  }\n}\n\nexport let LiquidosPenetrantesComponent = /*#__PURE__*/(() => {\n  class LiquidosPenetrantesComponent {\n    constructor(_formBuilder, _route, _activatedRoute, _ordenesService, _liquidos_penetrantes, _informesRutasService) {\n      this._formBuilder = _formBuilder;\n      this._route = _route;\n      this._activatedRoute = _activatedRoute;\n      this._ordenesService = _ordenesService;\n      this._liquidos_penetrantes = _liquidos_penetrantes;\n      this._informesRutasService = _informesRutasService;\n      this.quillModules = {\n        toolbar: [['bold', 'italic', 'underline'], [{\n          align: []\n        }, {\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], ['clean']]\n      };\n      this.isLinear = false;\n      this.NormasBtnSave = true;\n      this.NormasStatus = false;\n      this.MaterialesUtilizadosStatus = false;\n      this.MaterialesUtilizados = [];\n      this.NormasProceBtnSave = true;\n      this.NormasProceStatus = false;\n      this.ParametrosOpStatus = false;\n      this.ParametrosOp = [];\n      this.ElementosInspeccionadosBtnSave = true;\n      this.ElementosInspeccionadosStatus = false;\n      this.InterpretacionEvaluacionStatus = false;\n      this.InterpretacionEvaluacion = [];\n      this.ObservacionesBtnSave = true;\n      this.ObservacionesStatus = false;\n      this.RegistroFotos = [];\n      this.showFlagRegistroFotos = false;\n      this.selectedImageIndexRegistroFotos = -1;\n      this.imageObjectRegistroFotos = [];\n      this.ResultadosStatus = false;\n      this.url = environment.url;\n    }\n\n    ngOnInit() {\n      this.forms();\n      this.onGetDetallesOrden();\n      this.onGet();\n    }\n\n    forms() {\n      this.Normas = this._formBuilder.group({\n        norma: ['', [Validators.required]],\n        procedimiento: ['', [Validators.required]],\n        esp_material_base: ['', [Validators.required]],\n        process_soldadura: ['', [Validators.required]],\n        equipos_utilizados: ['', [Validators.required]]\n      });\n      this.Materiales_Utilizados = this._formBuilder.group({\n        detalles: ['', [Validators.required]],\n        fabricante: ['', [Validators.required]],\n        ref_comercial: ['', [Validators.required]],\n        lotes_n: ['', [Validators.required]]\n      });\n      this.Normas_ProcessModel = this._formBuilder.group({\n        normas_process: ['', [Validators.required]],\n        tipo: ['', [Validators.required]],\n        metodo: ['', [Validators.required]],\n        procedimiento: ['', [Validators.required]]\n      });\n      this.Parametros_operacion = this._formBuilder.group({\n        actividad: ['', [Validators.required]],\n        tiempo: ['', [Validators.required]],\n        temperatura: ['', [Validators.required]],\n        aplicacion: ['', [Validators.required]],\n        iluminacion: ['', [Validators.required]]\n      });\n      this.ElementosInspeccionados = this._formBuilder.group({\n        elementos_inspeccionados: ['', [Validators.required, Validators.maxLength(50)]]\n      });\n      this.Interpretacion_evaluacion = this._formBuilder.group({\n        elemento: ['', [Validators.required]],\n        indicacion: ['', [Validators.required]],\n        calificacion: ['', [Validators.required]],\n        observaciones: ['', [Validators.required]]\n      });\n      this.Observaciones = this._formBuilder.group({\n        observaciones: ['', [Validators.required]]\n      });\n      this.RegistroFotosForm = this._formBuilder.group({\n        title: ['', [Validators.required]]\n      });\n    }\n\n    onGet() {\n      this.onGetAutoSave();\n      this.onGetDetallesOrden();\n      this.onGetNormas();\n      this.onGetMaterialesUtilizados();\n      this.onGetNormasProcess();\n      this.onGetParametrosOp();\n      this.onGetInterpretacion();\n      this.onGetObservaciones();\n      this.onGetRegistroFotos();\n      this.onGetElementosInspeccionados();\n    }\n\n    onGetAutoSave() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._informesRutasService.getAutoSaveStepper(orden_id, informe_id).subscribe(res => {\n          this.statusAutoSave = true;\n          this.autoSaveIndex = res.body;\n          console.log(res.body); // this.windowOnloadCanvasElaboro()\n          // this.windowOnloadCanvasReviso()\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.statusAutoSave = false;\n              this.autoSaveIndex = body.body;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    setIndex(event) {\n      if (this.statusAutoSave == true) {\n        let data = {\n          indexStepper: event.selectedIndex\n        };\n\n        this._informesRutasService.putAutoSaveStepper(data, this.autoSaveIndex._id).subscribe(res => {\n          this.onGetAutoSave();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      } else if (this.statusAutoSave == false) {\n        this._activatedRoute.params.subscribe(params => {\n          const {\n            orden_id,\n            informe_id\n          } = params;\n          let data = {\n            indexStepper: event.selectedIndex,\n            orden_id,\n            informe_id\n          };\n\n          this._informesRutasService.postAutoSaveStepper(data).subscribe(res => {\n            this.onGetAutoSave();\n          }, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status === 404) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'info',\n                  title: body.message\n                });\n              } else if (error.status === 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.message\n                });\n              } else if (error.status === 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        });\n      }\n    }\n\n    onGetDetallesOrden() {\n      this._activatedRoute.params.subscribe(params => {\n        const orden_id = params['orden_id'];\n        const informe_id = params['informe_id'];\n\n        this._ordenesService.getDetallesOrdenes(orden_id).subscribe(res => {\n          this.detallesOrden = res.body[0];\n        });\n\n        this._liquidos_penetrantes.getDetallesInforme(informe_id).subscribe(res => {\n          this.detallesInforme = res.body[0]; // console.log(res.body)\n          // this.NormasId = res.body._id\n        });\n      });\n    }\n\n    onGetNormas() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getNormasLiquidos(orden_id, informe_id).subscribe(res => {\n          this.NormasId = res.body._id;\n          console.log('normas', res.body);\n          this.Normas.patchValue(res.body);\n          this.NormasBtnSave = false;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.NormasStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onSubmitNormas() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Normas.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postNormasLiquidos(data).subscribe(res => {\n          this.onGetNormas();\n          this.Normas.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditNormas() {\n      if (this.NormasId) {\n        let data = Object.assign({}, this.Normas.value); // console.log(data)\n\n        this._liquidos_penetrantes.putNormasLiquidos(data, this.NormasId).subscribe(res => {\n          this.onGetNormas();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: 'No hay usuarios por favor Agregue uno'\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      } else {\n        this._activatedRoute.params.subscribe(params => {\n          const orden_id = params['orden_id'];\n          const informe_id = params['informe_id'];\n          let data = Object.assign(Object.assign({}, this.Normas.value), {\n            orden_id,\n            informe_id\n          });\n\n          this._liquidos_penetrantes.postNormasLiquidos(data).subscribe(res => {}, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status === 404) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'info',\n                  title: 'No hay usuarios por favor Agregue uno'\n                });\n              } else if (error.status === 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.message\n                });\n              } else if (error.status === 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        });\n      }\n    }\n\n    onGetMaterialesUtilizados() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getMaterialesUtilizados(orden_id, informe_id).subscribe(data => {\n          this.MaterialesUtilizados = data.body;\n          console.log('MaterialesUtilizados', this.MaterialesUtilizados);\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.MaterialesUtilizadosStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onClickEditMaterialesUtilizados(data) {\n      this.MaterialesUtilizadosId = data._id;\n      this.MaterialesUtilizadosStatus = true;\n      this.MaterialesUtilizados.splice(data.actividad, 1);\n      this.Materiales_Utilizados.patchValue(data);\n    }\n\n    cancelarEditMaterialesUtilizados() {\n      this.onGetMaterialesUtilizados();\n      this.Materiales_Utilizados.reset();\n      this.MaterialesUtilizadosStatus = false;\n    }\n\n    onSubmitMaterialesUtilizados() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Materiales_Utilizados.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postMaterialesUtilizados(data).subscribe(res => {\n          this.onGetMaterialesUtilizados();\n          this.Materiales_Utilizados.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarMaterialesUtilizados() {\n      if (this.Materiales_Utilizados.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putMaterialesUtilizados(this.Materiales_Utilizados.value, this.MaterialesUtilizadosId).subscribe(res => {\n          this.Materiales_Utilizados.reset();\n          this.onGetMaterialesUtilizados();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    }\n\n    onGetNormasProcess() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getNormasProce(orden_id, informe_id).subscribe(res => {\n          this.NormasProceId = res.body._id;\n          console.log('NORMAS PROSSSSS', res.body);\n          this.Normas_ProcessModel.patchValue(res.body);\n          this.NormasProceBtnSave = false;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {} else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onSubmitNormasProce() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Normas_ProcessModel.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postNormasProce(data).subscribe(res => {\n          this.onGetNormasProcess();\n          this.Normas_ProcessModel.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditNormasProce() {\n      if (this.NormasProceId) {\n        let data = Object.assign({}, this.Normas_ProcessModel.value); // console.log(data)\n\n        this._liquidos_penetrantes.putNormasProces(data, this.NormasProceId).subscribe(res => {\n          this.onGetNormasProcess();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: 'No hay usuarios por favor Agregue uno'\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      } else {\n        this._activatedRoute.params.subscribe(params => {\n          const orden_id = params['orden_id'];\n          const informe_id = params['informe_id'];\n          let data = Object.assign(Object.assign({}, this.Normas_ProcessModel.value), {\n            orden_id,\n            informe_id\n          });\n\n          this._liquidos_penetrantes.postNormasProce(data).subscribe(res => {}, error => {\n            var errorMessage = error;\n\n            if (errorMessage != null) {\n              var body = error.error;\n\n              if (error.status === 404) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'info',\n                  title: 'No hay usuarios por favor Agregue uno'\n                });\n              } else if (error.status === 500) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: body.message\n                });\n              } else if (error.status === 0) {\n                const Toast = Swal.mixin({\n                  toast: true,\n                  position: 'center',\n                  showConfirmButton: false,\n                  timer: 4000,\n                  timerProgressBar: true,\n                  width: '300px'\n                });\n                Toast.fire({\n                  icon: 'error',\n                  title: 'Por favor compruebe su conexión de internet'\n                });\n              }\n            }\n          });\n        });\n      }\n    }\n\n    onGetParametrosOp() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getParametros(orden_id, informe_id).subscribe(data => {\n          this.ParametrosOp = data.body;\n          console.log('ok', data.body);\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.ParametrosOpStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onClickEditParametrosOp(data) {\n      this.ParametrosOpId = data._id;\n      this.ParametrosOpStatus = true;\n      this.ParametrosOp.splice(data.actividad, 1);\n      this.Parametros_operacion.patchValue(data);\n    }\n\n    cancelarEditParametrosOp() {\n      this.onGetParametrosOp();\n      this.Parametros_operacion.reset();\n      this.ParametrosOpStatus = false;\n    }\n\n    onSubmitParametrosOp() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Parametros_operacion.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postParametros(data).subscribe(res => {\n          this.onGetParametrosOp();\n          this.Parametros_operacion.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarParametrosOp() {\n      if (this.Parametros_operacion.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putParametros(this.Parametros_operacion.value, this.ParametrosOpId).subscribe(res => {\n          this.Parametros_operacion.reset();\n          this.onGetParametrosOp();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    }\n\n    onGetElementosInspeccionados() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getElementosInspeccionados(orden_id, informe_id).subscribe(res => {\n          this.ElementosInspeccionadosId = res.body._id;\n          this.ElementosInspeccionados.patchValue(res.body);\n          this.ElementosInspeccionadosBtnSave = false;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.NormasStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onSubmitElementosInspeccionados() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.ElementosInspeccionados.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postElementosInspeccionados(data).subscribe(res => {\n          this.onGetElementosInspeccionados();\n          this.ElementosInspeccionados.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarElementosInspeccionados() {\n      if (this.ElementosInspeccionados.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putElementosInspeccionados(this.ElementosInspeccionados.value, this.ElementosInspeccionadosId).subscribe(res => {\n          this.ElementosInspeccionados.reset();\n          this.onGetElementosInspeccionados();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    }\n\n    onGetInterpretacion() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getInterpretacion(orden_id, informe_id).subscribe(data => {\n          this.InterpretacionEvaluacion = data.body;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.InterpretacionEvaluacionStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onClickEditInterpretacionEvaluacion(data) {\n      this.InterpretacionEvaluacionId = data._id;\n      this.InterpretacionEvaluacionStatus = true;\n      this.InterpretacionEvaluacion.splice(data.actividad, 1);\n      this.Interpretacion_evaluacion.patchValue(data);\n    }\n\n    cancelarEditInterpretacion() {\n      this.onGetInterpretacion();\n      this.Interpretacion_evaluacion.reset();\n      this.InterpretacionEvaluacionStatus = false;\n    }\n\n    onSubmitInterpretacion() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Interpretacion_evaluacion.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postInterpretacion(data).subscribe(res => {\n          this.onGetInterpretacion();\n          this.Interpretacion_evaluacion.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarInterpretacion() {\n      if (this.Interpretacion_evaluacion.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putInterpretacion(this.Interpretacion_evaluacion.value, this.InterpretacionEvaluacionId).subscribe(res => {\n          this.Interpretacion_evaluacion.reset();\n          this.onGetInterpretacion();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    }\n\n    onGetObservaciones() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getObservaciones(orden_id, informe_id).subscribe(res => {\n          this.ObservacionesId = res.body._id;\n          this.Observaciones.patchValue(res.body);\n          console.log('ob', res);\n          this.ObservacionesStatus = false;\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.ObservacionesStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onSubmitObservaciones() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        let data = Object.assign(Object.assign({}, this.Observaciones.value), {\n          orden_id: orden_id,\n          informe_id: informe_id\n        });\n\n        this._liquidos_penetrantes.postObservaciones(data).subscribe(res => {\n          this.onGetObservaciones();\n          this.Observaciones.reset();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onEditarObservaciones() {\n      if (this.Observaciones.value.actividad == '') {} else {\n        this._liquidos_penetrantes.putObservaciones(this.Observaciones.value, this.ObservacionesId).subscribe(res => {\n          this.Observaciones.reset();\n          this.onGetObservaciones();\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      }\n    } //REGISTRO FOTOGRÁFICO\n\n\n    onPhotoSelectedRegistroFotos(event) {\n      if (event.target.files && event.target.files[0]) {\n        this.fileRegistroFotos = event.target.files[0];\n      }\n    }\n\n    onSubmitRegistroFotos() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n        const title = this.RegistroFotosForm.get('title').value;\n        const data = {\n          orden_id,\n          informe_id,\n          title\n        };\n\n        this._liquidos_penetrantes.postRegistroFotos(data, this.fileRegistroFotos).subscribe(res => {\n          this.onGetRegistroFotos();\n          this.RegistroFotosForm.reset();\n          this.myInputVariableRegistroFotos.nativeElement.value = \"\";\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'info',\n                title: body.message\n              });\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    onGetRegistroFotos() {\n      this._activatedRoute.params.subscribe(params => {\n        const {\n          orden_id,\n          informe_id\n        } = params;\n\n        this._liquidos_penetrantes.getRegistroFotografico(orden_id, informe_id).subscribe(res => {\n          this.RegistroFotos = res.body;\n          res.body.map(item => {\n            const data = {\n              image: `${this.url}/img-uploads/${item.image}`,\n              title: item.title\n            };\n            this.imageObjectRegistroFotos.push(data);\n          });\n        }, error => {\n          var errorMessage = error;\n\n          if (errorMessage != null) {\n            var body = error.error;\n\n            if (error.status === 404) {\n              this.ResultadosStatus = false;\n            } else if (error.status === 500) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: body.message\n              });\n            } else if (error.status === 0) {\n              const Toast = Swal.mixin({\n                toast: true,\n                position: 'center',\n                showConfirmButton: false,\n                timer: 4000,\n                timerProgressBar: true,\n                width: '300px'\n              });\n              Toast.fire({\n                icon: 'error',\n                title: 'Por favor compruebe su conexión de internet'\n              });\n            }\n          }\n        });\n      });\n    }\n\n    showLightboxRegistroFotos(index) {\n      this.selectedImageIndexRegistroFotos = index;\n      this.showFlagRegistroFotos = true;\n    }\n\n    closeEventHandlerRegistroFotos() {\n      this.showFlagRegistroFotos = false;\n      this.selectedImageIndexRegistroFotos = -1;\n    }\n\n  }\n\n  LiquidosPenetrantesComponent.ɵfac = function LiquidosPenetrantesComponent_Factory(t) {\n    return new (t || LiquidosPenetrantesComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.OrdenesService), i0.ɵɵdirectiveInject(i4.LiquidosPenetrantesService), i0.ɵɵdirectiveInject(i5.InformesRutasService));\n  };\n\n  LiquidosPenetrantesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LiquidosPenetrantesComponent,\n    selectors: [[\"app-liquidos-penetrantes\"]],\n    viewQuery: function LiquidosPenetrantesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myInputVariableRegistroFotos = _t.first);\n      }\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"flex\", \"items-start\", \"justify-between\"], [\"class\", \"grid grid-cols-2 gap-x-4 gap-y-1\", 4, \"ngIf\"], [1, \"projects-section-header\"], [1, \"flex\", \"sm\", \"items-start\", \"sm:items-center\", \"sm:justify-between\", \"py-8\", \"px-6\", \"px-8\"], [1, \"text-3xl\", \"font-extrabold\", \"tracking-tight\", \"leading-none\"], [\"class\", \"p-3 bg-card shadow rounded overflow-hidden\", 3, \"formGroup\", 4, \"ngIf\"], [1, \"grid\", \"grid-cols-2\", \"gap-x-4\", \"gap-y-1\"], [1, \"text-4xl\", \"tracking-tight\", \"text-secondary\"], [1, \"text-4xl\"], [1, \"font-medium\", \"tracking-tight\", \"text-secondary\"], [1, \"font-medium\"], [1, \"p-3\", \"bg-card\", \"shadow\", \"rounded\", \"overflow-hidden\", 3, \"formGroup\"], [\"orientation\", \"vertical\", 3, \"selectedIndex\", \"selectionChange\"], [\"stepper\", \"\"], [3, \"stepControl\"], [3, \"formGroup\"], [\"matStepLabel\", \"\"], [1, \"flex\"], [\"appearance\", \"outline\", 1, \"flex-auto\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"required\", \"\", 3, \"placeholder\", \"formControlName\"], [1, \"flex\", \"justify-end\", \"mt-8\", \"ng-star-inserted\"], [\"type\", \"submit\", \"mat-button\", \"\", \"matStepperNext\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"next-save\", 3, \"disabled\", \"click\"], [1, \"mat-button-wrapper\"], [\"matripple\", \"\", 1, \"mat-ripple\", \"mat-button-ripple\"], [1, \"mat-button-focus-overlay\"], [1, \"content-inputs\", \"flex\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"required\", \"\", 3, \"formControlName\", \"placeholder\"], [1, \"flex\", \"justify-end\"], [\"class\", \"mat-focus-indicator mat-stepper-next px-8 mat-flat-button mat-button-base mat-primary back mr-2\", \"mat-flat-button\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"submit\", \"mat-flat-button\", \"\", \"type\", \"button\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"table\", \"table-hover\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-flat-button\", \"\", \"type\", \"button\", \"matStepperPrevious\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"back\", \"mr-2\"], [\"type\", \"button\", \"mat-flat-button\", \"\", \"type\", \"button\", \"matStepperNext\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"next-save\"], [1, \"my-6\", \"font-medium\"], [\"type\", \"submit\", \"mat-button\", \"\", \"matStepperNext\", \"\", \"matStepperNext\", \"\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"next-save\", 3, \"disabled\", \"click\"], [\"placeholder\", \"Elementos Inspeccionados\", 3, \"formControlName\", \"modules\"], [1, \"flex\", \"justify-end\", \"mt-3\"], [3, \"formControlName\"], [3, \"value\"], [\"placeholder\", \"Observaciones\", 3, \"formControlName\", \"modules\"], [\"matPrefix\", \"\", 1, \"icon-size-5\", \"icon-form\"], [1, \"content-inputs\"], [1, \"mb-3\"], [\"for\", \"formFileSm\", 1, \"form-label\"], [\"id\", \"formFileSmRegistroFotos\", \"type\", \"file\", \"accept\", \"image/x-png,image/jpeg,image/jpg\", 1, \"form-control\", \"form-control-sm\", 3, \"change\"], [\"formFileSmRegistroFotos\", \"\"], [1, \"flex\", \"justify-end\", \"mb-3\"], [\"type\", \"submit\", \"mat-flat-button\", \"\", \"type\", \"submit\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"btn\", \"btn-success\", \"bt-m\", 3, \"click\"], [1, \"marging\", \"row-img\"], [1, \"column-img\"], [\"cols\", \"2\", \"rowHeight\", \"2:1\"], [4, \"ngFor\", \"ngForOf\"], [3, \"images\", \"imageIndex\", \"show\", \"close\"], [\"mat-flat-button\", \"\", \"type\", \"button\", 1, \"mat-focus-indicator\", \"mat-stepper-next\", \"px-8\", \"mat-flat-button\", \"mat-button-base\", \"mat-primary\", \"back\", \"mr-2\", 3, \"click\"], [3, \"click\"], [1, \"mat-step-custom-click\"], [1, \"mat-step-custom-click\", 3, \"click\"], [\"mat-card-image\", \"\", 1, \"img\", 3, \"src\", \"alt\", \"click\"], [\"mat-line\", \"\"], [\"mat-mini-fab\", \"\", \"color\", \"warn\"]],\n    template: function LiquidosPenetrantesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, LiquidosPenetrantesComponent_div_1_Template, 22, 8, \"div\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6, \"Informe inspecci\\u00F3n l\\u00EDquidos penetrantes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, LiquidosPenetrantesComponent_form_7_Template, 241, 91, \"form\", 5);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.detallesOrden);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.autoSaveIndex);\n      }\n    },\n    directives: [i6.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i7.MatStepper, i7.MatStep, i7.MatStepLabel, i8.MatFormField, i8.MatLabel, i9.MatInput, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i10.MatButton, i7.MatStepperNext, i6.NgForOf, i7.MatStepperPrevious, i11.QuillEditorComponent, i12.MatSelect, i13.MatOption, i14.MatIcon, i8.MatPrefix, i15.MatGridList, i16.NgImageFullscreenViewComponent, i15.MatGridTile, i17.MatCardImage, i15.MatGridTileText, i15.MatGridTileFooterCssMatStyler, i13.MatLine],\n    pipes: [i6.DatePipe],\n    styles: [\".gap-y-1[_ngcontent-%COMP%] {\\n    grid-row-gap: 0.25rem !important;\\n    row-gap: 0.25rem !important;\\n  }\\n\\n  .gap-x-4[_ngcontent-%COMP%] {\\n    grid-column-gap: 1rem !important;\\n    column-gap: 1rem !important;\\n  }\\n\\n  .grid-cols-2[_ngcontent-%COMP%] {\\n    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;\\n  }\\n\\n  .grid[_ngcontent-%COMP%] {\\n    display: grid !important;\\n  }\\n\\n  @media (min-width: 600px) {\\n    .sm\\\\:justify-between[_ngcontent-%COMP%] {\\n      justify-content: space-between !important;\\n    }\\n  }\\n\\n  @media (min-width: 600px) {\\n    .sm[_ngcontent-%COMP%] {\\n      align-items: center !important;\\n    }\\n  }\\n\\n  @media (min-width: 600px) {\\n    .sm[_ngcontent-%COMP%] {\\n      flex-direction: row !important;\\n    }\\n  }\\n\\n  @media (min-width: 960px) {\\n    .px-8[_ngcontent-%COMP%] {\\n      padding-left: 2rem !important;\\n      padding-right: 2rem !important;\\n    }\\n  }\\n\\n  .tracking-tight[_ngcontent-%COMP%] {\\n    letter-spacing: -0.025em !important;\\n  }\\n\\n  .leading-none[_ngcontent-%COMP%] {\\n    line-height: 1 !important;\\n  }\\n\\n  .font-extrabold[_ngcontent-%COMP%] {\\n    font-weight: 800 !important;\\n  }\\n\\n  .text-4xl[_ngcontent-%COMP%] {\\n    font-size: 2rem !important;\\n  }\\n\\n  @media (min-width: 600px) {\\n    .sm\\\\:mt-0[_ngcontent-%COMP%] {\\n      margin-top: 0 !important;\\n    }\\n  }\\n\\n  .mat-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%], .mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%] {\\n    padding: 0 20px !important;\\n    border-radius: 9999px !important;\\n  }\\n\\n  .mt-4[_ngcontent-%COMP%] {\\n    margin-top: 1rem !important;\\n  }\\n\\n  .py-8[_ngcontent-%COMP%] {\\n    padding-top: 2rem !important;\\n    padding-bottom: 2rem !important;\\n  }\\n\\n  .px-6[_ngcontent-%COMP%] {\\n    padding-left: 1.5rem !important;\\n    padding-right: 1.5rem !important;\\n  }\\n\\n  .items-start[_ngcontent-%COMP%] {\\n    align-items: flex-start !important;\\n  }\\n\\n  .flex-col[_ngcontent-%COMP%] {\\n    flex-direction: column !important;\\n  }\\n\\n  .divide-y[_ngcontent-%COMP%] {\\n    border: calc(1px * calc(1 - 0)) rgba(0, 0, 0, 0.125) solid !important;\\n    border-radius: 10px;\\n  }\\n\\n  .select-none[_ngcontent-%COMP%] {\\n    -webkit-user-select: none !important;\\n    user-select: none !important;\\n  }\\n\\n  .w-full[_ngcontent-%COMP%] {\\n    width: 100% !important;\\n  }\\n\\n  .h-16[_ngcontent-%COMP%] {\\n    height: 4rem !important;\\n  }\\n\\n  .pl-10[_ngcontent-%COMP%] {\\n    padding-left: 2.5rem !important;\\n  }\\n\\n  .items-center[_ngcontent-%COMP%] {\\n    align-items: center !important;\\n  }\\n\\n  .h-full[_ngcontent-%COMP%] {\\n    height: 100% !important;\\n  }\\n\\n  .flex[_ngcontent-%COMP%] {\\n    display: flex !important;\\n  }\\n\\n  .relative[_ngcontent-%COMP%] {\\n    position: relative !important;\\n  }\\n\\n  .bg-primary[_ngcontent-%COMP%] {\\n    --tw-bg-opacity: 1 !important;\\n    background-color: (rgba(79, 70, 229), var(--tw-bg-opacity)) !important;\\n  }\\n\\n  .flex-0[_ngcontent-%COMP%] {\\n    flex: 0 0 auto !important;\\n  }\\n\\n  .w-1[_ngcontent-%COMP%] {\\n    width: 0.25rem !important;\\n  }\\n\\n  .z-10[_ngcontent-%COMP%] {\\n    z-index: 10 !important;\\n  }\\n\\n  .-bottom-px[_ngcontent-%COMP%] {\\n    bottom: -1px !important;\\n  }\\n\\n  .-top-px[_ngcontent-%COMP%] {\\n    top: -1px !important;\\n  }\\n\\n  .right-0[_ngcontent-%COMP%] {\\n    right: 0px !important;\\n  }\\n\\n  .absolute[_ngcontent-%COMP%], .\\\\!absolute[_ngcontent-%COMP%] {\\n    position: absolute !important;\\n  }\\n\\n  .items-center[_ngcontent-%COMP%] {\\n    align-items: center !important;\\n  }\\n\\n  .cursor-move[_ngcontent-%COMP%] {\\n    cursor: move !important;\\n  }\\n\\n  .w-8[_ngcontent-%COMP%] {\\n    width: 2rem !important;\\n  }\\n\\n  .left-0[_ngcontent-%COMP%] {\\n    left: 0px !important;\\n  }\\n\\n  .inset-y-0[_ngcontent-%COMP%] {\\n    top: 0px !important;\\n    bottom: 0px !important;\\n  }\\n\\n  .icon-size-5[_ngcontent-%COMP%] {\\n    width: 1.25rem !important;\\n    height: 1.25rem !important;\\n    min-width: 1.25rem !important;\\n    min-height: 1.25rem !important;\\n    font-size: 1.25rem !important;\\n    line-height: 1.25rem !important;\\n  }\\n\\n  .mat-icon[_ngcontent-%COMP%] {\\n    display: inline-flex !important;\\n    align-items: center;\\n    justify-content: center;\\n    width: 24px;\\n    min-width: 24px;\\n    height: 24px;\\n    min-height: 24px;\\n    font-size: 24px;\\n    line-height: 24px;\\n    -webkit-appearance: none !important;\\n  }\\n\\n  .text-hint[_ngcontent-%COMP%] {\\n    --tw-text-opacity: 1 !important;\\n    color: rgba(148, 163, 184, var(--tw-text-opacity)) !important;\\n  }\\n\\n  .bg-gray-100[_ngcontent-%COMP%]:hover {\\n    background-color: rgb(241 245 249);\\n  }\\n\\n  .leading-none[_ngcontent-%COMP%] {\\n    line-height: 1 !important;\\n  }\\n\\n  .-ml-2\\\\.5[_ngcontent-%COMP%] {\\n    margin-left: -0.625rem !important;\\n  }\\n\\n  .mr-2[_ngcontent-%COMP%] {\\n    margin-right: 0.5rem !important;\\n  }\\n\\n  .mat-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-fab[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-icon-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-mini-fab[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-raised-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%]   .mat-button-wrapper[_ngcontent-%COMP%] {\\n    position: relative;\\n    display: inline-flex !important;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100%;\\n    z-index: 2;\\n  }\\n\\n  .pr-7[_ngcontent-%COMP%] {\\n    padding-right: 1.75rem !important;\\n  }\\n\\n  .items-center[_ngcontent-%COMP%] {\\n    align-items: center !important;\\n  }\\n\\n  .min-w-0[_ngcontent-%COMP%] {\\n    min-width: 0px !important;\\n  }\\n\\n  .h-full[_ngcontent-%COMP%] {\\n    height: 100% !important;\\n  }\\n\\n  .link-informe[_ngcontent-%COMP%] {\\n    color: inherit;\\n    text-decoration: inherit;\\n  }\\n\\n  .truncate[_ngcontent-%COMP%] {\\n    overflow: hidden !important;\\n    text-overflow: ellipsis !important;\\n    white-space: nowrap !important;\\n  }\\n\\n  .w-4[_ngcontent-%COMP%] {\\n    width: 1rem !important;\\n  }\\n\\n  .h-4[_ngcontent-%COMP%] {\\n    height: 1rem !important;\\n  }\\n\\n  .mr-3[_ngcontent-%COMP%] {\\n    margin-right: 0.75rem !important;\\n  }\\n\\n  .text-sm[_ngcontent-%COMP%] {\\n    font-size: 0.75rem !important;\\n  }\\n\\n  .whitespace-nowrap[_ngcontent-%COMP%] {\\n    white-space: nowrap !important;\\n  }\\n\\n  .text-secondary[_ngcontent-%COMP%] {\\n    --tw-text-opacity: 1 !important;\\n    color: rgba(100, 116, 139, var(--tw-text-opacity)) !important;\\n  }\\n\\n  .icon-size-4[_ngcontent-%COMP%] {\\n    width: 1rem !important;\\n    height: 1rem !important;\\n    min-width: 1rem !important;\\n    min-height: 1rem !important;\\n    font-size: 1rem !important;\\n    line-height: 1rem !important;\\n  }\\n\\n  .text-green-600[_ngcontent-%COMP%] {\\n    --tw-text-opacity: 1 !important;\\n    color: rgb(22 163 74 / var(--tw-text-opacity)) !important;\\n  }\\n\\n  .flex-auto[_ngcontent-%COMP%] {\\n    flex: 1 1 auto !important;\\n  }\\n\\n  .bg-primary[_ngcontent-%COMP%] {\\n    --tw-bg-opacity: 1 !important;\\n    background-color: rgba(79, 70, 229, var(--tw-bg-opacity)) !important;\\n  }\\n\\n  .flex-0[_ngcontent-%COMP%] {\\n    flex: 0 0 auto !important;\\n  }\\n\\n  .w-1[_ngcontent-%COMP%] {\\n    width: 0.25rem !important;\\n  }\\n\\n  .z-10[_ngcontent-%COMP%] {\\n    z-index: 10 !important;\\n  }\\n\\n  .-bottom-px[_ngcontent-%COMP%] {\\n    bottom: -1px !important;\\n  }\\n\\n  .-top-px[_ngcontent-%COMP%] {\\n    top: -1px !important;\\n  }\\n\\n  .right-0[_ngcontent-%COMP%] {\\n    right: 0px !important;\\n  }\\n\\n  .indication[_ngcontent-%COMP%] {\\n    display: none;\\n    border-top-right-radius: 10px;\\n    border-bottom-right-radius: 10px;\\n  }\\n\\n  .bg-gray-100[_ngcontent-%COMP%]:hover    + .indication[_ngcontent-%COMP%] {\\n    display: block !important;\\n  }\\n\\n    .mat-form-field-flex > .mat-form-field-infix {\\n    padding: 0.3em 0px !important;\\n  }\\n\\n    .mat-form-field-label-wrapper {\\n    top: -1.5em;\\n  }\\n\\n   \\n    .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float\\n    .mat-form-field-label {\\n    transform: translateY(-1.1em) scale(0.75);\\n    width: 133.33333%;\\n  }\\n\\n  .icon-form[_ngcontent-%COMP%] {\\n    color: rgba(148, 163, 184, 1) !important;\\n    margin-right: 12px;\\n  }\\n\\n    .mat-step-header .mat-step-icon-selected, .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\\n    background-color: #4f46e5 !important;\\n    color: #ffffff !important;\\n  }\\n\\n  .justify-end[_ngcontent-%COMP%] {\\n    justify-content: flex-end !important;\\n  }\\n\\n  .next-save[_ngcontent-%COMP%] {\\n    background-color: #3e66e9;\\n  }\\n\\n  .back[_ngcontent-%COMP%] {\\n    background-color: #1e293b;\\n  }\\n\\n  .content-inputs[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]    + .mat-form-field[_ngcontent-%COMP%] {\\n    margin-left: 8px;\\n  }\\n\\n  table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    text-align: center;\\n  }\\n\\n  .card[_ngcontent-%COMP%] {\\n    box-shadow: 1px 1px 16px rgb(202, 202, 202);\\n    z-index: 100 !important;\\n  }\\n\\n  .projects-section-header[_ngcontent-%COMP%] {\\n    margin-top: -20px;\\n    margin-bottom: 50px;\\n  }\\n\\n  .btn-close[_ngcontent-%COMP%] {\\n    width: 5px !important;\\n    height: 5px !important;\\n    background-color: rgb(233, 65, 61);\\n    border-radius: 50%;\\n  }\\n\\n  .status[_ngcontent-%COMP%] {\\n    border-radius: 4px;\\n    align-items: center;\\n    padding: 4px 8px;\\n    font-size: 12px;\\n  }\\n\\n  .status[_ngcontent-%COMP%]:before {\\n    content: \\\"\\\";\\n    width: 4px;\\n    height: 4px;\\n    border-radius: 50%;\\n    margin-right: 4px;\\n  }\\n\\n  .status.active[_ngcontent-%COMP%] {\\n    color: #2ba972;\\n    background-color: rgba(43, 169, 114, 0.2);\\n  }\\n\\n  .status.active[_ngcontent-%COMP%]:before {\\n    background-color: #2ba972;\\n  }\\n\\n  .status.disabled-btn[_ngcontent-%COMP%] {\\n    color: #59719d;\\n    background-color: rgba(89, 113, 157, 0.2);\\n  }\\n\\n  .status.disabled-btn[_ngcontent-%COMP%]:before {\\n    background-color: #59719d;\\n  }\\n\\n  .img-user[_ngcontent-%COMP%] {\\n    width: 40px;\\n    height: 40px;\\n    object-fit: cover;\\n    border-radius: 50%;\\n    margin-right: 4 px;\\n    float: left;\\n  }\\n\\n  .alert-danger[_ngcontent-%COMP%] {\\n    margin-top: 15px;\\n    padding: 10px;\\n  }\\n\\n  .content[_ngcontent-%COMP%] {\\n    flex: 2;\\n    background-color: #fff;\\n    border-radius: 32px;\\n    padding: 32px 32px 10px 32px;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .table[_ngcontent-%COMP%] {\\n    border-spacing: 0 0.85rem !important;\\n    border-collapse: separate !important;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   .dropdown[_ngcontent-%COMP%] {\\n    display: inline-block;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    vertical-align: middle;\\n    margin-bottom: 10px;\\n    border: none;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    border: none;\\n    font-size: 12px;\\n    letter-spacing: 1px;\\n    text-transform: uppercase;\\n    background: transparent;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    background: #fff;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child {\\n    border-top-left-radius: 10px;\\n    border-bottom-left-radius: 10px;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child {\\n    border-top-right-radius: 10px;\\n    border-bottom-right-radius: 10px;\\n  }\\n\\n  tr[_ngcontent-%COMP%] {\\n    box-shadow: 1px 1px 16px rgb(202, 202, 202);\\n    border-radius: 20px;\\n  }\\n\\n  table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[role=\\\"row\\\"][_ngcontent-%COMP%]    > td[_ngcontent-%COMP%]:first-child:before, table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[role=\\\"row\\\"][_ngcontent-%COMP%]    > th[_ngcontent-%COMP%]:first-child:before {\\n    top: 28px;\\n    left: 14px;\\n    border: none;\\n    box-shadow: none;\\n  }\\n\\n  table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[role=\\\"row\\\"][_ngcontent-%COMP%]    > td[_ngcontent-%COMP%]:first-child, table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[role=\\\"row\\\"][_ngcontent-%COMP%]    > th[_ngcontent-%COMP%]:first-child {\\n    padding-left: 48px;\\n  }\\n\\n  table.dataTable[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr.child[_ngcontent-%COMP%]   ul.dtr-details[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n\\n  table.dataTable[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr.child[_ngcontent-%COMP%]   span.dtr-title[_ngcontent-%COMP%] {\\n    min-width: 50%;\\n  }\\n\\n  table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]    > td.child[_ngcontent-%COMP%], table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]    > th.child[_ngcontent-%COMP%], table.dataTable.dtr-inline.collapsed[_ngcontent-%COMP%]    > tbody[_ngcontent-%COMP%]    > tr[_ngcontent-%COMP%]    > td.dataTables_empty[_ngcontent-%COMP%] {\\n    padding: 0.75rem 1rem 0.125rem;\\n  }\\n\\n  div.dataTables_wrapper[_ngcontent-%COMP%]   div.dataTables_length[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], div.dataTables_wrapper[_ngcontent-%COMP%]   div.dataTables_filter[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    margin-bottom: 0;\\n  }\\n\\n  @media (max-width: 767px) {\\n    div.dataTables_wrapper[_ngcontent-%COMP%]   div.dataTables_paginate[_ngcontent-%COMP%]   ul.pagination[_ngcontent-%COMP%] {\\n      justify-content: center !important;\\n      margin-top: 1rem;\\n    }\\n    .table-responsive[_ngcontent-%COMP%] {\\n      overflow-x: auto !important;\\n    }\\n  }\\n\\n  @media (min-width: 767px) {\\n    .table-responsive[_ngcontent-%COMP%] {\\n      overflow-x: initial !important;\\n    }\\n  }\\n\\n  @media (max-width: 420px) {\\n    .projects-section-header[_ngcontent-%COMP%] {\\n      margin-top: 10px !important;\\n      margin-bottom: 50px;\\n    }\\n  }\\n\\n  .dropdown-menu[_ngcontent-%COMP%] {\\n    padding: 0.25rem 0;\\n  }\\n\\n  .dropdown-item[_ngcontent-%COMP%] {\\n    padding: 0.5rem 1rem;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    color: #212529;\\n  }\\n\\n  .table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover, .table[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus {\\n    text-decoration: none;\\n  }\\n\\n  table.dataTable[_ngcontent-%COMP%] {\\n    margin-top: 12px !important;\\n  }\\n\\n  .icon[_ngcontent-%COMP%]    > .bx[_ngcontent-%COMP%] {\\n    display: block;\\n    min-width: 1.5em;\\n    min-height: 1.5em;\\n    text-align: center;\\n    font-size: 1.0625rem;\\n  }\\n\\n  .click-table-edit[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n  }\\n\\n  .mat-step-custom-click[_ngcontent-%COMP%] {\\n    top: 0;\\n    left: 0;\\n    width: 130px;\\n    height: 72px;\\n    position: absolute;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .example-card[_ngcontent-%COMP%] {\\n    box-sizing: border-box;\\n    max-width: 30%;\\n    margin: 8px;\\n  }\\n\\n  .img[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n  }\\n\\n  .example-full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-top: 10px;\\n  }\\n\\n  .btn-m[_ngcontent-%COMP%] {\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n  }\\n\\n  .row-img[_ngcontent-%COMP%] {\\n    display: flex !important;\\n    flex-direction: row !important;\\n    flex-wrap: wrap !important;\\n    width: 100% !important;\\n  }\\n\\n  .column-img[_ngcontent-%COMP%] {\\n    display: flex !important;\\n    flex-direction: column !important;\\n    flex-basis: 100% !important;\\n    flex: 1 !important;\\n  }\\n\\n  .my-grid-tile[_ngcontent-%COMP%] {\\n    margin: 10px !important;\\n  }\\n\\n  .firma[_ngcontent-%COMP%] {\\n    border: 2px dotted #CCCCCC;\\n    border-radius: 5px;\\n    cursor: crosshair;\\n  }\\n\\n  #multiplicar[_ngcontent-%COMP%]{\\n    width: 70px;\\n    margin-right: 10px;\\n  }\"]\n  });\n  return LiquidosPenetrantesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}