{"version":3,"names":["NgImageFullscreenViewService","prototype","isBase64","str","test","base64FileExtension","substring","length","indexOf","type","Injectable","args","providedIn","NgImageFullscreenViewComponent","cdRef","sanitizer","elRef","imageFullscreenViewService","document","this","totalImages","nextImageIndex","popupWidth","marginLeft","imageFullscreenView","lightboxPrevDisable","lightboxNextDisable","showLoading","effectStyle","speed","title","currentImageIndex","images","videoAutoPlay","direction","paginationShow","infinite","arrowKeyMove","showVideoControls","close","EventEmitter","prevImage","nextImage","Object","defineProperty","set","index","undefined","nextPrevDisable","visiableFlag","nativeElement","ownerDocument","body","style","overflow","setPopupSliderWidth","data","onResize","event","handleKeyboardEvent","key","toLowerCase","nextImageLightbox","prevImageLightbox","closeLightbox","ngOnDestroy","resetState","_this","window","innerWidth","getImageData","setTimeout","emit","applyButtonDisableCondition","iframeI","getElementsByTagName","contentWindow","postMessage","videoI","pause","swipeLightboxImg","e","when","coord","changedTouches","pageX","pageY","time","Date","getTime","swipeLightboxImgCoord","swipeLightboxImgTime","Math","abs","Component","selector","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","DomSanitizer","ElementRef","decorators","Inject","DOCUMENT","Input","Output","HostListener","youtubeRegExp","validFileExtensions","validVideoExtensions","SliderCustomImageComponent","YOUTUBE","IMAGE","VIDEO","fileUrl","fileExtension","isVideo","alt","url","bypassSecurityTrustResourceUrl","split","pop","trim","match","videoClickHandler","srcElement","paused","play","NgImageFullscreenViewModule","NgModule","imports","CommonModule","declarations","exports"],"sources":["../../../projects/ng-image-fullscreen-view/src/lib/ng-image-fullscreen-view.service.ts","../../../projects/ng-image-fullscreen-view/src/lib/ng-image-fullscreen-view.component.ts","../../../projects/ng-image-fullscreen-view/src/lib/slider-custom-image/slider-custom-image.component.ts","../../../projects/ng-image-fullscreen-view/src/lib/ng-image-fullscreen-view.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgImageFullscreenViewService {\n    constructor() { }\n\n    isBase64(str) {\n        const base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n        return base64regex.test(str);\n\n    }\n\n    base64FileExtension(str) {\n        return str.substring('data:image/'.length, str.indexOf(';base64'));\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    Inject,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    ViewEncapsulation,\n    HostListener,\n    ElementRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NgImageFullscreenViewService } from './ng-image-fullscreen-view.service';\n\nconst LIGHTBOX_NEXT_ARROW_CLICK_MESSAGE = 'lightbox next',\n    LIGHTBOX_PREV_ARROW_CLICK_MESSAGE = 'lightbox previous';\n\n@Component({\n    selector: 'ng-image-fullscreen-view',\n    templateUrl: './ng-image-fullscreen-view.html',\n    styleUrls: ['./ng-image-fullscreen-view.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgImageFullscreenViewComponent implements OnDestroy {\n    totalImages: any = 0;\n    nextImageIndex: any = -1;\n    popupWidth: any = 1200;\n    marginLeft: any = 0;\n    imageFullscreenView: boolean = false;\n    lightboxPrevDisable: boolean = false;\n    lightboxNextDisable: boolean = false;\n    showLoading: boolean = true;\n    effectStyle: string = 'none';\n    speed: any = 1; // default speed in second\n    title: string = '';\n    currentImageIndex: any = 0;\n\n    // for swipe event\n    private swipeLightboxImgCoord?: [any, any];\n    private swipeLightboxImgTime?: any;\n\n    //@ViewChild('lightboxDiv') lightboxDiv : any;\n    //@ViewChild('lightboxImageDiv') lightboxImageDiv;\n\n    // @Inputs\n    @Input() images: Array<object> = [];\n    @Input()\n    set imageIndex(index: any) {\n        if (index !== undefined && index > -1 && index < this.images.length) {\n            this.currentImageIndex = index;\n        }\n        this.nextPrevDisable();\n    }\n    @Input()\n    set show(visiableFlag: any) {\n        this.imageFullscreenView = visiableFlag;\n        this.elRef.nativeElement.ownerDocument.body.style.overflow = '';\n        if (visiableFlag === true) {\n            this.elRef.nativeElement.ownerDocument.body.style.overflow = 'hidden';\n            this.setPopupSliderWidth();\n        }\n    }\n    @Input() videoAutoPlay: boolean = false;\n    @Input() direction: string = 'ltr';\n    @Input() paginationShow: boolean = false;\n    @Input()\n    set animationSpeed(data: any) {\n        if (data\n            && typeof (data) === 'number'\n            && data >= 0.1\n            && data <= 5) {\n            this.speed = data;\n        }\n    }\n    @Input() infinite: boolean = false;\n    @Input() arrowKeyMove: boolean = true;\n    @Input() showVideoControls: boolean = true;\n\n    // @Output\n    @Output() close = new EventEmitter<any>();\n    @Output() prevImage = new EventEmitter<any>();\n    @Output() nextImage = new EventEmitter<any>();\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.effectStyle = 'none';\n        this.setPopupSliderWidth();\n    }\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        if (event && event.key && this.arrowKeyMove) {\n            if (event.key.toLowerCase() === 'arrowright') {\n                this.nextImageLightbox();\n            }\n\n            if (event.key.toLowerCase() === 'arrowleft') {\n                this.prevImageLightbox();\n            }\n\n            if (event.key.toLowerCase() === 'escape') {\n                this.closeLightbox();\n            }\n        }\n    }\n\n    constructor(\n        private cdRef: ChangeDetectorRef,\n        private sanitizer: DomSanitizer,\n        private elRef: ElementRef,\n        public imageFullscreenViewService: NgImageFullscreenViewService,\n        @Inject(DOCUMENT) private document: any) { }\n\n    ngOnDestroy() {\n        this.resetState();\n    }\n\n    setPopupSliderWidth() {\n        if (window && window.innerWidth) {\n            this.popupWidth = window.innerWidth;\n            this.totalImages = this.images.length;\n            if (typeof (this.currentImageIndex) === 'number' && this.currentImageIndex !== undefined) {\n                this.marginLeft = -1 * this.popupWidth * this.currentImageIndex;\n                this.getImageData();\n                this.nextPrevDisable();\n                setTimeout(() => {\n                    this.showLoading = false;\n                }, 500);\n            }\n        }\n    }\n\n    closeLightbox() {\n        this.close.emit();\n    }\n\n    prevImageLightbox() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        if (this.currentImageIndex > 0 && !this.lightboxPrevDisable) {\n            this.currentImageIndex--;\n            this.prevImage.emit();\n            this.marginLeft = -1 * this.popupWidth * this.currentImageIndex;\n            this.getImageData();\n            this.nextPrevDisable();\n        }\n    }\n\n    nextImageLightbox() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        if (this.currentImageIndex < this.images.length - 1 && !this.lightboxNextDisable) {\n            this.currentImageIndex++;\n            this.nextImage.emit();\n            this.marginLeft = -1 * this.popupWidth * this.currentImageIndex;\n            this.getImageData();\n            this.nextPrevDisable();\n        }\n    }\n\n    nextPrevDisable() {\n        this.lightboxNextDisable = true;\n        this.lightboxPrevDisable = true;\n        setTimeout(() => {\n            this.applyButtonDisableCondition();\n        }, this.speed * 1000);\n    }\n\n    applyButtonDisableCondition() {\n        this.lightboxNextDisable = false;\n        this.lightboxPrevDisable = false;\n        if (!this.infinite && this.currentImageIndex >= this.images.length - 1) {\n            this.lightboxNextDisable = true;\n        }\n        if (!this.infinite && this.currentImageIndex <= 0) {\n            this.lightboxPrevDisable = true;\n        }\n    }\n\n    getImageData() {\n        if (this.images\n            && this.images.length\n            && typeof (this.currentImageIndex) === 'number'\n            && this.currentImageIndex !== undefined\n            && this.images[this.currentImageIndex]\n            && (this.images[this.currentImageIndex]['image'] || this.images[this.currentImageIndex]['video'])) {\n            this.title = this.images[this.currentImageIndex]['title'] || '';\n            this.totalImages = this.images.length;\n            for (const iframeI in this.document.getElementsByTagName('iframe')) {\n                if (this.document.getElementsByTagName('iframe')[iframeI]\n                    && this.document.getElementsByTagName('iframe')[iframeI].contentWindow) {\n                    this.document.getElementsByTagName('iframe')[iframeI].contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n                }\n            }\n            for (const videoI in this.document.getElementsByTagName('video')) {\n                if (this.document.getElementsByTagName('video')[videoI] && this.document.getElementsByTagName('video')[videoI].pause) {\n                    this.document.getElementsByTagName('video')[videoI].pause();\n                }\n            }\n        }\n    }\n\n    resetState() {\n        this.images = [];\n    }\n\n    /**\n     * Swipe event handler\n     * Reference from https://stackoverflow.com/a/44511007/2067646\n     */\n    swipeLightboxImg(e: TouchEvent, when: string): void {\n        const coord: [any, any] = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        const time = new Date().getTime();\n\n        if (when === 'start') {\n            this.swipeLightboxImgCoord = coord;\n            this.swipeLightboxImgTime = time;\n        } else if (when === 'end') {\n            const direction = [coord[0] - this.swipeLightboxImgCoord[0], coord[1] - this.swipeLightboxImgCoord[1]];\n            const duration = time - this.swipeLightboxImgTime;\n\n            if (duration < 1000 //\n                && Math.abs(direction[0]) > 30 // Long enough\n                && Math.abs(direction[0]) > Math.abs(direction[1] * 3)) { // Horizontal enough\n                if (direction[0] < 0) {\n                    this.nextImageLightbox();\n                } else {\n                    this.prevImageLightbox();\n                }\n            }\n        }\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { NgImageFullscreenViewService } from '../ng-image-fullscreen-view.service';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'custom-img',\n    templateUrl: './slider-custom-image.component.html'\n})\nexport class SliderCustomImageComponent {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    fileUrl: SafeResourceUrl = '';\n    fileExtension = '';\n    type = this.IMAGE;\n\n    // @inputs\n    @Input() videoAutoPlay: boolean = false;\n    @Input() showVideoControls: number = 1;\n    @Input()\n    set imageUrl(url) {\n        if (url && typeof (url) === 'string') {\n            this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n            this.fileExtension = url.split(/[#?]/)[0].split('.').pop().trim();\n            if (this.imageFullscreenViewService.base64FileExtension(url)\n            && (validFileExtensions.indexOf(this.imageFullscreenViewService.base64FileExtension(url).toLowerCase()) > -1\n            || validVideoExtensions.indexOf(this.imageFullscreenViewService.base64FileExtension(url).toLowerCase()) > -1)) {\n                this.fileExtension = this.imageFullscreenViewService.base64FileExtension(url);\n            }\n            // verify for youtube url\n            const match = url.match(youtubeRegExp);\n            if (match && match[2].length === 11) {\n                this.type = this.YOUTUBE;\n                this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`${'//www.youtube.com/embed/'}${match[2]}${this.videoAutoPlay ? '?autoplay=1&enablejsapi=1' : '?autoplay=0&enablejsapi=1'}${'&controls='}${this.showVideoControls}`);\n            } else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.IMAGE;\n            } else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.VIDEO;\n            }\n        }\n    }\n    @Input() isVideo = false;\n    @Input() alt: String = '';\n    @Input() title: String = '';\n    @Input() direction: string = 'ltr';\n\n    constructor(public imageFullscreenViewService: NgImageFullscreenViewService, private sanitizer: DomSanitizer) {\n    }\n\n    videoClickHandler(event) {\n        if (event && event.srcElement && !this.showVideoControls) {\n            if (event.srcElement.paused) {\n                event.srcElement.play();\n            } else {\n                event.srcElement.pause();\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SliderCustomImageComponent } from './slider-custom-image/slider-custom-image.component';\nimport { NgImageFullscreenViewComponent } from './ng-image-fullscreen-view.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SliderCustomImageComponent,\n        NgImageFullscreenViewComponent\n    ],\n    exports: [\n        NgImageFullscreenViewComponent\n    ]\n})\nexport class NgImageFullscreenViewModule { }\n"],"mappings":"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"}